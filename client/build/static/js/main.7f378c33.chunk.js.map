{"version":3,"sources":["components/NavBar/NavBar.js","pages/HomePage.js","utils/API.js","js/actions/gameActions.js","js/actions/types.js","components/sessionStorage.js","components/DraftPageComp/GameList.js","js/actions/playerActions.js","components/DraftPageComp/Calendar.js","components/DraftPageComp/Drafter.js","components/DraftPageComp/GameOptionsBottom.js","components/DraftPageComp/GameOptionsTop.js","components/Locker.js","pages/DraftPage.js","js/actions/displayActions.js","components/PlayerPageComp/Form.js","components/PlayerPageComp/MemberList.js","components/PlayerPageComp/TenBuckerList.js","pages/PlayerPage.js","js/actions/statsActions.js","components/StatsPageComp/PastGamesList.js","components/StatsPageComp/ScoreBoard.js","components/StatsPageComp/NoStatsBoard.js","pages/StatsPage.js","components/RecordsPageComp/DateRange.js","components/RecordsPageComp/DateSelector.js","components/RecordsPageComp/GameSelector.js","components/RecordsPageComp/PlayerSelector.js","components/RecordsPageComp/PlayerStatsModal.js","components/RecordsPageComp/Showcase.js","components/RecordsPageComp/Filters.js","components/RecordsPageComp/DataChart.js","pages/RecordsPage.js","components/LoginForm.js","js/actions/authenticateActions.js","pages/LoginPage.js","js/reducers/gameReducer.js","js/reducers/displayReducer.js","js/reducers/playerReducer.js","js/reducers/statsReducer.js","js/reducers/authenticateReducer.js","js/reducers/index.js","js/store/index.js","App.js","registerServiceWorker.js","index.js","components/images/logo_sm.jpeg"],"names":["NavBar","react_default","a","createElement","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src","SmallLogo","alt","Component","Home","components_NavBar_NavBar","currentURL","window","location","origin","API","url","axios","get","date","players","post","game_date","delete","gameId","data","put","player","userData","mode","getGame","game","dispatch","then","res","status","Error","statusText","gameStats","noStatsMessage","darkPlayers","filter","gameInfo","team","whitePlayers","length","payload","editGameInfo","loadState","serializedState","sessionStorage","getItem","JSON","parse","err","GameList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getGameInfo","deleteGameFunc","deleteGame","state","fetchGames","privileges","console","log","setState","_this2","dateHeader","upcomingGames","map","key","_id","onClick","index_es","icon","pastGames","connect","games","display","today","buttonMsg","upcoming_visibility","past_visibility","lockStatus","fetchPlayers","deletePlayer","editForm","moment","require","Calendar","createGame","handleChange","bind","assertThisInitialized","handleSubmit","apply","toConsumableArray","concat","dateSelected","event","preventDefault","membersWithGameInfo","membershipStatus","member","name","playerLevel","preferredPosition","dateOfGame","format","addGame","onSubmit","react_datepicker_es","placeholderText","selected","onChange","value","members","Drafter","draftTeams","changeAvailability","playerID","playerStatus","draft","setMemberUnavailable","available","gameData","objectSpread","setTenBuckerUnavailable","setAvailable","tenBuckerToAdd","addNonMember","setPick","darkPickNum","picked","whitePickNum","indexOfPlayerToRemove","indexOf","splice","unavailable","forEach","index","unpicked","indexOfPlayerToEdit","draftMode","setUnavailable","faArrowAltCircleRight","assignTeam","gameDate","unavailableMembers","makeAvailable","notPlayingNonMembers","addTenBuckerToDraft","size","addPick","removePick","rankOneUp","rankOneDown","newPlayer","existingPlayers","newRoster","_","sortBy","obj","GameOptionsBottom","randomize","inputArray","outputArray","randomPlayer","Math","floor","random","push","filterTeams","arrayOfPlayerObjects","rosterTeam1","e","rosterTeam2","testPick","inputObject","rankedPlayers","picks","nameOfTeam","serpentineDraft","num","darkPicks","whitePicks","num1","num2","modulo","completeRounds","i","unavailablePlayers","allPlayers","alternateDraft","resetPlayers","reset","mixedRosters","output","reduce","levels","numOutput","keys","playersArray","entries","arrayOfUnavailablePlayers","currentMode","triggerDraftMode","triggerPickMode","visibility","bottom","toggleMode","pickButtons","left","resetTeams","right","top","autodraft","buttons","GameOptionsTop","action","showUnavailable","hideUnavailable","tenBuckers","arrayOfIds","playingNonMembers","newTenBuckers","showNonMembers","hideNonMembers","showingUnavailableMembers","showingNonPlayingTenBuckers","gameParticipants","allTenBuckers","notPlayingTenBuckers","all","new","Locker","lockGameInfo","unlockGameInfo","unlockGame","lockGame","lock_status","Draft","changeLock","currentlyShowing","toggleGames","DraftPageComp_Calendar","DraftPageComp_GameList","toggleGamesFunc","showing","DraftPageComp_GameOptionsTop","main","DraftPageComp_Drafter","DraftPageComp_GameOptionsBottom","components_Locker","currentState","Form","createPlayer","handleCancel","resetTabs","target","editedPlayer","defineProperty","updateField","assignedLevel","fullName","email","formMode","addPlayer","editPlayer","defaultValue","tab1","tab2","panel1","panel2","errors","message","MemberList","editMember","deleteMember","sendPlayerToEditForm","TenBuckerList","editTenBucker","deleteTenBucker","Player","currentStatus","tabIndex","parseInt","toggleTabStatus","toggleStatus","tab3","PlayerPageComp_MemberList","PlayerPageComp_TenBuckerList","panel3","PlayerPageComp_Form","tabs","panels","getGamesForRecords","arrayOfTenBuckerIDs","array","toggleViews","element","dates","sort","chart","batchChartUpdate","newData","updatePlayers","togglePlayerModal","newStatus","PastGameList","getGamesAndTransform","visibleBefore","gameVisibility","slice","visibleAfter","newArray","setVisibility","object","values","_this3","_ref","_ref2","slicedToArray","renderGames","_this4","reverse","year","toggleVisibility","renderMonth","renderYear","reducedGames","stats","monthify","string","yearString","substring","monthString","difYears","arrayOfObjects","remapped","difMonths","beautifyGames","years","ScoreBoard","editScore","currentValue","goalUpdate","scoreUpdate","goals_dark","goals_white","win","playerUpdate","goals","assistUpdate","assists","logStat","NoStatsBoard","Stats","PastGamesList","StatsPageComp_NoStatsBoard","StatsPageComp_ScoreBoard","DateRange","handleChangeStart","handleChangeEnd","startDate","endDate","selectDateRange","datePickers","selectsStart","isClearable","selectsEnd","start","end","from","to","DateSelector","RecordsPageComp_DateRange","allGames","gamesForRecords","GameSelector","unselectGame","playersForRecords","selectedPlayers","broomballer","gamesPlayed","selectedGames","match","playerReduced","wins","losses","ties","gamePlayedFromArray","winsFromArray","lossesFromArray","tiesFromArray","winPercent","lossPercent","tiePercent","goalsFromArray","b","assistsFromArray","gpg","parseFloat","apg","Number","isInteger","toFixed","playerWithoutRecord","loss","tie","arrayOfGames","markAsSelected","transformedArrayForCards","replaceBatchChartData","arrayOfPlayers","labels","goalsArray","assistsArray","gamesPlayedArray","winPercentArray","lossPercentArray","tiePercentArray","gpgArray","apgArray","newObject","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barThickness","options","selectAllGames","gameSelection","unselectAllGames","gamesSelected","includes","selectGame","unselectedGames","gamesUnselected","listOfGames","allGamesSelection","chartData","PlayerSelector","unselectPlayer","removePlayerStatObject","indexOfRemovedPlayer","newLabels","newGoals","newAssists","newGames","newWins","newLosses","newTies","newGpg","newApg","arrayOfplayer","addPlayerStatObject","addBatchChartData","toggleSelectAll","allMembersAndSelectedTenBuckers","selectAndTransform","batchUnselect","allTenBuckersAndSelectedMembers","arrayOfTenBuckersID","selectPlayer","listOfPlayers","memberSelection","selectAllPlayers","tenBuckerSelection","unselectedPlayers","update","batchCardUpdate","PlayerStatsModal","reactstrap_es","isOpen","playerModal","toggle","centered","playerModalData","react_chartjs_2_es","responsive","maintainAspectRatio","Showcase","tab","ascArrow","toggleSortOptions","playerName","playerStats","gamesInChronoOrder","playerInfo","fill","lineTension","sortOptionsDisplay","sortingOptions","azTab","toggleSort","alphaAsc","alphaDesc","gamesTab","gamesAsc","gamesDesc","winsTab","winsAsc","winsDesc","lossesTab","lossesAsc","lossesDesc","tiesTab","tiesAsc","tiesDesc","goalsTab","goalsAsc","goalsDesc","gpgTab","gpgAsc","gpgDesc","assistsTab","assistsAsc","assistsDesc","apgTab","apgAsc","apgDesc","playerRecords","positionVisibility","showPlayerStats","RecordsPageComp_PlayerStatsModal","filteredPlayerRecords","forwardSelection","selectors","defenseSelection","goalieSelection","Filters","setting","filterPlayerRecordsByType","offense","defense","goalie","_this$props$filterPla","filterPlayerRecordsByGames","gamePercent","operator","playerSelection","faSquare","playerFilters","gameFilters","playerType","DataChart","chartDisplay","curatedChartData","height","chartingOptions","Records","RecordsPageComp_DateSelector","RecordsPageComp_GameSelector","RecordsPageComp_PlayerSelector","RecordsPageComp_DataChart","RecordsPageComp_Showcase","RecordsPageComp_Filters","LoginForm","editedUser","user","updateUserForm","in","username","password","authenticateUser","newUser","privilege","createNewUser","up","authenticate","method","errmsg","stringify","setItem","saveState","SuperAdmin","Login","components_LoginForm","initialState","pastGamesFromAPI","combineReducers","arguments","undefined","deletedPlayer","panel","dateRange","middleware","thunk","navigator","userAgent","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","library","add","faChevronUp","faChevronDown","faMinusCircle","faTimesCircle","faArrowCircleLeft","faAngleRight","faPlusCircle","faTimes","faPlus","faCaretDown","faCaretRight","faLongArrowAltUp","faLongArrowAltDown","faCircle","faLock","faUnlockAlt","faCheckSquare","App","es","BrowserRouter","Switch","Route","exact","path","render","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App","document","getElementById","URL","process","addEventListener","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7f378c33.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport SmallLogo from \"../../components/images/logo_sm.jpeg\"\n\nimport \"./NavBar.css\";\n\n\nclass NavBar extends Component {\n    render() {\n        return (\n            <nav>\n                <div className=\"pos-f-t\">\n                    <div className=\"collapse\" id=\"navbarToggleExternalContent\">\n                        <div className=\"bg-dark p-4\">\n                        <h4 className=\"nav_title\">Summit Broomball</h4>\n                        <div className=\"navbar-nav\">\n                            <a className=\"nav-item nav-link\" href=\"/\">Home</a>\n                            <a className=\"nav-item nav-link\" href=\"/Player\">Players</a>\n                            <a className=\"nav-item nav-link\" href=\"/Draft\">Draft</a>\n                            <a className=\"nav-item nav-link\" href=\"/Stats\">Stats</a>\n                            <a className=\"nav-item nav-link\" href=\"/Records\">Records</a>\n                            <a className=\"nav-item nav-link\" href=\"/Login\">Login</a> {/* Will change depending on state*/}\n                        </div>\n                    </div>\n                    </div>\n                    <nav className=\"navbar bg\">\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <img className=\"toggler_img\" src={SmallLogo} alt=\"logo\" />\n                        </button>\n                    </nav>\n                    </div>\n            </nav>\n            )\n        }\n}\n\n\nexport default NavBar\n","import React from \"react\";\nimport NavBar from \"../components/NavBar\";\n\nimport \"../styles/css/home.css\";\n\nconst Home = () => (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Summit Broomball</h1>\n            <div className=\"instructions_div\">\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Create, Manage, and Edit Players:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"/Player\"><button className=\"btn contrast_color menu_button\">Players</button></a>\n                    </div>\n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Schedule Games and Draft Teams:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Draft\"><button className=\"btn contrast_color menu_button\">Draft</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Enter Stats for Games:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Stats\"><button className=\"btn contrast_color menu_button\" >Stats</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instruction instructions_text\">Visualize Recorded Stats:</p>\n                    </div> \n                    <div className=\"instruction\">\n                        <a href=\"./Records\"><button className=\"btn contrast_color menu_button\" >Records</button></a>\n                    </div>\n                    \n                </div>\n            </div>\n                \n                \n                <div className=\"container\">\n                    <div className=\"welcome_text\">\n                        <p className=\"text_center\">\n                        Click on the logo at any time to switch page.\n                        </p>\n                    </div>\n                </div>\n            </div>        \n        </div>\n\n)\nexport default Home;\n","import axios from \"axios\";\n// Transforming the current url in order to query the public API locally \n// (Express port 3001 changed to React port 3000 where the API exists).\n// Once deployed, it should reset to the domain name used.\nlet currentURL = window.location.origin\nif (currentURL === \"http://localhost:3000\") {\n    currentURL = \"http://localhost:8080\"\n    } \n// For Passport.js: \n/* Server sends SetCookie header then the browser handle to store it, and then the cookie is sent with requests made to \nthe same server inside a Cookie HTTP header.\nhttps://stackoverflow.com/questions/45536831/node-express-passport-req-user-undefined-but-works-in-postman\n\nconst config = {\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    }\n}\n*/\nexport default {\n    getGames: () => {       \n        const url = currentURL + \"/api/game/\"\n        return axios.get(url)\n        },\n    getGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.get(url)\n    },\n    addGame: (date, players) => {\n        const url = currentURL + \"/api/game/\"\n        return axios.post(url, { game_date: date, players: players})\n        },\n    deleteGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.delete(url)\n        },\n    editGame: (gameId, data) => {\n        const url = currentURL + \"/api/game/\" + gameId\n        return axios.put(url, { data })\n        },\n    getPlayers: () => {\n        const url = currentURL + \"/api/player/\"\n        return axios.get(url)\n        },\n    addPlayer: (player) => {\n        const url = currentURL + \"/api/player/\"\n        return axios.post(url, { player })\n        },\n    editPlayer: (id, data) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.put(url, { data })\n        },\n    deletePlayer: (id) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.delete(url)\n    },\n    addNewUser: (userData) => {\n        const url = currentURL + \"/users\"\n        return axios.post(url, {userData})\n    },\n    authenticateUser: (mode, userData) => {\n        const url = currentURL + \"/login\"\n        if (mode === \"local\") {\n            return axios.post(url, userData)\n        }\n        }\n    }\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    GET_GAME, \n    DELETE_GAME, \n    EDIT_GAME_INFO, \n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE, \n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS, \n    HIDE_NON_MEMBERS,\n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO, \n    UNLOCK_GAME_INFO,\n    RESET,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n    \n} from './types';\n\nimport API from \"../../utils/API\"\nimport _ from \"underscore\"\n\nexport const fetchGames = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_GAMES,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deleteGame = (id) => dispatch => {\n    API.deleteGame(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_GAME,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addGame = (date, players, player, members) => dispatch => {\n    API.addGame(date, players, player, members)\n            .then(res => {\n                if(res.status !== 200) {\n                    throw new Error(res.statusText)\n                    }\n                else {\n                    let newGame = res.data\n                    // console.log(\"res.data: \", res.data)\n                    if(newGame.name){\n                        console.log(\"Error Message: the app encountered an error creating this game in the database\")\n                    }\n                    else {\n                        console.log(\"Game successfully added to db\")\n                        dispatch({\n                            type: NEW_GAME,\n                            payload: res.data\n                        })\n                        }\n                    }\n            })\n        }\n\nexport const getGame = (game) => dispatch => {\n    API.getGame(game)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                /* We need to know if drafting has happened for the Stats page to display properly */\n                let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\")\n                let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\")\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }\n\n                dispatch({\n                    type: GET_GAME,\n                    payload: {\n                        game: res.data,\n                        gameStats: gameStats,\n                        noStatsMessage: noStatsMessage\n                    }\n                })\n            }\n        })\n}\n\nexport const editGameInfo = (game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get full game data from the API's response\n            /*\n            // Then we need to check if the locker can be displayed\n            let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\" && player.gameInfo.available === true)\n            let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\" && player.gameInfo.available === true)\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }*/\n            \n            dispatch({\n                type: EDIT_GAME_INFO,\n                payload: {\n                    game: res.data,\n                    // gameStats: gameStats,\n                    // noStatsMessage: noStatsMessage\n                    }\n            })\n        }\n    })\n}\n\nexport const setMemberUnavailable = (game, data) => dispatch => {\n        API.editGame(game, data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_MEMBER_UNAVAILABLE,\n                    payload: res.data\n                    })\n                }\n            })\n    }\nexport const setTenBuckerUnavailable = (gameId, gameData, playerID) => dispatch => {\n    API.editGame(gameId, gameData)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_TEN_BUCKER_UNAVAILABLE,\n                    payload: {\n                        gameData: res.data,\n                        player: playerID\n                        }\n                    })\n                }\n            })\n        }\nexport const setAvailable = (game, data) => dispatch => {\n    // console.log(\"data.player: \", data.player, \"\\n(is the id of player to add)\")\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get the game info\n            // console.log(\"res.data: \", res.data)\n            dispatch({\n                type: MAKE_MEMBER_AVAILABLE,\n                payload: {\n                    player: data.player,\n                    game: res.data\n                    }\n            })\n        }\n    })\n}\n\n\nexport const showUnavailable = () => dispatch => {\n    dispatch({\n        type: SHOW_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const hideUnavailable = () => dispatch => {\n    dispatch({\n        type: HIDE_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const showNonMembers = (allTenBuckers, notPlayingTenBuckers) => dispatch => {\n    dispatch({\n        type: SHOW_NON_MEMBERS,\n        payload: {\n            all: allTenBuckers,\n            new: notPlayingTenBuckers\n                }\n    })\n}\n\nexport const hideNonMembers = () => dispatch => {\n    dispatch({\n        type: HIDE_NON_MEMBERS\n    })\n}\n// Adds a Ten Bucker to the list of players\nexport const addNonMember = (game, newPlayer, existingPlayers) => dispatch => {\n    let newRoster = _.sortBy([...existingPlayers, newPlayer], \"name\")\n    API.editGame(game, {players: newRoster})\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NON_MEMBER,\n                payload: {players: res.data, player: newPlayer}\n            })\n        }\n    })\n}\n\nexport const lockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: true}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: LOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const unlockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: false}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: UNLOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const triggerPickMode = (team) => dispatch => {\n    // console.log(\"team in triggerPickMode from gameActions.js: \", team)\n    switch (team) {\n        case \"Dark\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        left: \"Exit\",\n                        right: \"Set White Picks\"\n                        }\n                    }\n                })\n                break;\n\n        case \"White\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        right: \"Exit\",\n                        left: \"Set Dark Picks\"\n                        },\n                        // set: \"player.gameInfo.whitePickNum\"\n                    }\n                })\n                break;\n        default:\n            console.log(\"There was an error in the dispatcher\")\n    }\n    }\n\nexport const triggerDraftMode = () => dispatch => {\n    dispatch({\n        type: TRIGGER_DRAFT_MODE\n        })\n}\n\nexport const setPick = (team, game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data.players: \", res.data.players)\n            let available = res.data.players.filter(player => player.gameInfo.available === true)\n            switch (team) {\n                case \"Dark\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                case \"White\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                default:\n                return;\n                }\n            }\n        })\n    } \n\nexport const reset = (game, data) => dispatch => {\n    // console.log('Data received in reset gameActions.js: ', data)\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data in the reset gameAction.js function: \", res.data)\n            dispatch({\n                type: RESET,\n                payload: res.data\n            })\n            }\n    })\n}","export const FETCH_GAMES = 'FETCH_GAMES'\nexport const NEW_GAME = 'NEW_GAME'\nexport const GET_GAME = 'GET_GAME'\nexport const DELETE_GAME = 'DELETE_GAME'\n\nexport const GET_GAMES_AND_TRANSFORM = 'GET_GAMES_AND_TRANSFORM'\nexport const GET_GAMES_IN_TIMESPAN = 'GET_GAMES_IN_TIMESPAN'\n\nexport const EDIT_GAME_INFO = 'EDIT_GAME_INFO'\nexport const LOCK_GAME_INFO = 'LOCK_GAME_INFO'\nexport const UNLOCK_GAME_INFO = 'UNLOCK_GAME_INFO'\nexport const RESET = 'RESET'\n\nexport const SHOW_UNAVAILABLE_MEMBERS = 'SHOW_UNAVAILABLE_MEMBERS'\nexport const HIDE_UNAVAILABLE_MEMBERS = 'HIDE_UNAVAILABLE_MEMBERS'\nexport const MAKE_MEMBER_AVAILABLE = 'MAKE_MEMBER_AVAILABLE'\nexport const ADD_NON_MEMBER = 'ADD_NON_MEMBER'\nexport const MAKE_MEMBER_UNAVAILABLE = 'MAKE_MEMBER_UNAVAILABLE'\nexport const MAKE_TEN_BUCKER_UNAVAILABLE = 'MAKE_TEN_BUCKER_UNAVAILABLE'\nexport const SHOW_NON_MEMBERS = 'SHOW_NON_MEMBERS'\nexport const HIDE_NON_MEMBERS = 'HIDE_NON_MEMBERS'\n\nexport const SHOW_FUTURE = \"SHOW_FUTURE\"\nexport const SHOW_PAST = \"SHOW_PAST\"\n\nexport const SHOW_TAB = \"SHOW_TAB\"\nexport const RESET_TABS = \"RESET_TABS\"\n\nexport const EDIT_FORM = \"EDIT_FORM\"\nexport const UPDATE_FIELD = \"UPDATE_FIELD\"\n\nexport const FETCH_PLAYERS = \"FETCH_PLAYERS\"\nexport const DELETE_PLAYER = \"DELETE_PLAYER\"\nexport const ADD_PLAYER = \"ADD_PLAYER\"\nexport const EDIT_PLAYER = \"EDIT_PLAYER\"\n\nexport const CREATE_GAME_ROSTER = \"CREATE_GAME_ROSTER\"\n\nexport const TRIGGER_PICK_MODE = \"TRIGGER_PICK_MODE\"\nexport const TRIGGER_DRAFT_MODE = \"TRIGGER_DRAFT_MODE\"\nexport const SET_PICK = 'SET_PICK'\n\nexport const SET_DATE_RANGE = \"SET_DATE_RANGE\"\n\nexport const SHOW_GAMES_TO_STATS = \"SHOW_GAMES_TO_STATS\"\nexport const SET_YEARS_VISIBILITIES = \"SET_YEARS_VISIBILITIES\"\nexport const ADD_GAME_TO_SELECTED = \"ADD_GAME_TO_SELECTED\"\nexport const REMOVE_GAME_FROM_SELECTED = \"REMOVE_GAME_FROM_SELECTED\"\nexport const ADD_PLAYER_TO_SELECTED = \"ADD_PLAYER_TO_SELECTED\"\nexport const REMOVE_PLAYER_FROM_SELECTED = \"REMOVE_PLAYER_FROM_SELECTED\"\nexport const TOGGLE_RECORDS_VIEWS = \"TOGGLE_RECORDS_VIEWS\"\n\nexport const ADD_PLAYER_RECORDS = \"ADD_PLAYER_RECORDS\"\nexport const REMOVE_PLAYER_RECORDS = \"REMOVE_PLAYER_RECORDS\"\nexport const REPLACE_PLAYERS_RECORDS = \"REPLACE_PLAYERS_RECORDS\"\n\nexport const SORT_AZ_ASC = \"SORT_AZ_ASC\"\nexport const SORT_AZ_DESC = \"SORT_AZ_DESC\"\nexport const SORT_GAMES_ASC = \"SORT_GAMES_ASC\"\nexport const SORT_GAMES_DESC = \"SORT_GAMES_DESC\"\nexport const SORT_WINS_ASC = \"SORT_WINS_ASC\"\nexport const SORT_WINS_DESC = \"SORT_WINS_DESC\"\nexport const SORT_LOSSES_ASC = \"SORT_LOSSES_ASC\"\nexport const SORT_LOSSES_DESC = \"SORT_LOSSES_DESC\"\nexport const SORT_TIES_ASC = \"SORT_TIES_ASC\"\nexport const SORT_TIES_DESC = \"SORT_TIES_DESC\"\nexport const SORT_GOALS_ASC = \"SORT_GOALS_ASC\"\nexport const SORT_GOALS_DESC = \"SORT_GOALS_DESC\"\nexport const SORT_GPG_ASC = \"SORT_GPG_ASC\"\nexport const SORT_GPG_DESC = \"SORT_GPG_DESC\"\nexport const SORT_ASSISTS_ASC = \"SORT_ASSISTS_ASC\"\nexport const SORT_ASSISTS_DESC = \"SORT_ASSISTS_DESC\"\nexport const SORT_APG_ASC = \"SORT_APG_ASC\"\nexport const SORT_APG_DESC = \"SORT_APG_DESC\"\n\n// export const SET_CHART_DATA = \"SET_CHART_DATA\"\nexport const TOGGLE_SELECT_ALL = \"TOGGLE_SELECT_ALL\"\n// export const TOGGLE_POSITIONS = \"TOGGLE_POSITIONS\"\n\nexport const BATCH_CARD_UPDATE = \"BATCH_CARD_UPDATE\"\nexport const BATCH_CHART_UPDATE = \"BATCH_CHART_UPDATE\"\nexport const BATCH_UNSELECT = \"BATCH_UNSELECT\"\nexport const BATCH_GAMES = \"BATCH_GAMES\"\nexport const UNSELECT_ALL_GAMES = \"UNSELECT_ALL_GAMES\"\n\nexport const TOGGLE_PLAYER_MODAL = \"TOGGLE_PLAYER_MODAL\"\nexport const FILTER_PLAYER_RECORDS_BY_TYPE = \"FILTER_PLAYER_RECORDS_BY_TYPE\"\nexport const FILTER_PLAYER_RECORDS_BY_GAMES = \"FILTER_PLAYER_RECORDS_BY_GAMES\"\n\n// USERS\nexport const UPDATE_USER_FORM = \"UPDATE_USER_FORM\"\nexport const ADD_NEW_USER = \"ADD_NEW_USER\"\nexport const SIGN_MODE = \"SIGN_MODE\"\n// export const SETTING_USER_PRIVILEGES = \"SETTING_USER_PRIVILEGES\"","/* https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage */\n\nexport const loadState = () => {\n    try {\n        const serializedState = sessionStorage.getItem('state');\n        if (serializedState === null ) {\n            return undefined;\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        return undefined\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem(\"state\", serializedState);\n    } catch (err) {\n        console.log(err)\n    }\n}","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchGames } from '../../js/actions/gameActions'\nimport { getGame } from '../../js/actions/gameActions'\nimport { deleteGame } from '../../js/actions/gameActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass GameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleteGame: true\n        }\n    }\n    componentDidMount() {\n        this.props.fetchGames();\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    /* \n    componentDidUpdate() {\n        console.log(this.state)\n    } \n    */\n    \n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n    }\n\n    deleteGameFunc = (gameId) => {\n        this.props.deleteGame(gameId);\n    }\n\n    render() {\n        return (\n            <div className=\"show_games\">\n            <h2 className=\"h2_main\">{this.props.dateHeader} Games</h2>\n                <div className=\"list-management\">\n                    {/* showing the upcoming games when mode has been  */}\n                    {this.props.dateHeader === \"Upcoming\" ? (\n                        // need case for when there is no game scheduled\n                        this.props.upcomingGames.length > 0 ?\n                        this.props.upcomingGames\n                            .map(game =>\n                                <div key={game._id}>\n                                    <button className=\"content_button btn game_button default_color \" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n                    ) : \n                    (\n                        this.props.pastGames.length > 0 ?\n                        this.props.pastGames\n                            .map(game => \n                                <div key={game._id}>\n                                    <button className=\"content_button btn game_button default_color\" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n\n                    )}\n\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    games: state.games.games,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    upcoming_visibility: state.display.upcoming_visibility,\n    past_visibility: state.display.past_visibility,\n    lockStatus: state.games.lockStatus,\n    upcomingGames: state.games.upcomingGames,\n    pastGames: state.games.pastGames\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { fetchGames, getGame, deleteGame }) (GameList)\n","import { FETCH_PLAYERS, EDIT_PLAYER, DELETE_PLAYER, ADD_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from './types';\nimport API from \"../../utils/API\"\n\nexport const fetchPlayers = () => dispatch => {\n    API.getPlayers()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_PLAYERS,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deletePlayer = (id) => dispatch => {\n    API.deletePlayer(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addPlayer = (data) => dispatch => {\n    console.log(\"data received: \", data)\n    API.addPlayer(data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n                }\n            else if (res.data.errors) {\n                console.log(res.data.message)\n            }\n            else {\n                let newPlayer = res.data\n                if(newPlayer.name !== \"MongoError\")\n                    {\n                    console.log(\"Player successfully added to db\")\n                    dispatch({\n                        type: ADD_PLAYER,\n                        payload: res.data\n                    })\n\n                    }\n                else {\n                    console.log(\"Error Message: the app encounted an error creating this player in the database\")\n                    }\n                }\n            })\n        }\n\nexport const editPlayer = (id, data) => dispatch => {\n    API.editPlayer(id, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: EDIT_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n        dispatch({\n            type: SHOW_TAB,\n            payload: id\n        })\n    }\n\nexport const resetTabs = (id) => dispatch => {\n    dispatch({\n        type: RESET_TABS\n    })\n}\n\nexport const editForm = (player) => dispatch => {\n    dispatch({\n        type: EDIT_FORM,\n        payload: player\n        })\n    }\n    \nexport const updateField = (player) => dispatch => {\n    dispatch({\n        type: UPDATE_FIELD,\n        payload: player \n        })\n    }\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addGame } from '../../js/actions/gameActions'\nimport { fetchPlayers } from '../../js/actions/playerActions'\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { loadState } from \"../sessionStorage\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n\nconst moment = require(\"moment\");\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: \"\",\n            createGame: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        \n            this.setState(...this.state.date, privileges)\n        \n        }\n\n    handleChange(date) {\n        this.setState({\n            dateSelected: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let members = this.props.players.filter((player) => player.membershipStatus === \"Member\")\n        let membersWithGameInfo = members.map((member) => {return {\n            membershipStatus: member.membershipStatus,\n            _id: member._id,\n            name: member.name,\n            playerLevel: member.playerLevel,\n            preferredPosition: member.preferredPosition,\n            gameInfo: this.props.gameInfo\n        }})\n        let dateOfGame = moment(this.state.dateSelected).format(\"YYYY-MM-DD\")\n        this.props.addGame(dateOfGame, membersWithGameInfo)\n    }\n\n\n    render() {\n        return (\n            <div id=\"schedule_game\">\n                <div>\n                    <h2 className=\"h2_main\">Schedule a game</h2>\n                </div>\n\n                <div>\n                {this.state.createGame === true \n                    ? <form className=\"game_form\" onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                            <div className=\"calendar_component\">\n                                <DatePicker \n                                    placeholderText=\"MM DD YYYY\"\n                                    selected={this.state.dateSelected}\n                                    onChange={this.handleChange}\n                                    value={this.state.value}\n                                    />\n                            </div>\n                            \n                                <div className=\"submit_button\">\n                                    <button id=\"date_submit\" className=\"btn contrast_color content_button\" name=\"submit\" type=\"submit\" >Submit</button>\n                                </div> \n                            \n                        </div>\n                        </form> \n                    : <p className=\"no_game\">Login as an admin to schedule games and create team line-ups!</p> }\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    game: state.games.game,\n    players: state.players.players,\n    gameInfo: state.games.gameInfo\n    })\n\n\nexport default connect(mapStateToProps, { addGame, fetchPlayers }) (Calendar)\n    ","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { addNonMember } from '../../js/actions/gameActions'\nimport { setMemberUnavailable } from '../../js/actions/gameActions'\nimport { setTenBuckerUnavailable } from '../../js/actions/gameActions'\nimport { setAvailable } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    setUnavailable(playerID, playerStatus) {\n        let gameId = this.props.draft._id\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (playerStatus === \"Member\"){\n            this.props.setMemberUnavailable(gameId, {player: playerID, gameInfo: {available: false, team: \"N/A\"}})\n            }\n        else {\n            let gameId = this.props.draft._id\n            let gameData = {...this.props.draft, players: this.props.draft.players.filter(player => player._id !== playerID)}\n            this.props.setTenBuckerUnavailable(gameId, gameData, playerID)\n            }    \n        }\n    }\n\n    makeAvailable(playerID) {\n        let gameId = this.props.draft._id;\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            this.props.setAvailable(gameId, {player: playerID, gameInfo: {available: true, team: \"N/A\"}})    \n            }\n    }\n\n    assignTeam(playerID, team){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {team: team}})\n            }\n    }\n\n    addTenBuckerToDraft(player){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            let tenBuckerToAdd = {\n                membershipStatus: player.membershipStatus,\n                _id: player._id,\n                name: player.name,\n                playerLevel: player.playerLevel,\n                preferredPosition: player.preferredPosition,\n                gameInfo: this.props.gameInfo\n                }   \n            this.props.addNonMember(gameId, tenBuckerToAdd, this.props.draft.players)\n            }\n\n    }\n\n    addPick(team, playerID){\n        let gameId = this.props.draft._id\n        switch (team){\n            case \"Dark\":\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {player: playerID, gameInfo: {darkPickNum: this.props.picked.length + 1}})\n            break;\n\n            case \"White\":\n            this.props.setPick(\"White\", gameId, {player: playerID, gameInfo: {whitePickNum: this.props.picked.length + 1}})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    removePick(team, player) {\n        let gameId = this.props.draft._id\n        // we remove the player from the array of ranked players\n        let indexOfPlayerToRemove = this.props.picked.indexOf(player)\n        this.props.picked.splice(indexOfPlayerToRemove,1)\n        // we will also need to send the unavailable players, otherwise their availability cannot be reset later on\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        switch (team){\n            case \"Dark\":\n            // after removing the player from the array of ranked players, we reset their rank via their index in the array\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.darkPickNum = index + 1 }\n            })\n            // the rank of the player initially selected is reset to 0\n            player.gameInfo.darkPickNum = 0\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            case \"White\":\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.whitePickNum = index + 1 }\n            })\n            player.gameInfo.whitePickNum = 0\n            this.props.setPick(\"White\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    rankOneUp(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit > 0) {\n            switch (this.props.draftMode) {\n                case \"Dark\": \n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n            }\n        }\n    }\n\n    rankOneDown(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit < this.props.picked.length - 1) {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <main>\n                {this.props.draftMode === \"Draft\" ? \n                    (<div className=\"row drafter_mode\">\n                    <div className=\"col col_no_bootstrap dark_draft_players\">\n                        <h1 className=\"h1_main col_header\"><br/>Dark</h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                                .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                .map(player => {\n                                    return (\n                                        <div className=\"player_div leaning_right_div\" key={player._id}>\n                                            <button className=\"content_button player_button leaning_right_color\">{player.name}</button>\n                                            {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                        </div>\n                                        )\n                                        })\n                                ) : (<p>Data has not loaded yet</p>)\n                            }\n                    </div>\n                    <div className=\"col col_no_bootstrap undraft_players\">\n                    <h1 className=\"h1_alternate col_header game_date\">{this.props.gameDate}<br/><br/></h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"N/A\")\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div leaning_center_div\" key={player._id}>\n                                        {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"Dark\")} /> : null }\n                                        <button className=\"content_button player_button plain_color\">{player.name}</button>\n                                        {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                        {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"White\")} /> : null }\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Data has not loaded yet</p>)\n                        }\n\n                        {this.props.unavailableMembers ? (this.props.unavailableMembers\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div\" key={player._id}>   \n                                        <button className=\"content_button player_button unavailable\" onClick={() => this.state.changeAvailability === true ? this.makeAvailable(player._id) : null } >{player.name}</button>\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Unable to retrieve unavailable Members</p>)\n                        }\n\n                        {this.props.notPlayingNonMembers ? (this.props.notPlayingNonMembers\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div\" key={player._id}>   \n                                        <button className=\"content_button player_button negative_color\" onClick={() => this.state.changeAvailability === true ? this.addTenBuckerToDraft(player) : null }>{player.name}</button>\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Unable to retrieve Ten Buckers</p>)\n                        }\n\n\n                    </div>\n                    <div className=\"col col_no_bootstrap white_drafted_players\">\n                    \n                    <h1 className=\"h1_main col_header\"><br/>White</h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                                    .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                    .map(player => {\n                                        return (\n                                            <div className=\"player_div leaning_left_div\" key={player._id}>\n                                                {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} size=\"2x\" onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                                <button className={\"content_button player_button leaning_left_color \"}>{player.name}</button>\n                                                {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            </div>\n                                            )\n                                            })\n                                    ) : (<p>Data has not loaded yet</p>)\n                                }\n                    </div>\n                </div>\n                ) : \n                // Picking players page\n                (<div className=\"row picker_mode\"> \n                    <div className=\"col col_no_bootstrap set_picks_col\">\n                        <h1 className=\"h1_main pick_col_header unpicked_list_header\">Set {this.props.draftMode} Picks</h1>\n                        <div className=\"list_of_unpicked_players\">\n                        {/* Mapping the unranked Players */}\n                        {this.props.unpicked ? (this.props.unpicked\n                            .map(player => {\n                                return (\n                                    <div className=\"player_picking_div\" key={player._id}>\n                                        <button className=\"content_button player_picking lighter_color\"  onClick={() => this.addPick(this.props.draftMode, player._id)} >{player.name}</button>\n                                        <FontAwesomeIcon icon=\"angle-right\" className=\"pick_arrow arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div>\n                        <div className=\"col col_no_bootstrap ranks_col\">\n                            <h1 className=\"h1_main pick_col_header picked_list_header\">Ranks</h1>\n                            {/* mapping the ranked available players */}\n                            <div className=\"list_of_picked_players\">\n                            {this.props.picked ? (this.props.picked\n                                .map(player => {\n                                    return (    \n                                        <div className=\"player_picking_div\" key={player._id}>\n                                            <button className=\"content_button player_button darker_color\">{player.name}</button>\n                                            <FontAwesomeIcon icon=\"minus-circle\" className=\"remove remove_pick\" onClick={() => this.removePick(this.props.draftMode, player)} />\n                                            <div className=\"sorter\"> \n                                                <FontAwesomeIcon icon=\"chevron-up\" className=\"up_arrow\" onClick={() => this.rankOneUp(player)}/>\n                                                <FontAwesomeIcon icon=\"chevron-down\" className=\"down_arrow\" onClick={() => this.rankOneDown(player)}/>\n                                            </div>\n                                        </div>\n                                    )\n                                } )\n                            ) : ( <p>Bogus data</p> )\n                            }\n                            </div>\n                        </div> \n                </div>)}\n            </main>\n\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, addNonMember, setMemberUnavailable, setTenBuckerUnavailable, setAvailable, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport _ from \"underscore\"\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { reset } from '../../js/actions/gameActions'\nimport { triggerPickMode } from '../../js/actions/gameActions'\nimport { triggerDraftMode } from '../../js/actions/gameActions'\n\nclass GameOptionsBottom extends Component {\n\n    resetTeams(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                    let resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for Dark team\n                            gameInfo: {...member.gameInfo, darkPickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                break;\n\n                case \"White\":\n                    resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for White team\n                            gameInfo: {...member.gameInfo, whitePickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                return;\n\n                case \"Draft\":\n                // we filter the members (but should be done from the player db, not the games.draft)\n                    resetPlayers = this.props.players\n                    .filter((player) => player.membershipStatus === \"Member\")\n                    .map((member) => {return {\n                        membershipStatus: member.membershipStatus,\n                        _id: member._id,\n                        name: member.name,\n                        playerLevel: member.playerLevel,\n                        preferredPosition: member.preferredPosition,\n                        // Resetting teams only\n                        gameInfo: {...member.gameInfo, team: \"N/A\"}\n                        }})\n                this.props.reset(game, {players: _.sortBy(resetPlayers, \"name\")})\n                break;\n                \n                default:\n                return;\n                }\n            }\n        }\n\n    autodraft(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (this.props.draftMode === \"Draft\") {\n                // Autodraft feature: separates all players by level, randomly assigns them to dark or white team\n                let mixedRosters = [];\n                let arrayOfAvailablePlayers = this.props.players.filter(player => player.gameInfo.available === true)\n                // recreating our array by assigning each player to its level\n                let output = arrayOfAvailablePlayers.reduce((levels,player) => {\n                    levels[player.playerLevel] = levels[player.playerLevel] || [];\n                    levels[player.playerLevel].push({\n                        player\n                    });\n                    return levels;\n                },[])\n                \n                let numOutput = Object.keys(output).length;\n                \n                for (let i = 0; i < numOutput; i++) {\n                    // running the randomize function for each level\n                    let playersByLevel = Object.entries(output)[i]\n                    // the \"level\" is the first argument in the array, the next one is the players: that's how we access them\n                    let playersArray = playersByLevel[1]\n                    // we randomize via a custom recursive function (could also try underscore, but on such a small array, it\n                    // I doubt it makes any difference)\n                    this.randomize(playersArray, mixedRosters)\n                    }\n                    \n                for (let i = 0; i < mixedRosters.length; i++) {\n                    // assigning different team to every other player\n                    if (i%2 === 0) {mixedRosters[i].player.gameInfo.team = \"Dark\";}\n                    else {mixedRosters[i].player.gameInfo.team = \"White\"}\n                    }\n                    \n                    let arrayOfUnavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    // For a reason I haven't been able to figure out, each player information is nested \n                    // under \"{player: }\" which we then need to remove\n                    let remappedAvailablePlayers = mixedRosters.map((player) => player.player)\n                    // Once this is done, we add the unavailable players since they need to be sent to the API as well (otherwise, they just can't be added back in the draft)\n                    let allPlayers = remappedAvailablePlayers.concat(arrayOfUnavailablePlayers)\n                    allPlayers = _.sortBy(allPlayers, \"name\") \n                    \n                this.props.editGameInfo(game, {players: allPlayers})\n                // the only purpose of calling this function is to verify that teams are balanced (level wise)\n                this.filterTeams(allPlayers, \"level\")\n                }\n                else {\n                    console.log(\"Error message: go to draft mode to draft teams\")\n                    }\n            }\n        }\n\n    // helper function to randomize an array (pushes/deletes to another array recursively, until it's empty) \n    randomize = (inputArray, outputArray) => {\n        if(inputArray.length > 0) {\n            let randomPlayer = inputArray[Math.floor(Math.random()*inputArray.length)];\n            let index = inputArray.indexOf(randomPlayer);\n            outputArray.push(randomPlayer);\n            inputArray.splice(index,1)\n            this.randomize(inputArray, outputArray);\n            }\n        }\n        \n    // function to filter array of player objects into teams used for quick control. \n    filterTeams = (arrayOfPlayerObjects, mode) => {\n        if (mode === \"level\") {\n            // filter player objects according to name of the team #1\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, \"playerLevel\")\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, \"playerLevel\")\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"playerLevel\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}`);\n                })\n            }\n        else {\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, (obj) => obj.gameInfo.darkPickNum)\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (picked for Dark: #${e.gameInfo.darkPickNum})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, (obj) => obj.gameInfo.whitePickNum)\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (picked for White: #${e.gameInfo.whitePickNum})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"name\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}\\nPicked for Dark: #${e.gameInfo.darkPickNum})\\nPicked for White: #${e.gameInfo.whitePickNum})`)//.\\nPicked in position: ${e.gameInfo.captain2Pick})`);\n                })\n            }\n        }\n    \n    toggleMode(currentMode, team){\n        if (currentMode === team) {\n            this.props.triggerDraftMode()\n        }\n        else {\n            this.props.triggerPickMode(team)\n        }\n    }\n    // helper function to test if a pick is eligible to be pushed to the ranked array. If not, moves on to the next pick. \n    testPick = (inputObject, rankedPlayers) => {\n        let index = 0;\n        let picks = inputObject.picks;\n        if (rankedPlayers.indexOf(picks[index]) !== -1) {\n            picks.splice(index,1);\n            this.testPick(inputObject, rankedPlayers);\n            }\n        else {\n            let nameOfTeam = inputObject.team;\n            // assigns the name of the team to the drafted player (to filter later on)\n            picks[index].gameInfo.team = nameOfTeam;\n            // takes the pick, pushes it to the output array\n            rankedPlayers.push(picks[index]);\n            // removes the pick from the array of picks\n            picks.splice(index,1);\n            }\n        }\n\n    // function to create a \"serpentine\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 has the next 2 picks, etc. until everyone is drafted\n    serpentineDraft = (game) => {\n        // Serpentine draft sends an object to \"testPick\" to figure if a player has already been drafted. \n        // If not, the player in question gets stored in the array of drafter players (and so on, recursively). \n        // For this to happen, we need to format our objects\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        // the function will error if we try to run it more times than players have been picked. \n        // Therefore, we need a pattern to determine how many times it should be ran\n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n            // there are 4 turns to complete a round\n            let turns = 4;\n            let modulo = num % turns;\n            let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                    // and complete the rosters one player at a time\n                    switch (modulo !== 0) {\n                        case modulo === 1:\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        case modulo === 2:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        break;\n                        case modulo === 3:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        default:\n                        return;\n                        }\n                    }\n                this.filterTeams(rankedPlayers, \"pick\")\n                // we re-add the unavailable players, otherwise they cannot be reset later on\n                let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    \n                let allPlayers = rankedPlayers.concat(unavailablePlayers)\n                this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n    \n    // function to create an \"alternate\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 drafts, etc. until everyone is drafted\n    alternateDraft = (game) => {\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        \n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n        // there are 2 turns to complete a round\n        let turns = 2;\n        let modulo = num % turns;\n        let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                // and complete the rosters with one more pick\n                this.testPick(darkPicks, rankedPlayers);\n                }\n            this.filterTeams(rankedPlayers, \"pick\")\n            // we re-add the unavailable players, otherwise they cannot be reset later on\n            let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                        \n            let allPlayers = rankedPlayers.concat(unavailablePlayers)\n            this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n\n    render() {\n        return (\n            <div className={\"row \" + this.props.visibility.bottom}>\n                <div className={this.props.visibility.bottom + \" reduced_container\"}>\n                        <div className=\"row game_options_container\">\n                            \n                                <button className=\"content_button btn lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"Dark\")}>{this.props.pickButtons.left}</button> \n                            \n                            \n                            \n                                <button className=\"content_button btn contrast_color pick_option\" onClick={() => this.resetTeams(this.props.gameDate)}>Reset</button> \n                            \n                            \n                            \n                                <button className=\"content_button btn lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"White\")}>{this.props.pickButtons.right}</button> \n                            \n                        </div>\n                        <br />\n                        <div className={\"row \" + this.props.visibility.top + \" game_options_container\"}>\n                            \n                                <button className=\"content_button btn darker_color draft_option\" onClick={()=> this.autodraft(this.props.gameDate)} >Autodraft</button> \n                            \n                            \n                                <button className=\"content_button btn darker_color draft_option\" onClick={()=> this.alternateDraft(this.props.gameDate)}>Alternate Draft</button> \n                            \n                            \n                                <button className=\"content_button btn darker_color draft_option\" onClick={() => this.serpentineDraft(this.props.gameDate)}>Serpentine Draft</button> \n                            \n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    players: state.games.draft.players,\n    // playerDB: state.players.players,\n    lockStatus: state.games.lockStatus,\n    gameInfo: state.games.gameInfo,\n    draftMode: state.games.draftMode,\n    pickButtons: state.games.pickButtons\n    /*{\n        right: \"Set Dark Picks\",\n        left: \"Set White Picks\"\n    }*/\n})\n\nexport default connect(mapStateToProps, { editGameInfo, reset, triggerPickMode, triggerDraftMode }) (GameOptionsBottom)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { showUnavailable } from '../../js/actions/gameActions'\nimport { hideUnavailable } from '../../js/actions/gameActions'\nimport { showNonMembers } from '../../js/actions/gameActions'\nimport { hideNonMembers } from '../../js/actions/gameActions'\n\nclass GameOptionsTop extends Component {\n    \n    unavailable(action){\n        if (action === \"Show\") {\n            /*let members = this.props.players.filter(player => player.membershipStatus === \"Member\")\n            let playingMembers = this.props.gameParticipants.map(player => player._id)\n            let notPlayingMembers = members.filter(player => playingMembers.indexOf(player._id) === -1)\n            console.log(\"notPlayingMembers: \", notPlayingMembers)\n            // this.props.showUnavailable(notPlayingMembers)*/\n            this.props.showUnavailable()\n        }\n        else {\n            this.props.hideUnavailable()\n        }\n    }\n    tenBuckers(action){\n        /* This filters all players in the DB according to their membershipStatus\n        It then gets the id of all ten_buckers already playing (that we set when we fetch the game data in GameList.js\n        via the reducer). We check the former against the latter to see who's left to potentially add */\n        if (action === \"Show\") {\n            let tenBuckers = this.props.players.filter((player) => player.membershipStatus !== \"Member\")\n            let arrayOfIds = this.props.playingNonMembers.map(player => player._id)    \n            let newTenBuckers = tenBuckers.filter((player) => arrayOfIds.indexOf(player._id) === -1)\n            this.props.showNonMembers(tenBuckers, newTenBuckers)\n        }\n        else {\n            this.props.hideNonMembers()\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"container button_container\">\n                        <div className=\"row\">\n                            <div className=\"col text-center\">\n                                <button className=\"content_button darker_color game_options\" onClick={()=> this.unavailable(this.props.showingUnavailableMembers)}>{this.props.showingUnavailableMembers} Unavailable</button> \n                            </div>\n                            <div className=\"col text-center\">\n                                <button className=\"content_button darker_color game_options\" onClick={()=> this.tenBuckers(this.props.showingNonPlayingTenBuckers)}>{this.props.showingNonPlayingTenBuckers} Non-Members</button> \n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    players: state.players.players,\n    gameParticipants: state.games.draft.players,\n    playingNonMembers: state.games.playingNonMembers,\n    showingNonPlayingTenBuckers: state.games.showingNonPlayingTenBuckers,\n    showingUnavailableMembers: state.games.showingUnavailableMembers\n})\n\nexport default connect(mapStateToProps, { showUnavailable, hideUnavailable, showNonMembers, hideNonMembers }) (GameOptionsTop)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { lockGameInfo } from \"../js/actions/gameActions\"\nimport { unlockGameInfo } from \"../js/actions/gameActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Locker extends Component {\n\n    lockGame(game) {\n        this.props.lockGameInfo(game)\n    }\n\n    unlockGame(game){\n        this.props.unlockGameInfo(game)\n    }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom === \"visible\" ? \"visible row \" : \"hidden row\"}>\n                <div className=\"container\">\n                    <div className=\"row\">    \n                        <div className=\"col text-center lock_icons_container\">\n                            <button className={this.props.lockStatus === \"visible\" ? \"locked content_button lock\" : \"unlocked content_button lock\"} onClick={() => this.unlockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"unlock-alt\" /></button> \n                            <button className={this.props.lockStatus === \"visible\" ? \"unlocked content_button lock\" : \"locked content_button lock\"} onClick={() => this.lockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"lock\"/></button> \n                        </div>\n                    </div>\n                </div>\n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    // noStatsMessage: state.stats.visibility,\n})\n\nexport default connect(mapStateToProps, { lockGameInfo, unlockGameInfo }) (Locker)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleGames } from \"../js/actions/displayActions\"\n\nimport NavBar from \"../components/NavBar\";\nimport GameList from \"../components/DraftPageComp/GameList.js\";\nimport Calendar from \"../components/DraftPageComp/Calendar.js\";\nimport Drafter from \"../components/DraftPageComp/Drafter.js\"\nimport GameOptionsBottom from \"../components/DraftPageComp/GameOptionsBottom.js\"\nimport GameOptionsTop from \"../components/DraftPageComp/GameOptionsTop.js\"\nimport Locker from \"../components/Locker.js\"\nimport { loadState } from \"../components/sessionStorage\"\n\nimport \"../styles/css/draft.css\";\n\nclass Draft extends Component { \nconstructor(props) {\n    super(props);\n    this.state = {\n        changeLock: true\n    }\n}\n\ncomponentDidMount() {\n    const privileges = loadState()\n    this.setState(privileges)\n}\n\ntoggleGamesFunc(currentlyShowing) {\n    this.props.toggleGames(currentlyShowing)\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Draft Teams</h1>\n            <div className= \"row organizer\">\n                <div className=\"col\"><Calendar/></div>\n                <div className=\"col\"><GameList/></div>\n            </div>\n            <div className=\"row\">\n                <button className=\"btn contrast_color change_list_display\" onClick={() => this.toggleGamesFunc(this.props.showing)}> {this.props.buttonMsg} Games</button>\n            </div>\n        </div>\n        <div className={\"main_main \" + this.props.visibility.top}>\n            <GameOptionsTop />\n        </div>\n        <div className={\"main_main \" + this.props.visibility.main}>\n            <Drafter />\n        </div>\n        <div className={\"main_main \" + this.props.visibility.bottom}>\n            <GameOptionsBottom />\n            {this.state.changeLock === true ? <Locker /> : null }\n        </div>\n    </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    showing: state.display.showing,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    visibility: state.games.visibility\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleGames} ) (Draft)\n","import { SHOW_FUTURE, SHOW_PAST } from './types';\n\nexport const toggleGames = (currentState) => dispatch => {\n    if (currentState === \"past\") {\n        dispatch({\n            type: SHOW_FUTURE\n        })\n    }\n    else {\n        dispatch({\n            type: SHOW_PAST\n        })\n    }\n    }","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addPlayer } from '../../js/actions/playerActions'\nimport { editPlayer } from '../../js/actions/playerActions'\nimport { resetTabs } from '../../js/actions/playerActions'\nimport { updateField } from '../../js/actions/playerActions'\n\nimport { loadState } from \"../sessionStorage\"\n\nclass Form extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            createPlayer: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    componentDidMount() {\n        const privileges = loadState()\n        this.setState(privileges)\n    }\n    handleCancel(event) {\n        event.preventDefault()\n        this.props.resetTabs()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedPlayer = {...this.props.player, [name]: value}\n        this.props.updateField(editedPlayer)\n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        /* If a player is a goalie, their level needs to be set as \"Goalie\" */\n        let assignedLevel;\n        if ( this.props.player.preferredPosition === \"Goalie\") {assignedLevel = \"Goalie\"}\n        else {assignedLevel = this.props.player.playerLevel}\n        let newPlayer = {\n            name: this.props.player.name,\n            fullName: this.props.player.fullName,\n            playerLevel: assignedLevel,\n            preferredPosition: this.props.player.preferredPosition,\n            membershipStatus: this.props.player.membershipStatus,\n            email: this.props.player.email\n            }\n        \n        if (this.props.formMode === \"Add\") {\n            this.props.addPlayer(newPlayer)\n            }\n        else {\n            let id = this.props.player._id\n            this.props.editPlayer(id, newPlayer)\n        }\n\n        // go back to tab#1\n        this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n            {this.state.createPlayer === true ? \n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"name\"\n                                value= {this.props.player.name}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Full Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"fullName\"\n                                value= {this.props.player.fullName}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Preferred Position: </label>\n                            <select name=\"preferredPosition\" onChange={(event) => this.handleChange(event)} value={this.props.player.preferredPosition}>\n                                <option defaultValue=\"Forward\">Forward</option>\n                                <option value=\"Defense\">Defense</option>\n                                <option value=\"Goalie\">Goalie</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Membership Status:</label>\n                            <select name=\"membershipStatus\" onChange={(event) => this.handleChange(event)} value= {this.props.player.membershipStatus}>\n                                <option defaultValue=\"Member\">Member</option>\n                                <option value=\"Ten Bucker\">Ten Bucker</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\"> \n                            <label>Level: </label>\n                            <select name=\"playerLevel\" onChange={(event) => this.handleChange(event)} value= {this.props.player.playerLevel}>\n                                <option value=\"A+\">A+</option>\n                                <option value=\"A\">A</option>\n                                <option value=\"A-\">A-</option>\n                                <option defaultValue=\"B+\">B+</option>\n                                <option value=\"B\">B</option>\n                                <option value=\"B-\">B-</option>\n                                <option value=\"C+\">C+</option>\n                                <option value=\"C\">C</option>\n                                <option value=\"C-\">C-</option>\n                                <option value=\"D+\">D+</option>\n                                <option value=\"D\">D</option>\n                                <option value=\"D-\">D-</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Email: </label>\n                            <input \n                                type=\"text\" \n                                name=\"email\"\n                                value= {this.props.player.email}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <button type=\"submit\" value=\"Submit\" className=\"contrast_color\"> Submit </button>\n                        <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                    </form>\n                </div> : \n            <div className=\"unfortunately\">\n                <p className=\"no_game\">Login as an admin to add players!</p>\n            </div> }\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tab1,\n    tab2: state.players.tab2,\n    panel1: state.players.panel1,\n    panel2: state.players.panel2,\n    player: state.players.player,\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { addPlayer, editPlayer, resetTabs, updateField }) (Form)","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\nimport { loadState } from '../sessionStorage'\n\nclass MemberList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editMember: true,\n            deleteMember: false,\n        }\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        console.log(\"Need a warning that deleting is permanent...\")\n        console.log(\"Active/Inactive?\")\n        // this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus === \"Member\").map(player => {\n                            return (\n                                <tr key={player._id}> \n                                    <td className=\"player_table\">{player.name}</td>\n                                    <td className=\"player_table\"> \n                                        {this.state.editMember === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button>}\n                                        {this.state.deleteMember === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (MemberList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\n\nimport { loadState } from '../sessionStorage'\n\nclass TenBuckerList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editTenBucker: true,\n            deleteTenBucker: false\n        }\n    }\n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus !== \"Member\").map(player => {\n                            return (\n                                <tr key={player._id}> \n                                    <td className=\"player_table\">{player.name}</td>\n                                    <td className=\"player_table\"> \n                                        {this.state.editTenBucker === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button> }\n                                        {this.state.deleteTenBucker === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>)\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (TenBuckerList)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from '../js/actions/playerActions';\n\nimport NavBar from \"../components/NavBar\";\nimport Form from \"../components/PlayerPageComp/Form.js\";\nimport MemberList from \"../components/PlayerPageComp/MemberList.js\"\nimport TenBuckerList from \"../components/PlayerPageComp/TenBuckerList.js\"\n\nimport \"../styles/css/player.css\";\n\nclass Player extends Component {\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n        \nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_alternate\">\n                <h1 className=\"h1_alternate\">Players</h1>\n                <div className=\"row tab_centering\">\n                    <span id=\"1\" className={\"tab \" + this.props.tab1} onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Members </span>\n                    <span id=\"2\" className={\"tab \" + this.props.tab2} onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Ten Buckers </span>\n                    <span id=\"3\" className={\"tab \" + this.props.tab3} onClick={() => this.toggleStatus(\"3\", this.props.tab3) }> {this.props.formMode} Player </span>\n                </div>\n                <div className= \"row main_for_tab\">\n                    <span className={this.props.panel1 + \" full_tab_size\"}> <MemberList /> </span> \n                    <span className={this.props.panel2 + \" full_tab_size\"}> <TenBuckerList /> </span> \n                    <span className={this.props.panel3 + \" full_tab_size\"}> <Form /> </span> \n                </div>\n            </div>\n        </div>\n    \n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tabs[0],\n    tab2: state.players.tabs[1],\n    tab3: state.players.tabs[2],\n    panel1: state.players.panels[0],\n    panel2: state.players.panels[1],\n    panel3: state.players.panels[2],\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { toggleTabStatus }) (Player)\n","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES, \n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES,\n} from './types';\n\nimport API from \"../../utils/API\"\n\nconst moment = require(\"moment\");\n// need a separate function to fetch games within a time span\nexport const getGamesForRecords = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let arrayOfTenBuckerIDs = []\n                let allTenBuckers= res.data.map(game => game.players.filter(player => player.membershipStatus !== \"Member\"))\n                allTenBuckers.forEach(array => array.map(player => arrayOfTenBuckerIDs.push(player._id)))\n\n                dispatch({\n                    type: GET_GAMES_IN_TIMESPAN,\n                    payload: { \n                        games: res.data,\n                        allTenBuckers: arrayOfTenBuckerIDs\n                    }\n                })\n            }\n        })\n    }\n\n\nexport const toggleVisibility = (currentState) => dispatch => {\n    if (currentState === \"hidden\") {\n        dispatch({\n            type: SHOW_GAMES_TO_STATS\n            })\n        }\n    }\n\nexport const getGamesAndTransform = () => dispatch => {\n    \n    const monthify = (string) => {\n        switch (string) {\n            case \"01\":\n            return string = \"January\"\n            \n            case \"02\":\n            return string = \"February\"\n            \n            case \"03\":\n            return string = \"March\"\n            \n            case \"04\":\n            return string = \"April\"\n            \n            case \"05\":\n            return string = \"May\"\n            \n            case \"06\":\n            return string = \"June\"\n            \n            case \"07\":\n            return string = \"July\"\n            \n            case \"08\":\n            return string = \"August\"\n            \n            case \"09\":\n            return string = \"September\"\n            \n            case \"10\":\n            return string = \"October\"\n            \n            case \"11\":\n            return string = \"November\"\n            \n            case \"12\":\n            return string = \"December\"\n            \n            default: \n            return\n\n        }\n        }\n\n    const yearString = (game) => game.substring(0, 4)\n    const monthString = (game) => game.substring(5,7)\n\n    const beautifyGames = (array) => {\n        let object =\n        array.reduce((difYears,game) => {\n            difYears[yearString(game._id)] = difYears[yearString(game._id)] || [];\n            difYears[yearString(game._id)].push(game);\n            return difYears;\n            },{} \n        )\n        let arrayOfObjects = []\n        for (let i = 0; i < Object.values(object).length; i++) {\n            // for each array of games of the object created by the first reduce\n            let remapped = Object.values(object)[i].reduce((difMonths, game) => {\n                // each game is pushed to a different array under the \"month\"\n                difMonths[monthify(monthString(game._id))] = difMonths[monthify(monthString(game._id))] || [];\n                difMonths[monthify(monthString(game._id))].push(game);\n                return difMonths;\n                },{}\n            )\n            // This separates the months into distinct arrays. We push them in a separate array, \n            // otherwise another year's games might overwrite the data\n            arrayOfObjects.push({[Object.keys(object)[i]]: remapped})\n            }\n            return arrayOfObjects\n        }\n\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let pastGames = res.data.filter(game => game._id <= moment().format(\"YYYY-MM-DD\"))\n                let reducedGames = beautifyGames(pastGames)\n                let years = Object.keys(Object.values(reducedGames)).map(e => [e] = \"visible\")\n                // console.log(\"indexes2: \", years)\n                dispatch({\n                    type: GET_GAMES_AND_TRANSFORM,\n                    payload: \n                        {\n                            game: reducedGames,\n                            visibility: years\n                        }\n                    })\n                }\n            })\n        }\n\nexport const setVisibility = (array) => dispatch => {\n    dispatch({\n            type: SET_YEARS_VISIBILITIES,\n            payload: array\n    })\n}\n\nexport const selectGame = (id) => dispatch => {\n    dispatch({\n        type: ADD_GAME_TO_SELECTED,\n        payload: id\n    })\n}\n\nexport const unselectGame = (game) => dispatch => {\n    dispatch({\n        type: REMOVE_GAME_FROM_SELECTED,\n        payload: game\n    })\n}\n\nexport const selectPlayer = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_TO_SELECTED,\n        payload: {selected: player}\n    })\n}\n\nexport const unselectPlayer = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_FROM_SELECTED,\n        payload: {selected: player}\n    })\n}\n\nexport const toggleViews = (currentStatus, element) => dispatch => {\n    if (currentStatus === \"visible\") {\n        dispatch({\n            type: TOGGLE_RECORDS_VIEWS,\n            payload: {\n                dates: \"hidden\",\n                games: \"hidden\",\n                players: \"hidden\",\n                sort: \"hidden\",\n                chart: \"hidden\"\n            }\n        })}\n    else {\n        switch (element) {\n            case \"dates\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"visible\",\n                    games: \"hidden\",\n                    players: \"hidden\",\n                    sort: \"hidden\",\n                    chart: \"hidden\"\n                }\n            })\n            \n            break;\n            \n            case \"games\":\n                dispatch({\n                    type: TOGGLE_RECORDS_VIEWS,\n                    payload: {\n                        dates: \"hidden\",\n                        games: \"visible\",\n                        players: \"hidden\",\n                        sort: \"hidden\",\n                        chart: \"hidden\"\n                    }\n                })\n            break;\n\n            case \"players\":\n                dispatch({\n                        type: TOGGLE_RECORDS_VIEWS,\n                        payload: {\n                            dates: \"hidden\",\n                            games: \"hidden\",\n                            players: \"visible\",\n                            sort: \"hidden\",\n                            chart: \"hidden\"\n                        }\n                    })\n            break;\n\n            case \"sort\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"hidden\",\n                    games: \"hidden\",\n                    players: \"hidden\",\n                    sort: \"visible\",\n                    chart: \"hidden\"\n                }\n            })\n            break;\n\n            case \"chart\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"hidden\",\n                    games: \"hidden\",\n                    players: \"hidden\",\n                    sort: \"hidden\",\n                    chart: \"visible\"\n                }\n            })\n            break;\n\n            default:\n            return\n        }\n    }\n}\n\nexport const addPlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const removePlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const selectDateRange = (start, end) => dispatch => {\n    if (start === \"Invalid date\") {start = \"2000-01-01\"}\n    if (end === \"Invalid date\") {end = moment().format(\"YYYY-MM-DD\")}\n    dispatch({\n        type: SET_DATE_RANGE,\n        payload: {\n            from: start,\n            to: end\n        }\n    })\n}\n\nexport const toggleSortOptions = (tab, currentStatus, ascArrow) => dispatch => {\n    switch(tab){\n        case \"az\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_AZ_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"active\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"games\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GAMES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"active\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"wins\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_WINS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"active\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"losses\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_LOSSES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"active\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        \n        case \"ties\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_TIES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"active\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"goals\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GOALS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"active\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"gpg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GPG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"active\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"assists\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            }) \n\n        }\n        else {\n            dispatch({\n                type: SORT_ASSISTS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"active\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"apg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_APG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"active\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        break;\n\n        default:\n        return\n    }\n\n}\n\nexport const toggleSelectAll = (update) => dispatch => {\n    switch (update) {\n        case \"unselected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"selected_member\"}\n            })    \n        break;\n\n        case \"selected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"unselected_member\"}\n            })    \n        \n        break;\n\n        case \"unselected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"selected_non_member\"}\n            })    \n        break;\n\n        case \"selected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"unselected_non_member\"}\n            })    \n        break;\n\n        default:\n        return;\n    }\n}\n\nexport const batchCardUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CARD_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchChartUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CHART_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchUnselect = (type) => dispatch => {\n    dispatch({\n        type: BATCH_UNSELECT,\n        payload: type\n    })\n}\n\n// this handles when games are removed after the players. In this case, data needs to be re-initiated\n// we recreate the array of players\nexport const updatePlayers = (players) => dispatch => {\n    dispatch({\n        type: REPLACE_PLAYERS_RECORDS,\n        payload: players\n    })\n}\n// data is sent to the modal in showcase.js\nexport const togglePlayerModal = (newStatus, data) => dispatch => {\n    dispatch({\n        type: TOGGLE_PLAYER_MODAL,\n        payload: {\n            status: newStatus,\n            data: data\n        }\n    })\n}\n\nexport const selectAllGames = (status) => dispatch => {\n    dispatch({\n        type: BATCH_GAMES,\n        payload: status,\n    })\n}\n\nexport const unselectAllGames = () => dispatch => {\n    dispatch({\n        type: UNSELECT_ALL_GAMES,\n    })\n}\n\nexport const filterPlayerRecordsByType = (object) => dispatch => {\n    let operator;\n    let playerType;\n\n    if (object.offense === \"unselected\") {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"null\";\n                playerType = \"null\";\n            }\n            else {\n                operator = \"only\";\n                playerType = \"Goalie\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Defense\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Forward\"\n            }\n        }\n    }\n    else {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Forward\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Defense\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"but\"\n                playerType = \"Goalie\"\n            }\n            else {\n                operator = \"null\"\n                playerType = \"null\"\n            }\n        }\n\n    }\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_TYPE,\n        payload: {\n            operator: operator,\n            playerType: playerType,\n            playerFilters: object\n        }\n    })\n}\n\nexport const filterPlayerRecordsByGames = (object) => dispatch => {\n    console.log(\"object received in filterGames statsActions.js: \", object)\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_GAMES,\n        payload: object\n        })\n}","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGame } from '../../js/actions/gameActions'\nimport { getGamesAndTransform } from '../../js/actions/statsActions'\nimport { setVisibility } from '../../js/actions/statsActions'\n\nimport _ from \"underscore\"\n\nclass PastGameList extends Component {\n\n    componentDidMount() {\n        this.props.getGamesAndTransform();\n    }\n\n    toggleVisibility(currentStatus, num){\n        let newStatus;\n        if (currentStatus === \"visible\") {newStatus = \"hidden\"}\n        else { newStatus = \"visible\" }\n        \n        let visibleBefore = this.props.gameVisibility.slice(0, num)\n        let visibleAfter = this.props.gameVisibility.slice(num + 1)\n        let newArray = [...visibleBefore, newStatus, ...visibleAfter]\n        \n        this.props.setVisibility(newArray)\n        }\n\n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n        }\n\n    renderGames(object) {\n        return Object.values(object).map((game, i) => {\n            return (\n                <button key={game._id} className=\"btn past_game_button contrast_color\" onClick={()=> this.getGameInfo(game._id)}> {game._id} </button>\n                )\n            })\n        }\n\n    renderMonth(object) {\n        return Object.entries(Object.values(object)[0]).map(([key, value], i) => {\n            return (\n                <div key= {i}>\n                    <h3 className=\"h3_alternate\">{key}:</h3>\n\n                    {this.renderGames(value)}\n                </div>\n                )\n            })\n        }\n    \n    \n    renderYear(object) {\n        let reOrderedArray = _.sortBy(Object.values(object)).reverse()\n        return reOrderedArray.map((year, i) => {\n            return (\n                <div key={i}>\n                    <div>\n                        <h3 className=\"h3_main\">{ Object.keys(year)}</h3> \n                        <div className=\"hide_year_button\" onClick={()=> this.toggleVisibility(this.props.gameVisibility[i], i)}> {this.props.gameVisibility[i] === \"visible\" ? \"[hide]\" : \"[show]\" }</div>\n                    </div>\n                    <div className={this.props.gameVisibility ? this.props.gameVisibility[i] : null + \" games_per_year\"}>\n                        {this.renderMonth(year)} \n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"list_of_games\">\n                    <div>\n                        {this.renderYear(this.props.reducedGames)}\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    reducedGames: state.stats.reducedGames,\n    gameVisibility: state.stats.gameVisibility\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { getGamesAndTransform, setVisibility, getGame }) (PastGameList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { editGameInfo } from '../../js/actions/gameActions'\n// import { deletePlayer } from '../../../js/actions/playerActions'\n// import { editForm } from '../../../js/actions/playerActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nimport Locker from \"../Locker.js\"\n\nclass ScoreBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editScore: true,\n            changeLock: true\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    logStat(playerID, type, currentValue){\n        let gameId = this.props.game._id\n        switch (type){\n            case \"add_goal_dark\":\n            let goalUpdate = currentValue + 1;\n            let scoreUpdate = this.props.game.goals_dark + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_white:\n                this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"add_goal_white\":\n            goalUpdate = currentValue + 1;\n            scoreUpdate = this.props.game.goals_white + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_dark:\n                this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"substract_goal_dark\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_dark - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0) {\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_white:\n                    this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                    }\n                }\n            break;\n\n            case \"substract_goal_white\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_white - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0){\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                }\n                }\n            break;\n\n            case \"add_assist\":\n            let assistUpdate = currentValue + 1;\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n            break;\n\n            \n            case \"substract_assist\":\n            assistUpdate = currentValue - 1;\n            if (assistUpdate >= 0){\n                this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n                }\n            break;\n\n            default:\n            return;\n        }\n\n    }\n\n    render() {\n        return (\n            <span className=\"full\">\n                <div>\n                    <h1 className=\"h1_main\">{this.props.game._id}</h1>\n                    <div className=\"row tables_container\">\n                        <div className=\"col table_container\">\n                            <h1 className=\"h1_alternate\">Dark<br/>{this.props.game.goals_dark}</h1>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th className=\"table_col_name\">Player</th> \n                                        <th className=\"table_col_name\">Goals</th>\n                                        <th className=\"table_col_name\">Assists</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.players ? (this.props.players\n                                        .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                        .map(player => {\n                                            return (\n                                                <tr className=\"stats_row\" key={player._id}> \n                                                    <td className=\"player_stats stats_name\">{player.name}\n                                                    </td>\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_dark\",player.gameInfo.goals)} /> : null }\n                                                            <div className={player.gameInfo.goals > 0 ? \"nice\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_dark\",player.gameInfo.goals)} />  : null }\n                                                        </div>\n                                                    </td>\n\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} />  : null }\n                                                            <div className={player.gameInfo.assists > 0 ? \"good\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus}  onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                )\n                                            })\n                                        ) : null\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"col table_container\">\n                                <h1 className=\"h1_alternate\">White<br/>{this.props.game.goals_white}</h1>\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <th className=\"table_col_name\">Player</th> \n                                            <th className=\"table_col_name\">Goals</th>\n                                            <th className=\"table_col_name\">Assists</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.props.players ? (this.props.players\n                                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                            .map(player => {\n                                                return (\n                                                    <tr className=\"stats_row\" key={player._id}> \n                                                        <td className=\"player_stats stats_name\">{player.name}\n                                                        </td>\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_white\",player.gameInfo.goals)} /> : null }\n                                                                <div className={player.gameInfo.goals > 0 ? \"nice\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_white\",player.gameInfo.goals)} /> : null }\n                                                            </div>\n                                                        </td>\n\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} /> : null }\n                                                                <div className={player.gameInfo.assists > 0 ? \"good\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    )\n                                                })\n                                            ) : null\n                                            }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>    \n                    </div>    \n                {this.state.changeLock === true ? <Locker /> : null }\n        </span>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    game: state.games.draft,\n    players: state.games.draft.players,\n    lockStatus: state.games.lockStatus\n\n})\n\nexport default connect(mapStateToProps, { editGameInfo }) (ScoreBoard)\n","import React, { Component } from 'react';\n\nclass NoStatsBoard extends Component {\n    render(){\n        return (\n            <div className=\"no_stats_message\">\n                <p className=\"no_game\">The teams for this game have not been drafted yet. Please come back later!\n                </p>    \n            </div>\n        )\n    }\n}\n\nexport default NoStatsBoard;\n","import React, { Component } from \"react\";\n\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleVisibility } from \"../js/actions/statsActions\"\n\nimport NavBar from \"../components/NavBar\";\nimport PastGameList from \"../components/StatsPageComp/PastGamesList.js\"\nimport ScoreBoard from \"../components/StatsPageComp/ScoreBoard.js\"\nimport NoStatsBoard from \"../components/StatsPageComp/NoStatsBoard.js\"\n\nimport \"../styles/css/stats.css\";\n\nclass Stats extends Component {         \nrender() {\n    return (\n        <div>\n            <NavBar />\n            <div className=\"main_main\">\n                    <h1 className=\"h1_main\">Enter Stats</h1>\n                <div className= \"row \">\n                    <PastGameList />\n                </div>\n            </div>\n            {this.props.visibility.noStatsMessage === \"visible\" ? (\n\n                    <div className={\"main_main \" + this.props.visibility.noStatsMessage}>\n                        <div className= \"row \">\n                            <NoStatsBoard />\n                        </div>\n                    </div>\n                ) : (\n\n                    <div className={\"main_main \" + this.props.visibility.gameStats}>\n                        <div className= \"row \">\n                            <ScoreBoard />\n                        </div>\n                    </div>\n\n                )\n            }\n            \n        </div>\n    \n    )\n    }\n}\n\n// export default Stats\nconst mapStateToProps = state => ({\n    visibility: state.games.visibility,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleVisibility } ) (Stats)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { selectDateRange } from \"../../js/actions/statsActions\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nconst moment = require(\"moment\");\nclass DateRange extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChangeStart(date) {\n        this.setState({\n            startDate: date\n        })\n    }\n\n    handleChangeEnd(date) {\n        this.setState({\n            endDate: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let startDate = moment(this.state.startDate).format(\"YYYY-MM-DD\")\n        let endDate = moment(this.state.endDate).format(\"YYYY-MM-DD\")\n        this.props.selectDateRange(startDate, endDate)\n    }\n\n\n    render() {\n        return (\n            <div className={\"records_calendar \" + this.props.datePickers}>\n                <div className=\"calendar_alignment\">\n                    <form onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                        <DatePicker\n                            placeholderText=\"From: MM DD YYYY\"\n                            selected={this.state.startDate}\n                            selectsStart\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeStart}\n                            isClearable={true}\n                        />\n\n                        <DatePicker\n                            placeholderText=\"To:     MM DD YYYY\"\n                            selected={this.state.endDate}\n                            selectsEnd\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeEnd}\n                            isClearable={true}\n                        />\n                            <div className=\"date_range_options\">\n                                <button id=\"range_submit\" className=\"content_button btn contrast_color\" name=\"submit\" type=\"submit\" >Submit</button>\n                            </div>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    datePickers: state.stats.datePickers\n    })\n\n\nexport default connect(mapStateToProps, { selectDateRange }) (DateRange)\n    ","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport DateRange from \"./DateRange\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass DateSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"dates\")\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.datePickers)}> {this.props.datePickers === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Dates</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className={\"date_pickers \" + this.props.datePickers}>\n                            <div className={\"calendar_container \" + this.props.datePickers}>\n                                <DateRange />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    allGames: state.stats.gamesForRecords,\n    datePickers: state.stats.datePickers,\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, toggleViews }) (DateSelector)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { selectGame } from '../../js/actions/statsActions'\nimport { unselectGame } from '../../js/actions/statsActions'\nimport { selectAllGames } from '../../js/actions/statsActions'\nimport { unselectAllGames } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { updatePlayers } from '../../js/actions/statsActions'\nimport { batchChartUpdate } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass GameSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    unselectGame(game) {\n        this.props.unselectGame(game)\n        /* Adapting the reducer from Player selector to re-create an array of playerRecords after game has been deleted */\n        let playersForRecords = []\n        // if the game is added after players have been selected\n            if (this.props.selectedPlayers.length > 0) {\n                this.props.selectedPlayers.forEach((broomballer) => {\n                // re-filter the game array removing the game unselected\n                let gamesPlayed = this.props.selectedGames.filter(match => match._id !== game._id).filter(game => game.players.filter(player => player._id === broomballer._id )[0])\n                if (gamesPlayed.length > 0) {\n                    let playerReduced = gamesPlayed.reduce((players, game) => {\n                        let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                        let win;\n                        let available;\n                        players.name = broomballer.name\n                        players._id = broomballer._id\n                        players.membershipStatus = broomballer.membershipStatus\n                        players.preferredPosition = broomballer.preferredPosition\n                        \n                        players.gamesPlayed = players.gamesPlayed || []\n                        if(gameInfo[0].available === true){\n                            available= 1\n                            players.gamesPlayed.push(available)\n                        }\n                        \n                        players.goals = players.goals || []\n                        if(gameInfo[0].available === true) {\n                            players.goals.push(gameInfo[0].goals)\n                        }\n                        \n                        players.assists = players.assists || []\n                        if (gameInfo[0].available === true) {\n                            players.assists.push(gameInfo[0].assists)\n                        }\n                        \n                        players.wins = players.wins || []\n                        if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                            win= \"Win\"\n                            players.wins.push(win)\n                        }\n                        \n                        players.losses = players.losses || []\n                        if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                            let loss= \"Loss\"\n                            players.losses.push(loss)\n                        }\n\n                        players.ties = players.ties || []\n                        if(gameInfo[0].available === true && game.win === \"Tie\"){\n                            let tie= \"Tie\"\n                            players.ties.push(tie)\n                        }\n\n                        return players\n                        }, {});\n                        // this line errors if the player is a ten-bucker who didn't play in the remaining games\n                        let gamePlayedFromArray = playerReduced.gamesPlayed ? playerReduced.gamesPlayed.length : 0 \n                        let winsFromArray = playerReduced.wins.length\n                        let lossesFromArray = playerReduced.losses.length\n                        let tiesFromArray = playerReduced.ties.length\n                        let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let goalsFromArray = playerReduced.goals ? playerReduced.goals.reduce((a,b) => a + b, 0) : 0\n                        let assistsFromArray = playerReduced.assists ? playerReduced.assists.reduce((a, b) => a + b, 0) : 0\n                        let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                        let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n\n                        playerReduced.gamesPlayed = gamePlayedFromArray\n                        playerReduced.wins = winsFromArray\n                        playerReduced.losses = lossesFromArray\n                        playerReduced.ties = tiesFromArray\n                        playerReduced.winPercent = winPercent\n                        playerReduced.lossPercent = lossPercent\n                        playerReduced.tiePercent = tiePercent\n                        playerReduced.goals = goalsFromArray \n                        playerReduced.assists = assistsFromArray\n                        if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                        if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n                        \n            \n                        playersForRecords.push(playerReduced)\n                        }\n                        else {\n                            let playerWithoutRecord = {\n                                name: broomballer.name,\n                                gamesPlayed: 0,\n                                goals: \"N/A\",\n                                assists: \"N/A\",\n                                membershipStatus: broomballer.membershipStatus,\n                                winPercent: \"N/A\",\n                                lossPercent: \"N/A\",\n                                tiePercent: \"N/A\",\n                                win: \"N/A\",\n                                loss: \"N/A\",\n                                tie: \"N/A\",\n                                gpg: \"N/A\",\n                                apg: \"N/A\",\n                                _id: broomballer._id\n                            }\n                            // we do not want to create empty cards if zero games are selected\n                            if(this.props.selectedGames.length -1 > 0) {\n                                playersForRecords.push(playerWithoutRecord)\n                            }\n                    }\n                this.props.updatePlayers( playersForRecords )\n                })\n            }\n    }\n    \n    gameSelection(arrayOfGames) {\n        // this function takes an array of games so that it can be used for both individual and batch select\n        // this array is all the games for which records need to be created. \n        \n        // marks the selected games as such \n        arrayOfGames.forEach(game => this.markAsSelected(game))\n        // need a function that marks non selected games as such\n        \n        /*  Adapting the reducer originally created in PlayerSelector */\n        let transformedArrayForCards = []\n        // if the game is added after players have been selected\n            if (this.props.selectedPlayers.length > 0) {\n                // We will create record for each player * each game selected\n                this.props.selectedPlayers.forEach((broomballer) => {\n                // we map/filter all games selected to create record for each game played. If the player didn't play any game, we create an empty \"N/A\" record instead\n                let gamesPlayed = arrayOfGames.filter(game => game.players.filter(player => player._id === broomballer._id )[0])\n                // If the broomballer played any game \n                if (gamesPlayed.length > 0) {\n                    let playerReduced = gamesPlayed.reduce((players, game) => {\n                        let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                        let win;\n                        let available;\n                        players.name = broomballer.name\n                        players._id = broomballer._id\n                        players.membershipStatus = broomballer.membershipStatus\n                        players.preferredPosition = broomballer.preferredPosition\n                        \n                        players.gamesPlayed = players.gamesPlayed || []\n                        if(gameInfo[0].available === true){\n                            available = 1\n                            players.gamesPlayed.push(available)\n                        }\n                        \n                        players.goals = players.goals || []\n                        if(gameInfo[0].available === true) {\n                            players.goals.push(gameInfo[0].goals)\n                        }\n                        \n                        players.assists = players.assists || []\n                        if (gameInfo[0].available === true) {\n                            players.assists.push(gameInfo[0].assists)\n                        }\n                        \n                        players.wins = players.wins || []\n                        if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                            win= \"Win\"\n                            players.wins.push(win)\n                        }\n\n                        players.losses = players.losses || []\n                        if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                            let loss= \"Loss\"\n                            players.losses.push(loss)\n                        }\n\n                        players.ties = players.ties || []\n                        if(gameInfo[0].available === true && game.win === \"Tie\"){\n                            let tie= \"Tie\"\n                            players.ties.push(tie)\n                        }\n                    \n                        return players\n                        }, {});\n                        \n                        let gamePlayedFromArray = playerReduced.gamesPlayed ? playerReduced.gamesPlayed.length : 0 \n                        let winsFromArray = playerReduced.wins.length\n                        let lossesFromArray = playerReduced.losses.length\n                        let tiesFromArray = playerReduced.ties.length\n                        let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let goalsFromArray = playerReduced.goals ? playerReduced.goals.reduce((a,b) => a + b, 0) : 0\n                        let assistsFromArray = playerReduced.assists ? playerReduced.assists.reduce((a, b) => a + b, 0) : 0\n                        let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                        let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n\n                        playerReduced.gamesPlayed = gamePlayedFromArray\n                        playerReduced.wins = winsFromArray\n                        playerReduced.losses = lossesFromArray\n                        playerReduced.ties = tiesFromArray\n                        playerReduced.winPercent = winPercent\n                        playerReduced.lossPercent = lossPercent\n                        playerReduced.tiePercent = tiePercent\n                        playerReduced.goals = goalsFromArray \n                        playerReduced.assists = assistsFromArray\n                        if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                        if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n                        \n                        transformedArrayForCards.push(playerReduced)\n                    }    \n                else {\n                    let playerWithoutRecord = {\n                        name: broomballer.name,\n                        gamesPlayed: 0,\n                        goals: \"N/A\",\n                        assists: \"N/A\",\n                        membershipStatus: broomballer.membershipStatus,\n                        winPercent: \"N/A\",\n                        lossPercent: \"N/A\",\n                        tiePercent: \"N/A\",\n                        win: \"N/A\",\n                        loss: \"N/A\",\n                        tie: \"N/A\",\n                        gpg: \"N/A\",\n                        apg: \"N/A\",\n                        _id: broomballer._id\n                    }\n                    transformedArrayForCards.push(playerWithoutRecord)\n                }\n            })        \n            // preventing the data to send before the array is complete\n            if (transformedArrayForCards.length === this.props.selectedPlayers.length) {\n                this.props.updatePlayers( transformedArrayForCards )\n                this.replaceBatchChartData( transformedArrayForCards )\n                }\n            }\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"games\")\n    }\n\n    replaceBatchChartData(arrayOfPlayers) {\n        let labels = []\n        let goalsArray = []\n        let assistsArray = []\n        let gamesPlayedArray = []\n        let winPercentArray = []\n        let lossPercentArray = []\n        let tiePercentArray = []\n        let gpgArray = []\n        let apgArray = []\n        arrayOfPlayers.forEach(e => {\n            labels.push(e.name);\n            goalsArray.push(e.goals);\n            assistsArray.push(e.assists);\n            gamesPlayedArray.push(e.gamesPlayed);\n            winPercentArray.push(e.winPercent);\n            lossPercentArray.push(e.lossPercent);\n            tiePercentArray.push(e.tiePercent);\n            gpgArray.push(e.gpg);\n            apgArray.push(e.apg);\n        })\n\n        let newObject = {\n            labels: labels,\n            datasets: [\n                // This is causing performance issues (reduxDevTools crashing)\n                /*{...this.props.chartData.datasets[0], data: goalsArray},\n                {...this.props.chartData.datasets[1], data: assistsArray},\n                {...this.props.chartData.datasets[2], data: gamesPlayedArray},\n                {...this.props.chartData.datasets[3], data: winPercentArray},\n                {...this.props.chartData.datasets[4], data: lossPercentArray},\n                {...this.props.chartData.datasets[5], data: tiePercentArray},\n                {...this.props.chartData.datasets[6], data: gpgArray},\n                {...this.props.chartData.datasets[7], data: apgArray}*/\n                // we are reinitializing the \"metadata\" instead\n                {\n                    label: \"Goals\",\n                    data: goalsArray,\n                    backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                    hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                },\n                {\n                    label: \"Assists\",\n                    data: assistsArray,\n                    backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Games\",\n                    data: gamesPlayedArray,\n                    backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                    hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Wins (%)\",\n                    data: winPercentArray,\n                    backgroundColor: 'rgba(75,192,192,0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                    hoverBorderColor: 'rgba(75,192,192,0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Losses (%)\",\n                    data: lossPercentArray,\n                    backgroundColor: '#d3b8ae',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: '#d3b8ae',\n                    hoverBorderColor: '#d3b8ae',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Ties (%)\",\n                    data: tiePercentArray,\n                    backgroundColor: '#ff8a65',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: '#ff8a65',\n                    hoverBorderColor: '#ff8a65',\n                    barThickness: 15,\n                },\n                {\n                    label: \"GPG\",\n                    data: gpgArray,\n                    backgroundColor: 'rgba(153,102,255,0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                    hoverBorderColor: 'rgba(153,102,255,0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"APG\",\n                    data: apgArray,\n                    backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                    hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                    options: {barThickness: 100},\n                },\n                ]\n        }\n        this.props.batchChartUpdate(newObject)\n    }\n\n    selectAllGames(status){\n        this.props.selectAllGames(status)\n        // we send the whole array of games in the time span to the gameSelection function\n        this.gameSelection(this.props.gamesForRecords)\n        \n    }\n    unselectAllGames(){\n        this.props.unselectAllGames()\n        this.props.gamesForRecords.forEach(game => this.props.unselectGame(game))\n        this.gameSelection([])\n    }\n    // When we hit the \"Select All Games\", we need to make sure the game has not already been selected\n    // otherwise it might be sent twice \n    markAsSelected(game) {\n        let arrayOfIds = this.props.selectedGames.map(gamesSelected => gamesSelected._id)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.selectGame(game)\n        }\n    }\n\n    markAsUnselected(game) {\n        let arrayOfIds = this.props.unselectedGames.map(gamesUnselected => gamesUnselected._id)\n        console.log(\"ids of games already unselected: \", arrayOfIds)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.unselectGame(game)\n        }\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfGames)}> {this.props.listOfGames === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Games</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                    <div className={this.props.listOfGames + \" select_all\"}>\n                            <div className=\"button_options_third_set\">\n                                {this.props.allGamesSelection === \"unselected_game\" ? \n                                    <button className={\"btn record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.selectAllGames(this.props.allGamesSelection)}> Select All Games <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>\n                                    :\n                                    <button className={\"btn record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.unselectAllGames()}> Select All Games <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>\n                                }\n                            </div>\n                            \n                        </div>\n\n                        <div className={\"record_list_of_games \" + this.props.listOfGames}>\n                                {this.props.gamesForRecords.length > 0 ?\n                                    this.props.gamesForRecords\n                                    .map(game => this.props.selectedGames.indexOf(game) === -1 ? \n                                    (<button key={game._id} className=\"btn unselected_game record_game_button\" onClick={() => this.gameSelection([game, ...this.props.selectedGames])}> {game._id} <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>)\n                                    : \n                                    (<button key={game._id} className=\"btn selected_game record_game_button\" onClick={() => this.unselectGame(game)}> {game._id} <FontAwesomeIcon icon=\"times\" className=\"game_action_icon\"/> </button>)\n                                )\n                                : <p className=\"no_game\">There is currently no game to display</p> \n                            }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    unselectedGames: state.stats.unselectedGames,\n    gamesForRecords: state.stats.gamesForRecords, \n    listOfGames: state.stats.listOfGames, // to toggle the visibility\n    selectedPlayers: state.stats.selectedPlayers,\n    chartData: state.stats.chartData,\n    allGamesSelection: state.stats.allGamesSelection\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, selectGame, unselectGame, selectAllGames, unselectAllGames, toggleViews, updatePlayers, batchChartUpdate }) (GameSelector)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { selectPlayer } from '../../js/actions/statsActions'\nimport { unselectPlayer } from '../../js/actions/statsActions'\n// This adds a player to the playerRecords array\nimport { addPlayerStatObject } from \"../../js/actions/statsActions\"\nimport { removePlayerStatObject } from \"../../js/actions/statsActions\"\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { toggleSelectAll } from '../../js/actions/statsActions'\n// this replaces all the records in the playerRecords array\nimport { updatePlayers } from '../../js/actions/statsActions'\n// this merges newly created records with already existing records in the playerRecords array\nimport { batchCardUpdate } from '../../js/actions/statsActions'\n// this is used to send data to the chartData object from which data is pulled to create the chart\nimport { batchChartUpdate } from '../../js/actions/statsActions'\nimport { batchUnselect } from '../../js/actions/statsActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass PlayerSelector extends Component {\n\n    componentDidMount() {\n        this.props.fetchPlayers();\n    }\n    // unselect individual players (by way of slicing the existing arrays of data)\n    unselectPlayer(player) {\n        this.props.unselectPlayer(player)\n        this.props.removePlayerStatObject(player)\n        // removing the player from the chart dataset\n        let indexOfRemovedPlayer = this.props.chartData.labels.indexOf(player.name)\n        // removing all the info for this player. We need a new array\n        let newLabels = this.props.chartData.labels.slice(0,indexOfRemovedPlayer).concat(this.props.chartData.labels.slice(indexOfRemovedPlayer + 1))\n        \n        let newGoals = this.props.chartData.datasets[0].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[0].data.slice(indexOfRemovedPlayer + 1));\n        let newAssists = this.props.chartData.datasets[1].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[1].data.slice(indexOfRemovedPlayer + 1));\n        let newGames = this.props.chartData.datasets[2].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[2].data.slice(indexOfRemovedPlayer + 1));\n        let newWins = this.props.chartData.datasets[3].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[3].data.slice(indexOfRemovedPlayer + 1));\n        let newLosses = this.props.chartData.datasets[4].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[4].data.slice(indexOfRemovedPlayer + 1));\n        let newTies = this.props.chartData.datasets[5].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[5].data.slice(indexOfRemovedPlayer + 1));\n        let newGpg = this.props.chartData.datasets[6].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[6].data.slice(indexOfRemovedPlayer + 1));\n        let newApg = this.props.chartData.datasets[7].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[7].data.slice(indexOfRemovedPlayer + 1));\n        \n        let newData = {\n            labels: newLabels,\n            datasets: [\n                {...this.props.chartData.datasets[0], data: newGoals}, // goals\n                {...this.props.chartData.datasets[1], data: newAssists}, // assists\n                {...this.props.chartData.datasets[2], data: newGames}, // Games\n                {...this.props.chartData.datasets[3], data: newWins}, // wins\n                {...this.props.chartData.datasets[4], data: newLosses}, // Losses\n                {...this.props.chartData.datasets[5], data: newTies}, // Ties\n                {...this.props.chartData.datasets[6], data: newGpg}, // gpg\n                {...this.props.chartData.datasets[7], data: newApg}, // apg\n                ]\n        }\n\n        this.props.batchChartUpdate(newData)\n\n    }\n    // select individual player\n    // if duplicate, see how to remove\n    selectPlayer(broomballer) {\n        let arrayOfplayer = []\n        this.markAsSelected(broomballer)\n        let gamesPlayed = this.props.selectedGames.filter(game => game.players.filter(player => player._id === broomballer._id )[0])\n        if (gamesPlayed.length > 0) {\n            let playerReduced = gamesPlayed.reduce((players, game) => {\n                let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                let win;\n                let available;\n                players.name = broomballer.name\n                players._id = broomballer._id\n                players.membershipStatus = broomballer.membershipStatus\n                players.preferredPosition = broomballer.preferredPosition\n                \n                players.gamesPlayed = players.gamesPlayed || []\n                if(gameInfo[0].available === true){\n                    available= 1\n                    players.gamesPlayed.push(available)\n                }\n                \n                players.goals = players.goals || []\n                if(gameInfo[0].available === true) {\n                    players.goals.push(gameInfo[0].goals)\n                }\n                \n                players.assists = players.assists || []\n                if (gameInfo[0].available === true) {\n                    players.assists.push(gameInfo[0].assists)\n                }\n                \n                players.wins = players.wins || []\n                if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                    win= \"Win\"\n                    players.wins.push(win)\n                }\n\n                players.losses = players.losses || []\n                if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                    let loss= \"Loss\"\n                    players.losses.push(loss)\n                }\n\n                players.ties = players.ties || []\n                if(gameInfo[0].available === true && game.win === \"Tie\"){\n                    let tie= \"Tie\"\n                    players.ties.push(tie)\n                }\n                \n                return players\n                }, {});\n                    \n            let gamePlayedFromArray = playerReduced.gamesPlayed.length\n            let winsFromArray = playerReduced.wins.length\n            let lossesFromArray = playerReduced.losses.length\n            let tiesFromArray = playerReduced.ties.length\n            let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n            let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n            let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n            let goalsFromArray = playerReduced.goals.reduce((a,b) => a + b, 0)\n            let assistsFromArray = playerReduced.assists.reduce((a, b) => a + b, 0)\n            let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n            let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n            \n            playerReduced.gamesPlayed = gamePlayedFromArray\n            playerReduced.wins = winsFromArray\n            playerReduced.losses = lossesFromArray\n            playerReduced.ties = tiesFromArray\n            // If the numbers are not integers, they are truncated \n            playerReduced.winPercent = winPercent\n            playerReduced.lossPercent = lossPercent\n            playerReduced.tiePercent = tiePercent\n            playerReduced.goals = goalsFromArray \n            playerReduced.assists = assistsFromArray\n            if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n            if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n            this.props.addPlayerStatObject( playerReduced )\n            arrayOfplayer.push(playerReduced)\n            }\n            else {\n                let playerWithoutRecord = {\n                    name: broomballer.name,\n                    gamesPlayed: 0,\n                    goals: \"N/A\",\n                    assists: \"N/A\",\n                    membershipStatus: broomballer.membershipStatus,\n                    winPercent: \"N/A\",\n                    lossPercent: \"N/A\",\n                    tiePercent: \"N/A\",\n                    win: \"N/A\",\n                    loss: \"N/A\",\n                    tie: \"N/A\",\n                    gpg: \"N/A\",\n                    apg: \"N/A\",\n                    _id: broomballer._id\n                }\n                this.props.addPlayerStatObject(playerWithoutRecord)\n                arrayOfplayer.push(playerWithoutRecord)\n            }\n            this.addBatchChartData(arrayOfplayer)\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"players\")\n    }\n    // calling the \"individual\" functions repeatedly makes redux (and redux devtool) fail & Chrome lag. For this reason, we create separate functions that will handle updates on the whole array. \n    // This dispatcher sends data to the function that will handle it.\n    selectAllPlayers(playerUpdate){\n        switch (playerUpdate) {\n            case \"unselected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // we need to add both all members + non-members already selected for we are going to replace all existing records\n            let allMembersAndSelectedTenBuckers = this.props.allPlayers.filter(player => player.membershipStatus === \"Member\").concat(this.props.selectedPlayers.filter(player => player.membershipStatus !== \"Member\"))\n            this.selectAndTransform(allMembersAndSelectedTenBuckers, \"select\")\n            break;\n\n            case \"selected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Member\")\n            break;\n\n            case \"unselected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // Adding both all ten buckers (who have played one of possible games) + non-members already selected\n            let allTenBuckersAndSelectedMembers = this.props.allPlayers.filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id)).concat(this.props.selectedPlayers.filter(player => player.membershipStatus === \"Member\"))\n            this.selectAndTransform(allTenBuckersAndSelectedMembers, \"select\")\n            break;\n\n            case \"selected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Ten Bucker\")\n            break;\n\n            default:\n            return;\n        }\n    }\n    // this function marks all players in the array as selected (via this.markAsSelected), creates an array of objects in the playerRecords reducer, \n    // and sends data to be handled by setChartData accordingly (=> selected players are created properly for Chartjs package)\n    selectAndTransform(array, type) {\n        let transformedArrayForCards = []\n            array.forEach(broomballer => {\n                let gamesPlayed = this.props.selectedGames.filter(game => game.players.filter(player => player._id === broomballer._id )[0])\n                if (type === \"select\") { this.markAsSelected(broomballer)}\n                if (gamesPlayed.length > 0) {\n                let playerReduced = gamesPlayed.reduce((players, game) => {\n                    let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                    players.name = broomballer.name\n                    players._id = broomballer._id\n                    players.membershipStatus = broomballer.membershipStatus\n                    players.preferredPosition = broomballer.preferredPosition\n                    \n                    players.gamesPlayed = players.gamesPlayed || []\n                    if(gameInfo[0].available === true){\n                        let available = 1\n                        players.gamesPlayed.push(available)\n                    }\n                    \n                    players.goals = players.goals || []\n                    if(gameInfo[0].available === true) {\n                        players.goals.push(gameInfo[0].goals)\n                    }\n                    \n                    players.assists = players.assists || []\n                    if (gameInfo[0].available === true) {\n                        players.assists.push(gameInfo[0].assists)\n                    }\n                    \n                    players.wins = players.wins || []\n                    if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                        let win= \"Win\"\n                        players.wins.push(win)\n                    }\n\n                    players.losses = players.losses || []\n                    if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                        let loss= \"Loss\"\n                        players.losses.push(loss)\n                    }\n\n                    players.ties = players.ties || []\n                    if(gameInfo[0].available === true && game.win === \"Tie\"){\n                        let tie= \"Tie\"\n                        players.ties.push(tie)\n                    }\n\n                    return players\n                    }, {});\n                let gamePlayedFromArray = playerReduced.gamesPlayed.length\n                let winsFromArray = playerReduced.wins.length\n                let lossesFromArray = playerReduced.losses.length\n                let tiesFromArray = playerReduced.ties.length\n                let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let goalsFromArray = playerReduced.goals.reduce((a,b) => a + b, 0)\n                let assistsFromArray = playerReduced.assists.reduce((a, b) => a + b, 0)\n                let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n                \n                playerReduced.gamesPlayed = gamePlayedFromArray\n                // should also store the arrays for stats purposes... ?\n                playerReduced.wins = winsFromArray\n                playerReduced.losses = lossesFromArray\n                playerReduced.ties = tiesFromArray\n                playerReduced.winPercent = winPercent\n                playerReduced.lossPercent = lossPercent\n                playerReduced.tiePercent = tiePercent\n                playerReduced.goals = goalsFromArray \n                playerReduced.assists = assistsFromArray\n                if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n\n                transformedArrayForCards.push( playerReduced )\n                }\n                else {\n                    let playerWithoutRecord = {\n                        name: broomballer.name,\n                        gamesPlayed: 0,\n                        goals: \"N/A\",\n                        assists: \"N/A\",\n                        membershipStatus: broomballer.membershipStatus,\n                        winPercent: \"N/A\",\n                        lossPercent: \"N/A\",\n                        tiePercent: \"N/A\",\n                        win: \"N/A\",\n                        loss: \"N/A\",\n                        tie: \"N/A\",\n                        gpg: \"N/A\",\n                        apg: \"N/A\",\n                        _id: broomballer._id\n                    }\n                    transformedArrayForCards.push( playerWithoutRecord )\n                }\n            })\n            // if the type is \"select\", the function will add the players to the existing records for chart (via addBatchChartData)\n            // otherwise, it will remove and replace them via the replace BatchChartData\n            if (type === \"select\") {\n                this.props.updatePlayers(transformedArrayForCards)\n                this.addBatchChartData(transformedArrayForCards)\n                }\n            else if (type === \"unselect\") {\n                this.replaceBatchChartData( transformedArrayForCards )\n            }\n    }\n    // this handles unselecting players depending on the membership type sent\n    batchUnselect(type){\n        this.props.batchUnselect(type);\n        this.props.selectedPlayers.filter(player => player.membershipStatus === type).forEach(broomballer => this.unselectPlayer(broomballer));\n        this.selectAndTransform(this.props.selectedPlayers.filter(player => player.membershipStatus !== type), \"unselect\")\n    }\n    // this is how we initialize what is sent to chartData. The index of the array of objects in the datasets nested object comes from the reducer, and needs to stay consistent across functions (0 = Goals object, 1 = Assist object, etc.)\n    addBatchChartData(arrayOfPlayers) {\n        let labels = []\n        let goalsArray = []\n        let assistsArray = []\n        let gamesPlayedArray = []\n        let winPercentArray = []\n        let lossPercentArray = []\n        let tiePercentArray = []\n        let gpgArray = []\n        let apgArray = []\n        arrayOfPlayers.forEach(e => {\n            labels.push(e.name);\n            goalsArray.push(e.goals);\n            assistsArray.push(e.assists);\n            gamesPlayedArray.push(e.gamesPlayed);\n            winPercentArray.push(e.winPercent);\n            lossPercentArray.push(e.lossPercent);\n            tiePercentArray.push(e.tiePercent);\n            gpgArray.push(e.gpg);\n            apgArray.push(e.apg);\n        })\n\n        let newObject = {\n            labels: labels.concat(this.props.chartData.labels),\n            // For performance reason, it is better to re-initiate the data than to use the ... operator to merge new with existing\n            datasets: [\n                {\n                    label: \"Goals\",\n                    data: goalsArray.concat(this.props.chartData.datasets[0].data),\n                    backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                    hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                },\n                {\n                    label: \"Assists\",\n                    data: assistsArray.concat(this.props.chartData.datasets[1].data),\n                    backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Games\",\n                    data: gamesPlayedArray.concat(this.props.chartData.datasets[2].data),\n                    backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                    hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Wins (%)\",\n                    data: winPercentArray.concat(this.props.chartData.datasets[3].data),\n                    backgroundColor: 'rgba(75,192,192,0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                    hoverBorderColor: 'rgba(75,192,192,0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Losses (%)\",\n                    data: lossPercentArray.concat(this.props.chartData.datasets[4].data),\n                    backgroundColor: '#d3b8ae',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: '#d3b8ae',\n                    hoverBorderColor: '#d3b8ae',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Ties (%)\",\n                    data: tiePercentArray.concat(this.props.chartData.datasets[5].data),\n                    backgroundColor: '#ff8a65',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: '#ff8a65',\n                    hoverBorderColor: '#ff8a65',\n                    barThickness: 15,\n                },\n                {\n                    label: \"GPG\",\n                    data: gpgArray.concat(this.props.chartData.datasets[6].data),\n                    backgroundColor: 'rgba(153,102,255,0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                    hoverBorderColor: 'rgba(153,102,255,0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"APG\",\n                    data: apgArray.concat(this.props.chartData.datasets[7].data),\n                    backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                    hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                    options: {barThickness: 100},\n                },\n                ]\n        }\n        this.props.batchChartUpdate(newObject)\n    }\n\n    replaceBatchChartData(arrayOfPlayers) {\n        let labels = []\n        let goalsArray = []\n        let assistsArray = []\n        let gamesPlayedArray = []\n        let winPercentArray = []\n        let lossPercentArray = []\n        let tiePercentArray = []\n        let gpgArray = []\n        let apgArray = []\n        arrayOfPlayers.forEach(e => {\n            labels.push(e.name);\n            goalsArray.push(e.goals);\n            assistsArray.push(e.assists);\n            gamesPlayedArray.push(e.gamesPlayed);\n            winPercentArray.push(e.winPercent);\n            lossPercentArray.push(e.lossPercent);\n            tiePercentArray.push(e.tiePercent);\n            gpgArray.push(e.gpg);\n            apgArray.push(e.apg);\n        })\n\n        let newObject = {\n            labels: labels,\n            datasets: [\n                {...this.props.chartData.datasets[0], data: goalsArray},\n                {...this.props.chartData.datasets[1], data: assistsArray},\n                {...this.props.chartData.datasets[2], data: gamesPlayedArray},\n                {...this.props.chartData.datasets[3], data: winPercentArray.concat(this.props.chartData.datasets[3].data)},\n                {...this.props.chartData.datasets[4], data: lossPercentArray.concat(this.props.chartData.datasets[4].data)},\n                {...this.props.chartData.datasets[5], data: tiePercentArray.concat(this.props.chartData.datasets[5].data)},\n                {...this.props.chartData.datasets[6], data: gpgArray.concat(this.props.chartData.datasets[6].data)},\n                {...this.props.chartData.datasets[7], data: apgArray.concat(this.props.chartData.datasets[7].data)}\n                ]\n        }\n        this.props.batchChartUpdate(newObject)\n    }\n\n    // Before sending the player to the selectPlayer action that will add it to the selectedPlayers array, we need to make sure the record does not already exist\n    // in that array (we might accidentally send twice via the batch select that consolidates before re-sending to playerRecords array). Otherwise, it creates \n    // problems with duplicate keys in React\n    markAsSelected(player) {\n        let arrayOfIds = this.props.selectedPlayers.map(broomballer => broomballer._id)\n        if ( !arrayOfIds.includes(player._id) ){\n            this.props.selectPlayer(player)\n        }\n    }\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfPlayers)}> {this.props.listOfPlayers === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Players</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className={this.props.listOfPlayers + \" select_all\"}>\n                            <div className=\"button_options_first_set\">\n                                <button className={\"btn record_player_button all_button \" + this.props.memberSelection} onClick={() => this.selectAllPlayers(this.props.memberSelection)}> {this.props.memberSelection === \"unselected_member\" ? \"Select\" : \"Unselect\"} All Members </button>\n                                <button className={\"btn record_player_button all_button \" + this.props.tenBuckerSelection} onClick={() => this.selectAllPlayers(this.props.tenBuckerSelection)}> {this.props.tenBuckerSelection === \"unselected_non_member\" ? \"Select\" : \"Unselect\"} All Ten Buckers </button>\n                            </div>\n                            \n                        </div>\n                        <div className={\"list_of_players \" + this.props.listOfPlayers}>\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus === \"Member\")\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"btn unselected_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"btn selected_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id))\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"btn unselected_non_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"btn selected_non_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    unselectedPlayers: state.stats.unselectedPlayers,\n    memberSelection: state.stats.memberSelection,\n    tenBuckerSelection: state.stats.tenBuckerSelection,\n    allPlayers: state.players.players,\n    arrayOfTenBuckersID: state.stats.arrayOfTenBuckersID,\n    listOfPlayers: state.stats.listOfPlayers,\n    chartData: state.stats.chartData,\n})\n\nexport default connect(mapStateToProps, {   \n        fetchPlayers, \n        selectPlayer, \n        unselectPlayer, \n        toggleViews, \n        addPlayerStatObject, \n        removePlayerStatObject, \n        // sendDataToChart, \n        toggleSelectAll, \n        batchCardUpdate, \n        batchChartUpdate, \n        batchUnselect, \n        updatePlayers \n    }) (PlayerSelector)\n","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nimport { Line } from \"react-chartjs-2\";\n\nimport { connect } from 'react-redux';\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\n\nclass PlayerStatsModal extends Component {\n    \n    render() {\n        return (\n            <div className=\"player_modal\">\n                <Modal isOpen={this.props.playerModal} toggle={this.toggle} centered={true} size={\"lg\"}>\n                    <ModalHeader className=\"modal_header\"> {this.props.playerModalData.name} </ModalHeader>\n                    <ModalBody>\n                        <Line\n                            data={this.props.playerModalData.data}\n                            options={{\n                                    responsive: true,\n                                    maintainAspectRatio: false,\n                                    }}\n                            />\n                    </ModalBody>\n                    <ModalFooter>\n                        <button className=\"contrast_color content_button\" onClick={()=> this.props.togglePlayerModal(false, {name: \"\", data:{}})}> Close </button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    playerModal: state.stats.playerModal,\n    playerModalData: state.stats.playerModalData\n})\n\nexport default connect(mapStateToProps, { togglePlayerModal }) (PlayerStatsModal)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { toggleViews } from \"../../js/actions/statsActions\"\nimport { toggleSortOptions } from \"../../js/actions/statsActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\nimport PlayerStatsModal from \"./PlayerStatsModal\"\n\nimport _ from \"underscore\"\n\n\nclass Showcase extends Component {\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    toggleSort(tab, currentStatus, ascArrow){\n        this.props.toggleSortOptions(tab, currentStatus, ascArrow)\n    }\n    \n    showPlayerStats(playerName, playerID){\n        // we need to filter games that the player has played to show relevant stats\n        // we have sorted the gamesSelected array chronologically for convenience\n        let playerStats = this.props.gamesInChronoOrder.reduce((broomballer, game) => {\n            broomballer.name = playerName\n            broomballer.gamesPlayed = broomballer.gamesPlayed || []\n            broomballer.goals = broomballer.goals || []\n            broomballer.assists = broomballer.assists || []\n            if (game.players.filter(player => player._id === playerID && player.gameInfo.available === true).length !== 0) {\n                broomballer.gamesPlayed.push(game._id)\n                // we filter the array of players with the matching ID (it creates a remapped array of one element if applicable, \n                // gameInfo, therefore the data we want is at index 0 of gameInfo)\n                let gameInfo = game.players.filter(player => player._id === playerID).map(player => player.gameInfo)\n                broomballer.goals.push( gameInfo[0].goals )\n                broomballer.assists.push( gameInfo[0].assists )\n            }            \n            return broomballer\n            }, {});\n        // creating the ChartJS object:    \n        let playerInfo = {\n            name: playerName,\n            data: {\n                labels: playerStats.gamesPlayed,\n                datasets: [\n                    {\n                        label: \"Goals\",\n                        data: playerStats.goals,\n                        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        borderColor: 'rgba(255, 99, 132, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                        lineTension: 0,\n                    },\n                    {\n                        label: \"Assists\",\n                        data: playerStats.assists,\n                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        borderColor: 'rgba(54, 162, 235, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                        lineTension: 0,\n                    }\n                ]\n            }\n        };\n        // sending the data to the modal\n        this.props.togglePlayerModal(true, playerInfo)\n    }\n    \n    render() {\n        return (\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Sorting Options</h3>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    \n                    <div className={\"list_of_options \" + this.props.sortOptionsDisplay}>\n                        \n                            <button className={this.props.sortingOptions.azTab + \" tab_button\"} onClick={()=> this.toggleSort(\"az\", this.props.sortingOptions.azTab, this.props.sortingOptions.alphaAsc)}>A-Z <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.alphaDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.alphaAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gamesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"games\", this.props.sortingOptions.gamesTab, this.props.sortingOptions.gamesAsc)}>Games Played  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gamesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gamesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.winsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"wins\", this.props.sortingOptions.winsTab, this.props.sortingOptions.winsAsc)}>Games Won  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.winsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.winsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.lossesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"losses\", this.props.sortingOptions.lossesTab, this.props.sortingOptions.lossesAsc)}>Games Lost  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.lossesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.lossesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.tiesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"ties\", this.props.sortingOptions.tiesTab, this.props.sortingOptions.tiesAsc)}>Games Tied  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.tiesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.tiesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.goalsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"goals\", this.props.sortingOptions.goalsTab, this.props.sortingOptions.goalsAsc)}>Goals  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.goalsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.goalsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gpgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"gpg\", this.props.sortingOptions.gpgTab, this.props.sortingOptions.gpgAsc)}>GPG  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gpgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gpgAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.assistsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"assists\", this.props.sortingOptions.assistsTab, this.props.sortingOptions.assistsAsc)}>Assists  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.assistsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.assistsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.apgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"apg\", this.props.sortingOptions.apgTab, this.props.sortingOptions.apgAsc)}>APG <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.apgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.apgAsc + \" sorting_arrow\"} /> </span> </button>\n                    \n                    </div>\n                    <div className=\"records \">\n                    {this.props.playerRecords ? this.props.playerRecords.map(object => {\n                        return (\n                            <div key={object._id} className={object.preferredPosition === this.props.positionVisibility ? \"hidden_card wrapping_card_div\" : \"visible wrapping_card_div\" } onClick={()=> this.showPlayerStats(object.name, object._id)}>\n                                <div className={object.membershipStatus === \"Member\" ? \"member_record player_card \" : \"non_member_record player_card\"}>\n                                \n                                    <div className=\"player_name\">{object.name} <span className=\"position_dot\"> <FontAwesomeIcon icon=\"circle\" className={object.preferredPosition} /> </span></div>\n                                    <div className=\"player_data\">\n                                        <p><span className=\"entry\">Games Played:</span> <span className=\"value\">{object.gamesPlayed}</span>/{this.props.selectedGames.length}</p>\n                                        <p><span className=\"entry\">W/L/T:</span> <span className=\"value\">{ object.winPercent !== \"N/A\" ? object.winPercent + \"%\" : object.winPercent } - { object.lossPercent !== \"N/A\" ? object.lossPercent + \"%\" : object.lossPercent } - { object.tiePercent !== \"N/A\" ? object.tiePercent + \"%\" : object.tiePercent } </span> </p>\n                                        <p><span className=\"entry\">Goals:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.goals : \"N/A\"}</span>\n                                        <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.gpg : \"N/A\"}</span></span></p>\n                                        <p><span className=\"entry\">Assists:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.assists : \"N/A\"}</span>\n                                        <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.apg : \"N/A\"}</span></span></p>\n                                    </div>\n                                </div>\n                            </div>\n                            )}\n                            ) : null }\n                    </div>\n                </div>\n                <PlayerStatsModal isOpen={this.props.playerModal} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    gamesInChronoOrder: _.sortBy(state.stats.selectedGames,\"_id\"),\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    playerRecords: state.stats.filteredPlayerRecords,\n    sortingOptions: state.stats.sortingOptions,\n    forwardSelection: state.stats.selectors.forwardSelection,\n    defenseSelection: state.stats.selectors.defenseSelection,\n    goalieSelection: state.stats.selectors.goalieSelection,\n    positionVisibility: state.stats.selectors.positionVisibility,\n    playerModal: state.stats.playerModal,\n})\n\nexport default connect(mapStateToProps, { toggleViews, toggleSortOptions, togglePlayerModal, }) (Showcase)\n\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSquare } from '@fortawesome/free-regular-svg-icons'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByType } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByGames } from '../../js/actions/statsActions'\n\nclass Filters extends Component {\n\n    playerSelection(setting, status){\n        switch (setting) {\n            case \"offense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({offense: \"unselected\", defense: this.props.defense, goalie: this.props.goalie})\n            }\n            else {\n                this.props.filterPlayerRecordsByType({offense: \"selected\", defense: this.props.defense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"defense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({defense: \"unselected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({defense: \"selected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"goalie\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({goalie: \"unselected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({goalie: \"selected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            break;\n\n            default:\n            return;\n        }\n    }\n\n\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    gameSelection(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        switch (name) {\n            case \"operator\":\n            this.props.filterPlayerRecordsByGames({[name]: value, gamePercent: this.props.gamePercent})\n            break;\n            \n            case \"gamePercent\":\n            this.props.filterPlayerRecordsByGames({operator: this.props.operator, [name]: value})\n            break;\n\n            default: \n            return;\n        }\n    }\n    render() {\n        return(\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Filters</h3>\n                    </div>\n                </div>\n            <div className=\"content\">\n                <div className={\"list_of_options \" + this.props.sortOptionsDisplay}>\n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Players</h3>\n                        <ul className=\"check_list\">\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"offense\",  this.props.offense)}>{ this.props.offense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\"/> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\"/>}  Offense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"defense\",  this.props.defense)}>{ this.props.defense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Defense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"goalie\",  this.props.goalie)}>{ this.props.goalie === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Goalies</li>        \n                        </ul> \n                    </div>\n                    \n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Attendance</h3>\n                            <ul className=\"check_list\">\n                                <li className=\"filter_item\">Played \n                                <select className=\"custom-select\" name=\"operator\" onChange={(event) => this.gameSelection(event)} value= {this.props.operator}>\n                                    <option value=\"+\"> more than </option>\n                                    <option value=\"-\"> less than </option>\n                                </select>\n                                <select className=\"custom-select\" name=\"gamePercent\" onChange={(event) => this.gameSelection(event)} value= {this.props.gamePercent}>\n                                    <option value=\"100\"> 100% </option>\n                                    <option value=\"90\"> 90% </option>\n                                    <option value=\"80\"> 80% </option>\n                                    <option value=\"70\"> 70% </option>\n                                    <option value=\"60\"> 60% </option>\n                                    <option value=\"50\"> 50% </option>\n                                    <option value=\"40\"> 40% </option>\n                                    <option value=\"30\"> 30% </option>\n                                    <option value=\"20\"> 20% </option>\n                                    <option value=\"10\"> 10% </option>\n                                    <option value=\"0\"> 0% </option>\n                                </select>\n                                    of the games </li>\n                            </ul> \n                    </div>\n\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    datePickers: state.stats.datePickers,\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    offense: state.stats.playerFilters.offense,\n    defense: state.stats.playerFilters.defense,\n    goalie: state.stats.playerFilters.goalie,\n    operator: state.stats.gameFilters.operator,\n    gamePercent: state.stats.gameFilters.gamePercent,\n})\n\nexport default connect(mapStateToProps, { toggleViews, filterPlayerRecordsByType, filterPlayerRecordsByGames }) (Filters)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {HorizontalBar} from \"react-chartjs-2\";\n// see https://www.npmjs.com/package/react-chartjs-2 for documentation\n\n// defaults.global.barThickness = 20;\nclass DataChart extends Component {\n    \n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"chart\")\n    }\n\n    render(){\n        \n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.chartDisplay)}> {this.props.chartDisplay === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Show Chart</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        \n                        <div className={\"chart \" }>\n                            {this.props.chartData && this.props.chartDisplay !== \"hidden\" ?  \n                            <div className=\"chartAreaWrapper\">\n                                <HorizontalBar\n                                    data={this.props.curatedChartData}\n                                    height= { this.props.chartData.labels.length * 50 }\n                                    className= { this.props.chartDisplay }\n                                    options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false,\n                                            barThickness: 100\n                                            }}\n                                    />\n                            </div> : null }  \n                        </div>\n                    </div>\n                </div>\n                )\n\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    chartData: state.stats.chartData,\n    curatedChartData: state.stats.curatedChartData,\n    chartDisplay: state.stats.chartDisplay,\n    chartingOptions: state.stats.chartingOptions,\n})\n\nexport default connect(mapStateToProps, { toggleViews }) (DataChart)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\n\nimport NavBar from \"../components/NavBar\"\nimport DateSelector from \"../components/RecordsPageComp/DateSelector.js\"\nimport GameSelector from \"../components/RecordsPageComp/GameSelector.js\"\nimport PlayerSelector from \"../components/RecordsPageComp/PlayerSelector.js\"\nimport Showcase from \"../components/RecordsPageComp/Showcase.js\"\nimport Filters from \"../components/RecordsPageComp/Filters.js\"\nimport DataChart from \"../components/RecordsPageComp/DataChart.js\"\n\nimport \"../styles/css/records.css\";\n\nclass Records extends Component { \n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main main_padded\"> \n            <h1 className=\"h1_main\">League Records</h1>\n            \n            <div className= \"row\">\n                < DateSelector />\n            </div>\n            \n            <div className= \"row\">\n                < GameSelector />\n            </div>\n            \n            <div className= \"row\">\n                < PlayerSelector />\n            </div>\n            \n            <div className= \"row\">\n                < DataChart />\n            </div>\n\n            <div className= \"row\">\n                < Showcase />\n            </div>\n\n            <div className= \"row\">\n                < Filters />\n            </div>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    games: state.games.games\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps) (Records)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n\nimport { updateUserForm } from '../js/actions/authenticateActions';\nimport { createNewUser } from '../js/actions/authenticateActions';\nimport { authenticateUser } from '../js/actions/authenticateActions';\n\nclass LoginForm extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n    handleCancel(event) {\n        event.preventDefault()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedUser = {...this.props.user, [name]: value}\n        this.props.updateUserForm(editedUser)\n        // this.setState({...this.state, [name]: value})\n        \n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        /* If a player is a goalie, their level needs to be set as \"Goalie\" */\n        \n        \n        if (this.props.in === \"show\") {\n            console.log(\"Sign-in mode activated\")\n            let user = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                }\n            this.props.authenticateUser(\"local\", user)\n            }\n        else {\n            let newUser = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                email: this.props.user.email,\n                privilege: \"user\"\n                }\n            // let id = this.props.player._id\n            this.props.createNewUser(newUser)\n        }\n\n        // go back to tab#1\n        // this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Username: </label>\n                            <input \n                                type=\"text\" \n                                name=\"username\"\n                                value= {this.props.user.username}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Password: </label>\n                            <input \n                                type=\"text\" \n                                name=\"password\"\n                                value= {this.props.user.password}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        {this.props.up === \"show\" ? (\n                            <div className=\"field\">\n                                <label>Email: </label>\n                                <input \n                                    type=\"text\" \n                                    name=\"email\"\n                                    value= {this.props.user.email}\n                                    onChange={(event) => this.handleChange(event)}\n                                    />\n                            </div>\n                        ) : null}\n                        \n                        {this.props.in === \"show\" ? \n                            <button type=\"submit\" value=\"Log In\" className=\"contrast_color\"> Sign in </button> \n                            :\n                            <button type=\"submit\" value=\"submit\" className=\"contrast_color\"> Sign up </button>\n                        } \n                        <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    user: state.authenticate.user,\n    in: state.authenticate.tabs[0],\n    up: state.authenticate.tabs[1]\n})\n\nexport default connect(mapStateToProps, { updateUserForm, createNewUser, authenticateUser }) (LoginForm)","import {\n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE\n} from \"./types\"\n\nimport { saveState } from \"../../components/sessionStorage\"\n\nimport API from \"../../utils/API\"\n\nexport const updateUserForm = (data) => dispatch => {\n    dispatch({\n        type: UPDATE_USER_FORM,\n        payload: data\n    })\n}\n\nexport const createNewUser = ( newUser ) => dispatch => {\n    API.addNewUser( newUser).then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NEW_USER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n    dispatch({\n        type: SIGN_MODE,\n        payload: id\n    })\n}\n\nexport const authenticateUser = (method, user) => dispatch => {\n    console.log(\"data in authenticateUser authenticateActions.js: \", user)\n    if (method === \"local\") {\n        API.authenticateUser(\"local\", user).then(res => {\n            if (!res.data.errmsg) {\n                console.log(\"Response from authentication API: \", res.data)\n                // dispatch({\n                //     type: SETTING_USER_PRIVILEGES,\n                //     payload: res.data\n                // })\n                switch (res.data.privilege) {\n                    case \"SuperAdmin\":\n                    saveState({\n                        SuperAdmin: true,\n                        draftTeams: true,\n                        changeAvailability: true,\n                        createGame: true,\n                        deleteGame: true,\n                        editScore: true,\n                        changeLock: true,\n                        createPlayer: true,\n                        editMember: true,\n                        deleteMember: true,\n                        editTenBucker: true,\n                        deleteTenBucker: true\n                    })\n\n                    break;\n\n                    default:\n                    return;\n                }\n            }\n        })\n    }\n}\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from \"../js/actions/authenticateActions\"\n\nimport NavBar from \"../components/NavBar\";\nimport LoginForm from \"../components/LoginForm.js\";\n\n// import \"../styles/css/login.css\";\n\nclass Login extends Component { \n\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_alternate\">\n            <h1 className=\"h1_alternate\">Login</h1>\n            <div className=\"row tab_centering\">\n                <span id=\"1\" className={\"auth_tab \" + this.props.tab1 } onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Sign-in </span>\n                <span id=\"2\" className={\"auth_tab \" + this.props.tab2 } onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Sign-up </span>\n            </div>\n            <div className= \"row main_for_tab\">\n                <LoginForm />\n            </div>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    tab1: state.authenticate.tabs[0],\n    tab2: state.authenticate.tabs[1],\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleTabStatus } ) (Login)\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    DELETE_GAME, \n    GET_GAME, \n    EDIT_GAME_INFO, \n    RESET,\n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE,\n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS,\n    HIDE_NON_MEMBERS, \n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO,\n    UNLOCK_GAME_INFO,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n} from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    games: [],\n    upcomingGames: [],\n    pastGames: [], // games showing in the \"Past Games\" list of Draft.js. Sorted from recent to old\n    gameInfo: {\n        goals: 0,\n        assists: 0,\n        darkPickNum: 0,\n        whitePickNum: 0,\n        available: true,\n        team: \"N/A\"\n    },\n    visibility: {\n        top: \"hidden\",\n        main: \"hidden\",\n        bottom: \"hidden\",\n        gameStats: \"hidden\",\n        noStatsMessage: \"hidden\",\n    },\n    gameDate: \"\",\n    draft: {},\n    unavailableMembers: [],\n    allTenBuckers: [],\n    notPlayingNonMembers: [],\n    playingNonMembers: [],\n    lockStatus: \"visible\", // this hides the arrows + delete icons if the game is locked\n    showingNonPlayingTenBuckers: \"Show\",    // which means this section is hidden\n    showingUnavailableMembers: \"Show\",      // which means this section is hidden\n    draftMode: \"Draft\",\n    pickButtons: {\n        left: \"Set Dark Picks\",\n        right: \"Set White Picks\"\n    },\n    picked: [],\n    unpicked: [],\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_GAMES:\n        return {\n            ...state,\n            games: action.payload,\n            upcomingGames: action.payload.filter(game => game._id >= moment().format(\"YYYY-MM-DD\")),\n            pastGames: _.sortBy(action.payload.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n        }\n        \n        case DELETE_GAME:\n        return {\n            ...state,\n            visibility: initialState.visibility,\n            games: state.games.filter(game => game._id !== action.payload._id),\n            upcomingGames: state.upcomingGames.filter(game => game._id !== action.payload._id),\n            pastGames: _.sortBy(state.pastGames.filter(game => game._id !== action.payload._id),\"_id\").reverse(),\n            lockStatus: \"hidden\",\n            draftMode: initialState.draftMode,\n            pickButtons: initialState.pickButtons,\n            }\n\n\n        case NEW_GAME:\n        return {\n            ...state,\n            games: _.sortBy([...state.games, action.payload], \"game_date\"),\n            upcomingGames: action.payload._id >= moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.upcomingGames], \"game_date\") : state.upcomingGames,\n            pastGames: action.payload._id < moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.pastGames], \"game_date\").reverse() : state.pastGames \n        }\n\n        case GET_GAME:\n        return {\n            ...state,\n            draftMode: initialState.draftMode,\n            gameDate: action.payload.game._id,\n            draft: action.payload.game,\n            // This hides the locker if \n            lockStatus: action.payload.game.lock_status === true ? \"hidden\" : \"visible\",\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.game.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            // We initiate the array of playing ten-buckers here (for them to not get added twice, this array will be check against when clicking on add non-member)\n            playingNonMembers: action.payload.game.players.filter(player => player.membershipStatus !== \"Member\"),\n            visibility: {\n                top: \"visible\", \n                main: \"visible\", \n                bottom: \"visible\",\n                gameStats: action.payload.gameStats,\n                noStatsMessage: action.payload.noStatsMessage\n            }\n        }\n\n        case EDIT_GAME_INFO:\n        return {\n            ...state,\n            draft: action.payload.game,\n        }\n        \n        case RESET:\n        return {\n            ...state,\n            draft: action.payload,\n            unavailableMembers: initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            playingNonMembers: initialState.playingNonMembers,\n            picked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case MAKE_MEMBER_UNAVAILABLE:\n        return {\n            ...state,\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            draft: action.payload\n        }\n\n        case MAKE_TEN_BUCKER_UNAVAILABLE:\n        return {\n            /* The Ten Buckers are managed outside of the \"game\" object. If they would just be set as \"Unavailable\" like Members, duplicates may be created.\n            They need to be removed from the game object altogether. Therefore, their status is handled in the reducer once sent to the state.\n            The allTenBuckers array that populates after a click is making this easier: when a Ten Bucker is set as unavailable, it is filtered \n            out of the array of playingNonMembers. It is also added to the array of notPlayingNonMembers: their data is checked agains the array of allTenBuckers\n            via a filter. It creates an array of 1 element, that we add to the notPlayingNonMembers array by extracting its index 0 */\n            ...state,\n            draft: action.payload.gameData,\n            notPlayingNonMembers: state.showingNonPlayingTenBuckers === \"Hide\" ? _.sortBy([...state.notPlayingNonMembers, state.allTenBuckers.filter(player => player._id === action.payload.player)[0]],\"name\") : initialState.notPlayingNonMembers,\n            playingNonMembers: state.playingNonMembers.filter(player => player._id !== action.payload.player),\n        }\n        // this case only deals with Members as Ten Buckers are handled separately through ADD_NON_MEMBER\n        case MAKE_MEMBER_AVAILABLE:\n        return {\n            ...state,\n            // removing properly from the array of unavailable players\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? (state.draft.players.filter(player => player.gameInfo.available === false && player.membershipStatus === \"Member\" && player._id !== action.payload.player)) : initialState.unavailableMembers,\n            draft: action.payload.game,\n        }\n\n        case SHOW_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: state.draft.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false),\n            showingUnavailableMembers: \"Hide\"\n        }\n        \n        case HIDE_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: initialState.unavailableMembers,\n            showingUnavailableMembers: \"Show\"\n        }\n\n        case SHOW_NON_MEMBERS:\n        return {\n            ...state,\n            allTenBuckers: action.payload.all,\n            notPlayingNonMembers: action.payload.new,\n            showingNonPlayingTenBuckers: \"Hide\"\n        }\n\n        case HIDE_NON_MEMBERS:\n        return {\n            ...state,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            showingNonPlayingTenBuckers: \"Show\"\n        }\n        \n        case ADD_NON_MEMBER:\n        return {\n            ...state,\n            draft: action.payload.players,\n            notPlayingNonMembers: state.notPlayingNonMembers.filter(player => player._id !== action.payload.player._id),\n            playingNonMembers: [action.payload.player, ...state.playingNonMembers]\n        }\n\n        case LOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n        \n        case UNLOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n\n        case TRIGGER_PICK_MODE:\n        return {\n            ...state,\n            draftMode: action.payload.team,\n            pickButtons: action.payload.buttons,\n            visibility: {top: \"hidden\", main: \"visible\", bottom: \"visible\"},\n            // as opposed to the \"SET_PICK\" case, the filtering needs to happen in the reducer, as it is based on data already stored in the state (not coming from API)\n            picked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case TRIGGER_DRAFT_MODE:\n        return {\n            ...state,\n            draftMode: \"Draft\",\n            visibility: {top: \"visible\", main: \"visible\", bottom: \"visible\"},\n            pickButtons: initialState.pickButtons\n        }\n\n        case SET_PICK:\n        return {\n            ...state,\n            draft: action.payload.game,\n            picked: action.payload.picked,\n            unpicked: action.payload.unpicked\n            \n        }\n\n        default: \n        return state;\n    }\n}","import { SHOW_FUTURE, SHOW_PAST } from '../actions/types';\nconst moment = require(\"moment\");\n\nconst initialState = {\n    showing: \"future\",\n    upcoming_visibility: \"visible\",\n    past_visibility: \"hidden\",\n    dateHeader: \"Upcoming\",\n    buttonMsg: \"Past\",\n    today: moment().format(\"YYYY-MM-DD\")    \n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_FUTURE:\n        return {\n            ...state,\n            upcoming_visibility: \"visible\",\n            past_visibility: \"hidden\",\n            dateHeader: \"Upcoming\",\n            buttonMsg: \"Past\",\n            showing: \"future\",\n        }\n        \n        case SHOW_PAST:\n        return {\n            ...state,\n            upcoming_visibility: \"hidden\",\n            past_visibility: \"visible\",\n            dateHeader: \"Past\",\n            buttonMsg: \"Upcoming\",\n            showing: \"past\"\n        }\n        \n        default:\n        return state;\n    }\n}","import { FETCH_PLAYERS, EDIT_PLAYER, ADD_PLAYER, DELETE_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from '../actions/types';\nimport _ from \"underscore\"\n\nconst initialState = {\n    players: [],\n    player: {\n        name: \"\",\n        fullName: \"\",\n        preferredPosition: \"Forward\",\n        membershipStatus: \"Member\",\n        email: \"\",\n        playerLevel: \"A+\"\n        },\n\n    tabs: [\"show\",\"hide\",\"hide\"],\n    panels: [\"visible\", \"hidden\", \"hidden\"],\n    \n    formMode: \"Add\"\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_PLAYERS:\n        return {\n            ...state,\n            players: action.payload\n        }\n\n        case ADD_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([...state.players, action.payload], \"name\")\n        }\n\n        case DELETE_PLAYER:\n        return {\n            ...state,\n            deletedPlayer: action.payload,\n            players: state.players.filter(player => player._id !== action.payload._id)\n        }\n        \n        case EDIT_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([action.payload, ...state.players.filter(player => player._id !== action.payload._id)], \"name\")\n        }\n        \n        case SHOW_TAB:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide\"} else {return tab = \"show\"}}),\n            panels: state.panels.map((panel, index) => {if(index !== action.payload) {return panel = \"hidden\"} else {return panel = \"visible\"}})\n        }\n\n        case RESET_TABS:\n        return {\n            ...state,\n            player: initialState.player,\n            formMode: \"Add\",\n            tabs: initialState.tabs,\n            panels: initialState.panels,\n        }\n\n        case EDIT_FORM:\n        return {\n            ...state,\n            formMode: \"Edit\",\n            tabs: [\"hide\",\"hide\",\"show\"],\n            panels: [\"hidden\", \"hidden\", \"visible\"],\n            player: action.payload\n        }\n\n        case UPDATE_FIELD:\n        return {\n            ...state,\n            player: action.payload\n        }        \n\n        default: \n        return state;\n    }\n}","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES,\n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES\n    } from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    visibility: \"hidden\",\n    message: \"Teams have not been drafted for this team yet. Please come back later!\",\n    gamesForRecords: [],\n    pastGamesFromAPI: [],\n    reducedGames: [],\n    gameVisibility: [],\n    selectedGames: [],\n    unselectedGames: [],\n    selectedPlayers: [],\n    unselectedPlayers: [],\n    datePickers: \"visible\",\n    listOfGames: \"hidden\",\n    listOfPlayers: \"hidden\", \n    sortOptionsDisplay: \"hidden\",\n    chartDisplay: \"hidden\",\n    playerRecords: [],\n    arrayOfTenBuckersID: [],\n    sortingOptions:\n        {\n            alphaDesc: \"active\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"selected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\",\n        },\n    chartingOptions: {\n        gamesTab: \"selected_chart_games\",\n        winsTab: \"selected_chart_wins\",\n        goalsTab: \"selected_chart_goals\",\n        gpgTab: \"selected_chart_gpg\",\n        assistsTab: \"selected_chart_assists\",\n        apgTab: \"selected_chart_apg\",\n        },\n    chartData: {\n        labels: [],\n        datasets: [\n            {\n                label: \"Goals\",\n                data: [],\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: \"Assists\",\n                data: [],\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Games\",\n                data: [],\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Wins (%)\",\n                data: [],\n                backgroundColor: 'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                hoverBorderColor: 'rgba(75,192,192,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Losses (%)\",\n                data: [],\n                backgroundColor: '#d3b8ae',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#d3b8ae',\n                hoverBorderColor: '#d3b8ae',\n                barThickness: 15,\n            },\n            {\n                label: \"Ties (%)\",\n                data: [],\n                backgroundColor: '#ff8a65',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#ff8a65',\n                hoverBorderColor: '#ff8a65',\n                barThickness: 15,\n            },\n            {\n                label: \"GPG\",\n                data: [],\n                backgroundColor: 'rgba(153,102,255,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                hoverBorderColor: 'rgba(153,102,255,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"APG\",\n                data: [],\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                options: {barThickness: 100},\n            },\n        ]\n    },\n    memberSelection: \"unselected_member\",\n    tenBuckerSelection: \"unselected_non_member\",\n    selectors: {\n        forwardSelection: \"unselected_forward\",\n        goalieSelection: \"unselected_goalie\",\n        defenseSelection: \"unselected_defense\",\n        positionVisibility: \"all\"\n        },\n    playerModal: false,\n    playerModalData: {},\n    allGamesSelection: \"unselected_game\",\n    playerFilters: {\n            offense: \"selected\",\n            defense: \"selected\",\n            goalie: \"selected\"\n    },\n    gameFilters: {\n            operator: \"+\",\n            gamePercent: \"0\",\n    },\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_GAMES_TO_STATS:\n        return {\n            ...state,\n            visibility: \"visible\",\n        }\n            \n        case GET_GAMES_AND_TRANSFORM:\n        return {\n            ...state,\n            reducedGames: action.payload.game,\n            gameVisibility: action.payload.visibility,\n        }\n\n        case GET_GAMES_IN_TIMESPAN:\n        return {\n            ...state,\n            pastGamesFromAPI: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            gamesForRecords: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            arrayOfTenBuckersID: action.payload.allTenBuckers,\n        }\n\n        case SET_YEARS_VISIBILITIES:\n        return {\n            ...state, \n            gameVisibility: action.payload\n        }\n\n        case ADD_GAME_TO_SELECTED:\n        return {\n            ...state,\n            selectedGames: [...state.selectedGames, action.payload],\n            unselectedGames: state.unselectedGames.filter(game => game._id !== action.payload._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.playerFilters\n        }\n\n        case REMOVE_GAME_FROM_SELECTED:\n        return {\n            ...state,\n            selectedGames: state.selectedGames.filter(game => game._id !== action.payload._id),\n            unselectedGames: [...state.unselectedGames, action.payload],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case ADD_PLAYER_TO_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: [...state.selectedPlayers, action.payload.selected],\n            unselectedPlayers: state.unselectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case REMOVE_PLAYER_FROM_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: state.selectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            unselectedPlayers: [...state.unselectedPlayers, action.payload.selected],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters\n        }\n        \n        case TOGGLE_RECORDS_VIEWS:\n        return {\n            ...state,\n            datePickers: action.payload.dates,\n            listOfGames: action.payload.games,\n            listOfPlayers: action.payload.players, \n            sortOptionsDisplay: action.payload.sort,\n            chartDisplay: action.payload.chart\n        }\n\n        case ADD_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\"),\n            filteredPlayerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\")\n        }\n\n        case REMOVE_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\"),\n            filteredPlayerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\")\n        }\n\n        case REPLACE_PLAYERS_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(action.payload, \"name\"),\n            filteredPlayerRecords: _.sortBy(action.payload, \"name\"),\n        }\n\n        case SORT_AZ_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\").reverse()\n        }\n\n        case SORT_AZ_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\"),\n        }\n\n        case SORT_GAMES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\")\n        }\n\n        case SORT_GAMES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\").reverse()\n        }\n\n        case SORT_WINS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\")\n        }\n\n        case SORT_WINS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\").reverse(),\n        }\n\n        case SORT_LOSSES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\")\n        }\n\n        case SORT_LOSSES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\").reverse(),\n        }\n\n        case SORT_TIES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\")\n        }\n\n        case SORT_TIES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\").reverse(),\n        }\n\n        case SORT_GOALS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\"),\n        }\n        \n        case SORT_GOALS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\").reverse(),\n        }\n        \n        case SORT_ASSISTS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\"),\n        }\n        \n        case SORT_ASSISTS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\").reverse(),\n        }\n\n\n        case SORT_GPG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\")\n        }\n\n        case SORT_GPG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\").reverse(),\n        }\n\n        case SORT_APG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\"),\n        }\n\n        case SORT_APG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\").reverse(),\n        }\n\n        case SET_DATE_RANGE:\n        return {\n            ...state,\n            dateRange: action.payload,\n            gamesForRecords: state.pastGamesFromAPI.filter(game => game._id >= action.payload.from && game._id <= action.payload.to)\n        }\n        \n        case TOGGLE_SELECT_ALL:\n        return {\n            ...state,\n            memberSelection: action.payload.player === \"member\" ? action.payload.memberSelection : state.memberSelection,\n            tenBuckerSelection: action.payload.player !== \"member\" ? action.payload.tenBuckerSelection : state.tenBuckerSelection,\n        }\n        \n        case BATCH_CARD_UPDATE:\n        return {\n            ...state,\n            // playerRecords: _.sortBy(action.payload.concat(state.playerRecords), \"name\"),\n            playerRecords: action.payload.concat(state.playerRecords.filter(player => player._id !== action.payload._id))\n        }\n\n        case BATCH_CHART_UPDATE:\n        return {\n            ...state,\n            chartData: action.payload,\n            curatedChartData: action.payload,\n        }\n\n        case BATCH_UNSELECT:\n        return {\n            ...state,\n            playerRecords: _.sortBy(state.playerRecords.filter(player => player.membershipStatus !== action.payload), \"name\")\n        }\n\n        case TOGGLE_PLAYER_MODAL:\n        return {\n            ...state, \n            playerModal: action.payload.status,\n            playerModalData: action.payload.data\n        }\n        case BATCH_GAMES:\n        return {\n            ...state, \n            allGamesSelection: action.payload === \"unselected_game\" ? \"selected_game\" : \"unselected_game\"\n        }\n\n        case UNSELECT_ALL_GAMES:\n        return {\n            ...state, \n            selectedGames: initialState.selectedGames,\n            unselectedGames: state.pastGamesFromAPI,\n            allGamesSelection: \"unselected_game\"\n        }\n        // Currently, the gameFilters and playerFilters cannot operate simultaneously. Therefore, playing with one should reset the other (to avoid confusion) \n        case FILTER_PLAYER_RECORDS_BY_TYPE:\n        return {\n            ...state,\n            gameFilters: initialState.gameFilters,\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: action.payload.playerFilters,\n            // \"only\", means that the players have to match a certain condition (hence: \"===\"), \"but\", means that matching players should be filtered out (\"!==\")\n            filteredPlayerRecords: action.payload.operator === \"only\" ? _.sortBy(state.playerRecords.filter(player => player.preferredPosition === action.payload.playerType),\"name\") : _.sortBy(state.playerRecords.filter(player => player.preferredPosition !== action.payload.playerType),\"name\") \n        }\n\n        case FILTER_PLAYER_RECORDS_BY_GAMES:\n        return {\n            ...state,\n            playerFilters: initialState.playerFilters,\n            sortingOptions: initialState.sortingOptions,\n            gameFilters: action.payload,\n            filteredPlayerRecords: action.payload.operator === \"-\" ? _.sortBy(state.playerRecords.filter(player => player.gamesPlayed < state.selectedGames.length * action.payload.gamePercent / 100), \"name\") : _.sortBy(state.playerRecords.filter(player => player.gamesPlayed > state.selectedGames.length * action.payload.gamePercent / 100), \"name\")\n        }\n\n        default:\n        return state;\n    }\n}","import { \n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE,\n} from \"../actions/types\"\n\nconst initialState = {\n    user: \n        {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n        },\n    tabs: [\"show\",\"hide\"], // this is used in the sign-in/sign-up user form\n    // superAdminPrivileges: false,\n    // adminPrivileges: false,\n    // draftPrivileges: false,\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_USER_FORM:\n        return {\n            ...state,\n            user: action.payload,\n        }\n\n        case ADD_NEW_USER:\n        return {\n            ...state,\n            user: initialState.user\n        }\n\n        case SIGN_MODE:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide\"} else {return tab = \"show\"}})\n        }\n        \n        default: \n        return state;\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./gameReducer\"\nimport displayReducer from \"./displayReducer\"\nimport playerReducer from \"./playerReducer\"\nimport statsReducer from \"./statsReducer\"\nimport authenticateReducer from \"./authenticateReducer\"\n\nexport default combineReducers({\n    games: gameReducer,\n    display: displayReducer,\n    players: playerReducer,\n    stats: statsReducer,\n    authenticate: authenticateReducer,\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {}\nconst middleware = [thunk]\n\n// createStore is the function for creating the Redux store.\n\n// since it crashes on Safari, and Chrome in incognito mode, we only install Redux DevTools on Chrome in Dev Mode\nif (window.navigator.userAgent.includes('Chrome') && window.location.origin === \"http://localhost:3000/\") {\n    var store = createStore(\n        rootReducer, \n        initialState, \n        compose(\n            applyMiddleware(...middleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n            )\n        );\n} else {\n    store = createStore(\n        rootReducer, \n        initialState,\n        compose(\n            applyMiddleware(...middleware)\n            )\n        )\n}\n\n\nexport default store;","\nimport React from 'react';\n// React router\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// const Home = React.lazy(() => import(\"./pages/Home\"));\nimport Home from \"./pages/HomePage.js\";\nimport Draft from \"./pages/DraftPage.js\";\nimport Player from \"./pages/PlayerPage.js\";\nimport Stats from \"./pages/StatsPage.js\";\nimport Records from \"./pages/RecordsPage.js\";\nimport Login from \"./pages/LoginPage.js\";\nimport './styles/css/App.css';\n\n// Redux \nimport { Provider } from 'react-redux'\nimport store from \"./js/store\"\n// Font-Awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { \n  faChevronUp, \n  faChevronDown, \n  faMinusCircle, \n  faTimesCircle, \n  faArrowCircleLeft, \n  faAngleRight, \n  faPlusCircle, \n  faTimes, \n  faPlus, \n  faCaretDown, \n  faCaretRight, \n  faLongArrowAltUp, \n  faLongArrowAltDown, \n  faCircle,\n  faLock,\n  faUnlockAlt,\n  // faSquare,\n  faCheckSquare\n  } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faChevronUp, faChevronDown, faMinusCircle, faTimesCircle, faArrowAltCircleRight, faArrowCircleLeft, faAngleRight, faPlusCircle, faMinusCircle, faTimes, faPlus, faCaretDown, faCaretRight, faLongArrowAltUp, faLongArrowAltDown, faCircle, faLock, faUnlockAlt, /* faSquare,*/ faCheckSquare)\n// const Records = React.lazy(() => import('./pages/Records'));\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={Home} />\n          <Route path=\"/Draft\" component={Draft} />\n          <Route path=\"/Player\" component={Player} />\n          <Route path=\"/Stats\" component={Stats} />\n          <Route path=\"/Records\" component={Records} />\n          {/* <Route path=\"/Records\" render={() => (<Suspense fallback={<div>Loading...</div>}> <Records /></Suspense>)}/> */}\n          <Route path=\"/Login\" component={Login} />\n          <Route path=\"/*\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>\n\n);\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/logo_sm.afca9f0c.jpeg\";"],"sourceRoot":""}