{"version":3,"sources":["components/NavBar/NavBar.js","pages/HomePage.js","utils/API.js","js/actions/gameActions.js","js/actions/types.js","components/sessionStorage.js","components/DraftPageComp/GameList.js","js/actions/playerActions.js","components/DraftPageComp/Calendar.js","components/DraftPageComp/Drafter.js","components/DraftPageComp/SmallScreenDrafter.js","components/DraftPageComp/Picker.js","components/DraftPageComp/GameOptionsBottom.js","components/DraftPageComp/GameOptionsTop.js","components/Locker.js","pages/DraftPage.js","js/actions/displayActions.js","components/PlayerPageComp/Form.js","components/PlayerPageComp/MemberList.js","components/PlayerPageComp/TenBuckerList.js","pages/PlayerPage.js","js/actions/statsActions.js","components/StatsPageComp/PastGamesList.js","components/StatsPageComp/ScoreBoard.js","components/StatsPageComp/NoStatsBoard.js","pages/StatsPage.js","components/RecordsPageComp/DateRange.js","components/RecordsPageComp/DateSelector.js","components/RecordsPageComp/GameSelector.js","components/RecordsPageComp/PlayerSelector.js","components/RecordsPageComp/PlayerStatsModal.js","components/RecordsPageComp/Showcase.js","components/RecordsPageComp/Filters.js","components/RecordsPageComp/DataChart.js","pages/RecordsPage.js","components/LoginForm.js","js/actions/authenticateActions.js","pages/LoginPage.js","js/reducers/gameReducer.js","js/reducers/displayReducer.js","js/reducers/playerReducer.js","js/reducers/statsReducer.js","js/reducers/authenticateReducer.js","js/reducers/index.js","js/store/index.js","App.js","registerServiceWorker.js","index.js","components/images/logo_sm.jpeg"],"names":["NavBar","react_default","a","createElement","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src","SmallLogo","alt","Component","Home","components_NavBar_NavBar","currentURL","window","location","origin","API","url","axios","get","date","players","post","game_date","delete","gameId","data","put","player","userData","mode","getGame","game","dispatch","then","res","status","Error","statusText","gameStats","noStatsMessage","darkPlayers","filter","gameInfo","team","whitePlayers","length","payload","editGameInfo","setMemberUnavailable","setTenBuckerUnavailable","gameData","playerID","setAvailable","addNonMember","newPlayer","existingPlayers","newRoster","_","sortBy","Object","toConsumableArray","concat","setPick","available","picked","darkPickNum","obj","unpicked","whitePickNum","loadState","serializedState","sessionStorage","getItem","JSON","parse","err","GameList","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getGameInfo","deleteGameFunc","deleteGame","state","fetchGames","privileges","console","log","setState","_this2","dateHeader","upcomingGames","map","key","_id","onClick","index_es","icon","pastGames","connect","games","display","today","buttonMsg","upcoming_visibility","past_visibility","lockStatus","fetchPlayers","deletePlayer","editForm","moment","require","Calendar","createGame","handleChange","bind","assertThisInitialized","handleSubmit","apply","dateSelected","event","preventDefault","membersWithGameInfo","membershipStatus","member","name","playerLevel","preferredPosition","dateOfGame","format","addGame","onSubmit","react_datepicker_es","placeholderText","selected","onChange","value","members","Drafter","draftTeams","changeAvailability","playerStatus","draft","objectSpread","tenBuckerToAdd","setUnavailable","faArrowAltCircleRight","assignTeam","gameDate","unavailableMembers","makeAvailable","notPlayingNonMembers","addTenBuckerToDraft","size","draftMode","SmallScreenDrafter","indexOfPlayerToRemove","indexOf","splice","unavailable","forEach","index","indexOfPlayerToEdit","addPick","removePick","rankOneUp","rankOneDown","GameOptionsBottom","randomize","inputArray","outputArray","randomPlayer","Math","floor","random","push","filterTeams","arrayOfPlayerObjects","rosterTeam1","e","rosterTeam2","testPick","inputObject","rankedPlayers","picks","nameOfTeam","serpentineDraft","num","darkPicks","whitePicks","num1","num2","modulo","completeRounds","i","unavailablePlayers","allPlayers","alternateDraft","resetPlayers","reset","mixedRosters","output","reduce","levels","numOutput","keys","playersArray","entries","arrayOfUnavailablePlayers","currentMode","triggerDraftMode","triggerPickMode","visibility","bottom","toggleMode","pickButtons","left","resetTeams","right","top","autodraft","buttons","GameOptionsTop","action","showUnavailable","hideUnavailable","tenBuckers","arrayOfIds","playingNonMembers","newTenBuckers","showNonMembers","hideNonMembers","showingUnavailableMembers","showingNonPlayingTenBuckers","gameParticipants","allTenBuckers","notPlayingTenBuckers","all","new","Locker","lockGameInfo","unlockGameInfo","unlockGame","lockGame","lock_status","screenSize","innerWidth","Draft","changeLock","currentlyShowing","toggleGames","DraftPageComp_Calendar","DraftPageComp_GameList","toggleGamesFunc","showing","DraftPageComp_GameOptionsTop","main","DraftPageComp_Drafter","DraftPageComp_SmallScreenDrafter","Picker","DraftPageComp_GameOptionsBottom","components_Locker","currentState","Form","createPlayer","handleCancel","resetTabs","target","editedPlayer","defineProperty","updateField","assignedLevel","fullName","email","formMode","addPlayer","editPlayer","defaultValue","tab1","tab2","panel1","panel2","errors","message","MemberList","editMember","deleteMember","sendPlayerToEditForm","TenBuckerList","editTenBucker","deleteTenBucker","Player","currentStatus","tabIndex","parseInt","toggleTabStatus","toggleStatus","tab3","PlayerPageComp_MemberList","PlayerPageComp_TenBuckerList","panel3","PlayerPageComp_Form","tabs","panels","getGamesForRecords","arrayOfTenBuckerIDs","array","toggleViews","element","dates","sort","chart","batchChartUpdate","newData","updatePlayers","togglePlayerModal","newStatus","PastGameList","getGamesAndTransform","visibleBefore","gameVisibility","slice","visibleAfter","newArray","setVisibility","object","values","_this3","_ref","_ref2","slicedToArray","renderGames","_this4","reverse","year","toggleVisibility","renderMonth","renderYear","reducedGames","stats","monthify","string","yearString","substring","monthString","difYears","arrayOfObjects","remapped","difMonths","beautifyGames","years","ScoreBoard","editScore","currentValue","goalUpdate","scoreUpdate","goals_dark","goals_white","win","playerUpdate","goals","assistUpdate","assists","logStat","NoStatsBoard","Stats","PastGamesList","StatsPageComp_NoStatsBoard","StatsPageComp_ScoreBoard","DateRange","handleChangeStart","handleChangeEnd","startDate","endDate","selectDateRange","datePickers","selectsStart","isClearable","selectsEnd","start","end","from","to","DateSelector","RecordsPageComp_DateRange","allGames","gamesForRecords","GameSelector","unselectGame","playersForRecords","selectedPlayers","broomballer","gamesPlayed","selectedGames","match","playerReduced","wins","losses","ties","gamePlayedFromArray","winsFromArray","lossesFromArray","tiesFromArray","winPercent","lossPercent","tiePercent","goalsFromArray","b","assistsFromArray","gpg","parseFloat","apg","Number","isInteger","toFixed","playerWithoutRecord","loss","tie","arrayOfGames","markAsSelected","transformedArrayForCards","replaceBatchChartData","arrayOfPlayers","labels","goalsArray","assistsArray","gamesPlayedArray","winPercentArray","lossPercentArray","tiePercentArray","gpgArray","apgArray","newObject","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barThickness","options","selectAllGames","gameSelection","unselectAllGames","gamesSelected","includes","selectGame","unselectedGames","gamesUnselected","listOfGames","allGamesSelection","chartData","PlayerSelector","unselectPlayer","removePlayerStatObject","indexOfRemovedPlayer","newLabels","newGoals","newAssists","newGames","newWins","newLosses","newTies","newGpg","newApg","arrayOfplayer","addPlayerStatObject","addBatchChartData","toggleSelectAll","allMembersAndSelectedTenBuckers","selectAndTransform","batchUnselect","allTenBuckersAndSelectedMembers","arrayOfTenBuckersID","selectPlayer","listOfPlayers","memberSelection","selectAllPlayers","tenBuckerSelection","unselectedPlayers","update","batchCardUpdate","PlayerStatsModal","reactstrap_es","isOpen","playerModal","toggle","centered","playerModalData","react_chartjs_2_es","responsive","maintainAspectRatio","Showcase","tab","ascArrow","toggleSortOptions","playerName","playerStats","gamesInChronoOrder","playerInfo","fill","lineTension","sortOptionsDisplay","sortingOptions","azTab","toggleSort","alphaAsc","alphaDesc","gamesTab","gamesAsc","gamesDesc","winsTab","winsAsc","winsDesc","lossesTab","lossesAsc","lossesDesc","tiesTab","tiesAsc","tiesDesc","goalsTab","goalsAsc","goalsDesc","gpgTab","gpgAsc","gpgDesc","assistsTab","assistsAsc","assistsDesc","apgTab","apgAsc","apgDesc","playerRecords","positionVisibility","showPlayerStats","RecordsPageComp_PlayerStatsModal","filteredPlayerRecords","forwardSelection","selectors","defenseSelection","goalieSelection","Filters","setting","filterPlayerRecordsByType","offense","defense","goalie","_this$props$filterPla","filterPlayerRecordsByGames","gamePercent","operator","playerSelection","faSquare","playerFilters","gameFilters","playerType","DataChart","chartDisplay","curatedChartData","height","chartingOptions","Records","RecordsPageComp_DateSelector","RecordsPageComp_GameSelector","RecordsPageComp_PlayerSelector","RecordsPageComp_DataChart","RecordsPageComp_Showcase","RecordsPageComp_Filters","LoginForm","editedUser","user","updateUserForm","in","username","password","authenticateUser","newUser","privilege","createNewUser","up","authenticate","method","errmsg","stringify","setItem","saveState","SuperAdmin","Login","components_LoginForm","initialState","pastGamesFromAPI","combineReducers","arguments","undefined","deletedPlayer","panel","dateRange","middleware","thunk","navigator","userAgent","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","library","add","faChevronUp","faChevronDown","faMinusCircle","faTimesCircle","faArrowCircleLeft","faAngleRight","faPlusCircle","faTimes","faPlus","faCaretDown","faCaretRight","faLongArrowAltUp","faLongArrowAltDown","faCircle","faLock","faUnlockAlt","faCheckSquare","App","es","BrowserRouter","Switch","Route","exact","path","render","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App","document","getElementById","URL","process","addEventListener","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c1a3b93b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport SmallLogo from \"../../components/images/logo_sm.jpeg\"\n\nimport \"./NavBar.css\";\n\n\nclass NavBar extends Component {\n    render() {\n        return (\n            <nav>\n                <div className=\"pos-f-t\">\n                    <div className=\"collapse\" id=\"navbarToggleExternalContent\">\n                        <div className=\"bg-dark p-4\">\n                        <h4 className=\"nav_title\">Summit Broomball</h4>\n                        <div className=\"navbar-nav\">\n                            <a className=\"nav-item nav-link\" href=\"/\">Home</a>\n                            <a className=\"nav-item nav-link\" href=\"/Player\">Players</a>\n                            <a className=\"nav-item nav-link\" href=\"/Draft\">Draft</a>\n                            <a className=\"nav-item nav-link\" href=\"/Stats\">Stats</a>\n                            <a className=\"nav-item nav-link\" href=\"/Records\">Records</a>\n                            <a className=\"nav-item nav-link\" href=\"/Login\">Login</a> {/* Will change depending on state*/}\n                        </div>\n                    </div>\n                    </div>\n                    <nav className=\"navbar bg\">\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\" aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <img className=\"toggler_img\" src={SmallLogo} alt=\"logo\" />\n                        </button>\n                    </nav>\n                    </div>\n            </nav>\n            )\n        }\n}\n\n\nexport default NavBar\n","import React from \"react\";\nimport NavBar from \"../components/NavBar\";\n\nimport \"../styles/css/home.css\";\n\nconst Home = () => (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Summit Broomball</h1>\n            <div className=\"instructions_div\">\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Create, Manage, and Edit Players:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"/Player\"><button className=\"btn contrast_color menu_button\">Players</button></a>\n                    </div>\n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Schedule Games and Draft Teams:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Draft\"><button className=\"btn contrast_color menu_button\">Draft</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Enter Stats for Games:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Stats\"><button className=\"btn contrast_color menu_button\" >Stats</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instruction instructions_text\">Visualize Recorded Stats:</p>\n                    </div> \n                    <div className=\"instruction\">\n                        <a href=\"./Records\"><button className=\"btn contrast_color menu_button\" >Records</button></a>\n                    </div>\n                    \n                </div>\n            </div>\n                \n                \n                <div className=\"container\">\n                    <div className=\"welcome_text\">\n                        <p className=\"text_center\">\n                        Click on the logo at any time to switch page.\n                        </p>\n                    </div>\n                </div>\n            </div>        \n        </div>\n\n)\nexport default Home;\n","import axios from \"axios\";\n// Transforming the current url in order to query the public API locally \n// (Express port 3001 changed to React port 3000 where the API exists).\n// Once deployed, it should reset to the domain name used.\nlet currentURL = window.location.origin\nif (currentURL === \"http://localhost:3000\") {\n    currentURL = \"http://localhost:8080\"\n    } \n// For Passport.js: \n/* Server sends SetCookie header then the browser handle to store it, and then the cookie is sent with requests made to \nthe same server inside a Cookie HTTP header.\nhttps://stackoverflow.com/questions/45536831/node-express-passport-req-user-undefined-but-works-in-postman\n\nconst config = {\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    }\n}\n*/\nexport default {\n    getGames: () => {       \n        const url = currentURL + \"/api/game/\"\n        return axios.get(url)\n        },\n    getGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.get(url)\n    },\n    addGame: (date, players) => {\n        const url = currentURL + \"/api/game/\"\n        return axios.post(url, { game_date: date, players: players})\n        },\n    deleteGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.delete(url)\n        },\n    editGame: (gameId, data) => {\n        const url = currentURL + \"/api/game/\" + gameId\n        return axios.put(url, { data })\n        },\n    getPlayers: () => {\n        const url = currentURL + \"/api/player/\"\n        return axios.get(url)\n        },\n    addPlayer: (player) => {\n        const url = currentURL + \"/api/player/\"\n        return axios.post(url, { player })\n        },\n    editPlayer: (id, data) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.put(url, { data })\n        },\n    deletePlayer: (id) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.delete(url)\n    },\n    addNewUser: (userData) => {\n        const url = currentURL + \"/users\"\n        return axios.post(url, {userData})\n    },\n    authenticateUser: (mode, userData) => {\n        const url = currentURL + \"/login\"\n        if (mode === \"local\") {\n            return axios.post(url, userData)\n        }\n        }\n    }\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    GET_GAME, \n    DELETE_GAME, \n    EDIT_GAME_INFO, \n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE, \n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS, \n    HIDE_NON_MEMBERS,\n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO, \n    UNLOCK_GAME_INFO,\n    RESET,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n    \n} from './types';\n\nimport API from \"../../utils/API\"\nimport _ from \"underscore\"\n\nexport const fetchGames = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_GAMES,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deleteGame = (id) => dispatch => {\n    API.deleteGame(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_GAME,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addGame = (date, players, player, members) => dispatch => {\n    API.addGame(date, players, player, members)\n            .then(res => {\n                if(res.status !== 200) {\n                    throw new Error(res.statusText)\n                    }\n                else {\n                    let newGame = res.data\n                    // console.log(\"res.data: \", res.data)\n                    if(newGame.name){\n                        console.log(\"Error Message: the app encountered an error creating this game in the database\")\n                    }\n                    else {\n                        console.log(\"Game successfully added to db\")\n                        dispatch({\n                            type: NEW_GAME,\n                            payload: res.data\n                        })\n                        }\n                    }\n            })\n        }\n\nexport const getGame = (game) => dispatch => {\n    API.getGame(game)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                /* We need to know if drafting has happened for the Stats page to display properly */\n                let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\")\n                let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\")\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }\n\n                dispatch({\n                    type: GET_GAME,\n                    payload: {\n                        game: res.data,\n                        gameStats: gameStats,\n                        noStatsMessage: noStatsMessage\n                    }\n                })\n            }\n        })\n}\n\nexport const editGameInfo = (game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get full game data from the API's response\n            /*\n            // Then we need to check if the locker can be displayed\n            let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\" && player.gameInfo.available === true)\n            let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\" && player.gameInfo.available === true)\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }*/\n            \n            dispatch({\n                type: EDIT_GAME_INFO,\n                payload: {\n                    game: res.data,\n                    // gameStats: gameStats,\n                    // noStatsMessage: noStatsMessage\n                    }\n            })\n        }\n    })\n}\n\nexport const setMemberUnavailable = (game, data) => dispatch => {\n        API.editGame(game, data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_MEMBER_UNAVAILABLE,\n                    payload: res.data\n                    })\n                }\n            })\n    }\nexport const setTenBuckerUnavailable = (gameId, gameData, playerID) => dispatch => {\n    API.editGame(gameId, gameData)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_TEN_BUCKER_UNAVAILABLE,\n                    payload: {\n                        gameData: res.data,\n                        player: playerID\n                        }\n                    })\n                }\n            })\n        }\nexport const setAvailable = (game, data) => dispatch => {\n    // console.log(\"data.player: \", data.player, \"\\n(is the id of player to add)\")\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get the game info\n            // console.log(\"res.data: \", res.data)\n            dispatch({\n                type: MAKE_MEMBER_AVAILABLE,\n                payload: {\n                    player: data.player,\n                    game: res.data\n                    }\n            })\n        }\n    })\n}\n\n\nexport const showUnavailable = () => dispatch => {\n    dispatch({\n        type: SHOW_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const hideUnavailable = () => dispatch => {\n    dispatch({\n        type: HIDE_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const showNonMembers = (allTenBuckers, notPlayingTenBuckers) => dispatch => {\n    dispatch({\n        type: SHOW_NON_MEMBERS,\n        payload: {\n            all: allTenBuckers,\n            new: notPlayingTenBuckers\n                }\n    })\n}\n\nexport const hideNonMembers = () => dispatch => {\n    dispatch({\n        type: HIDE_NON_MEMBERS\n    })\n}\n// Adds a Ten Bucker to the list of players\nexport const addNonMember = (game, newPlayer, existingPlayers) => dispatch => {\n    let newRoster = _.sortBy([...existingPlayers, newPlayer], \"name\")\n    API.editGame(game, {players: newRoster})\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NON_MEMBER,\n                payload: {players: res.data, player: newPlayer}\n            })\n        }\n    })\n}\n\nexport const lockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: true}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: LOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const unlockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: false}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: UNLOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const triggerPickMode = (team) => dispatch => {\n    // console.log(\"team in triggerPickMode from gameActions.js: \", team)\n    switch (team) {\n        case \"Dark\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        left: \"Exit\",\n                        right: \"Set White Picks\"\n                        }\n                    }\n                })\n                break;\n\n        case \"White\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        right: \"Exit\",\n                        left: \"Set Dark Picks\"\n                        },\n                        // set: \"player.gameInfo.whitePickNum\"\n                    }\n                })\n                break;\n        default:\n            console.log(\"There was an error in the dispatcher\")\n    }\n    }\n\nexport const triggerDraftMode = () => dispatch => {\n    dispatch({\n        type: TRIGGER_DRAFT_MODE\n        })\n}\n\nexport const setPick = (team, game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data.players: \", res.data.players)\n            let available = res.data.players.filter(player => player.gameInfo.available === true)\n            switch (team) {\n                case \"Dark\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                case \"White\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                default:\n                return;\n                }\n            }\n        })\n    } \n\nexport const reset = (game, data) => dispatch => {\n    // console.log('Data received in reset gameActions.js: ', data)\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data in the reset gameAction.js function: \", res.data)\n            dispatch({\n                type: RESET,\n                payload: res.data\n            })\n            }\n    })\n}","export const FETCH_GAMES = 'FETCH_GAMES'\nexport const NEW_GAME = 'NEW_GAME'\nexport const GET_GAME = 'GET_GAME'\nexport const DELETE_GAME = 'DELETE_GAME'\n\nexport const GET_GAMES_AND_TRANSFORM = 'GET_GAMES_AND_TRANSFORM'\nexport const GET_GAMES_IN_TIMESPAN = 'GET_GAMES_IN_TIMESPAN'\n\nexport const EDIT_GAME_INFO = 'EDIT_GAME_INFO'\nexport const LOCK_GAME_INFO = 'LOCK_GAME_INFO'\nexport const UNLOCK_GAME_INFO = 'UNLOCK_GAME_INFO'\nexport const RESET = 'RESET'\n\nexport const SHOW_UNAVAILABLE_MEMBERS = 'SHOW_UNAVAILABLE_MEMBERS'\nexport const HIDE_UNAVAILABLE_MEMBERS = 'HIDE_UNAVAILABLE_MEMBERS'\nexport const MAKE_MEMBER_AVAILABLE = 'MAKE_MEMBER_AVAILABLE'\nexport const ADD_NON_MEMBER = 'ADD_NON_MEMBER'\nexport const MAKE_MEMBER_UNAVAILABLE = 'MAKE_MEMBER_UNAVAILABLE'\nexport const MAKE_TEN_BUCKER_UNAVAILABLE = 'MAKE_TEN_BUCKER_UNAVAILABLE'\nexport const SHOW_NON_MEMBERS = 'SHOW_NON_MEMBERS'\nexport const HIDE_NON_MEMBERS = 'HIDE_NON_MEMBERS'\n\nexport const SHOW_FUTURE = \"SHOW_FUTURE\"\nexport const SHOW_PAST = \"SHOW_PAST\"\n\nexport const SHOW_TAB = \"SHOW_TAB\"\nexport const RESET_TABS = \"RESET_TABS\"\n\nexport const EDIT_FORM = \"EDIT_FORM\"\nexport const UPDATE_FIELD = \"UPDATE_FIELD\"\n\nexport const FETCH_PLAYERS = \"FETCH_PLAYERS\"\nexport const DELETE_PLAYER = \"DELETE_PLAYER\"\nexport const ADD_PLAYER = \"ADD_PLAYER\"\nexport const EDIT_PLAYER = \"EDIT_PLAYER\"\n\nexport const CREATE_GAME_ROSTER = \"CREATE_GAME_ROSTER\"\n\nexport const TRIGGER_PICK_MODE = \"TRIGGER_PICK_MODE\"\nexport const TRIGGER_DRAFT_MODE = \"TRIGGER_DRAFT_MODE\"\nexport const SET_PICK = 'SET_PICK'\n\nexport const SET_DATE_RANGE = \"SET_DATE_RANGE\"\n\nexport const SHOW_GAMES_TO_STATS = \"SHOW_GAMES_TO_STATS\"\nexport const SET_YEARS_VISIBILITIES = \"SET_YEARS_VISIBILITIES\"\nexport const ADD_GAME_TO_SELECTED = \"ADD_GAME_TO_SELECTED\"\nexport const REMOVE_GAME_FROM_SELECTED = \"REMOVE_GAME_FROM_SELECTED\"\nexport const ADD_PLAYER_TO_SELECTED = \"ADD_PLAYER_TO_SELECTED\"\nexport const REMOVE_PLAYER_FROM_SELECTED = \"REMOVE_PLAYER_FROM_SELECTED\"\nexport const TOGGLE_RECORDS_VIEWS = \"TOGGLE_RECORDS_VIEWS\"\n\nexport const ADD_PLAYER_RECORDS = \"ADD_PLAYER_RECORDS\"\nexport const REMOVE_PLAYER_RECORDS = \"REMOVE_PLAYER_RECORDS\"\nexport const REPLACE_PLAYERS_RECORDS = \"REPLACE_PLAYERS_RECORDS\"\n\nexport const SORT_AZ_ASC = \"SORT_AZ_ASC\"\nexport const SORT_AZ_DESC = \"SORT_AZ_DESC\"\nexport const SORT_GAMES_ASC = \"SORT_GAMES_ASC\"\nexport const SORT_GAMES_DESC = \"SORT_GAMES_DESC\"\nexport const SORT_WINS_ASC = \"SORT_WINS_ASC\"\nexport const SORT_WINS_DESC = \"SORT_WINS_DESC\"\nexport const SORT_LOSSES_ASC = \"SORT_LOSSES_ASC\"\nexport const SORT_LOSSES_DESC = \"SORT_LOSSES_DESC\"\nexport const SORT_TIES_ASC = \"SORT_TIES_ASC\"\nexport const SORT_TIES_DESC = \"SORT_TIES_DESC\"\nexport const SORT_GOALS_ASC = \"SORT_GOALS_ASC\"\nexport const SORT_GOALS_DESC = \"SORT_GOALS_DESC\"\nexport const SORT_GPG_ASC = \"SORT_GPG_ASC\"\nexport const SORT_GPG_DESC = \"SORT_GPG_DESC\"\nexport const SORT_ASSISTS_ASC = \"SORT_ASSISTS_ASC\"\nexport const SORT_ASSISTS_DESC = \"SORT_ASSISTS_DESC\"\nexport const SORT_APG_ASC = \"SORT_APG_ASC\"\nexport const SORT_APG_DESC = \"SORT_APG_DESC\"\n\n// export const SET_CHART_DATA = \"SET_CHART_DATA\"\nexport const TOGGLE_SELECT_ALL = \"TOGGLE_SELECT_ALL\"\n// export const TOGGLE_POSITIONS = \"TOGGLE_POSITIONS\"\n\nexport const BATCH_CARD_UPDATE = \"BATCH_CARD_UPDATE\"\nexport const BATCH_CHART_UPDATE = \"BATCH_CHART_UPDATE\"\nexport const BATCH_UNSELECT = \"BATCH_UNSELECT\"\nexport const BATCH_GAMES = \"BATCH_GAMES\"\nexport const UNSELECT_ALL_GAMES = \"UNSELECT_ALL_GAMES\"\n\nexport const TOGGLE_PLAYER_MODAL = \"TOGGLE_PLAYER_MODAL\"\nexport const FILTER_PLAYER_RECORDS_BY_TYPE = \"FILTER_PLAYER_RECORDS_BY_TYPE\"\nexport const FILTER_PLAYER_RECORDS_BY_GAMES = \"FILTER_PLAYER_RECORDS_BY_GAMES\"\n\n// USERS\nexport const UPDATE_USER_FORM = \"UPDATE_USER_FORM\"\nexport const ADD_NEW_USER = \"ADD_NEW_USER\"\nexport const SIGN_MODE = \"SIGN_MODE\"\n// export const SETTING_USER_PRIVILEGES = \"SETTING_USER_PRIVILEGES\"","/* https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage */\n\nexport const loadState = () => {\n    try {\n        const serializedState = sessionStorage.getItem('state');\n        if (serializedState === null ) {\n            return undefined;\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        return undefined\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem(\"state\", serializedState);\n    } catch (err) {\n        console.log(err)\n    }\n}","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchGames } from '../../js/actions/gameActions'\nimport { getGame } from '../../js/actions/gameActions'\nimport { deleteGame } from '../../js/actions/gameActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass GameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleteGame: true\n        }\n    }\n    componentDidMount() {\n        this.props.fetchGames();\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    /* \n    componentDidUpdate() {\n        console.log(this.state)\n    } \n    */\n    \n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n    }\n\n    deleteGameFunc = (gameId) => {\n        this.props.deleteGame(gameId);\n    }\n\n    render() {\n        return (\n            <div className=\"show_games\">\n            <h2 className=\"h2_main\">{this.props.dateHeader} Games</h2>\n                <div className=\"list-management\">\n                    {/* showing the upcoming games when mode has been  */}\n                    {this.props.dateHeader === \"Upcoming\" ? (\n                        // need case for when there is no game scheduled\n                        this.props.upcomingGames.length > 0 ?\n                        this.props.upcomingGames\n                            .map(game =>\n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color \" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n                    ) : \n                    (\n                        this.props.pastGames.length > 0 ?\n                        this.props.pastGames\n                            .map(game => \n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color\" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n\n                    )}\n\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    games: state.games.games,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    upcoming_visibility: state.display.upcoming_visibility,\n    past_visibility: state.display.past_visibility,\n    lockStatus: state.games.lockStatus,\n    upcomingGames: state.games.upcomingGames,\n    pastGames: state.games.pastGames\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { fetchGames, getGame, deleteGame }) (GameList)\n","import { FETCH_PLAYERS, EDIT_PLAYER, DELETE_PLAYER, ADD_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from './types';\nimport API from \"../../utils/API\"\n\nexport const fetchPlayers = () => dispatch => {\n    API.getPlayers()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_PLAYERS,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deletePlayer = (id) => dispatch => {\n    API.deletePlayer(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addPlayer = (data) => dispatch => {\n    console.log(\"data received: \", data)\n    API.addPlayer(data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n                }\n            else if (res.data.errors) {\n                console.log(res.data.message)\n            }\n            else {\n                let newPlayer = res.data\n                if(newPlayer.name !== \"MongoError\")\n                    {\n                    console.log(\"Player successfully added to db\")\n                    dispatch({\n                        type: ADD_PLAYER,\n                        payload: res.data\n                    })\n\n                    }\n                else {\n                    console.log(\"Error Message: the app encounted an error creating this player in the database\")\n                    }\n                }\n            })\n        }\n\nexport const editPlayer = (id, data) => dispatch => {\n    API.editPlayer(id, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: EDIT_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n        dispatch({\n            type: SHOW_TAB,\n            payload: id\n        })\n    }\n\nexport const resetTabs = (id) => dispatch => {\n    dispatch({\n        type: RESET_TABS\n    })\n}\n\nexport const editForm = (player) => dispatch => {\n    dispatch({\n        type: EDIT_FORM,\n        payload: player\n        })\n    }\n    \nexport const updateField = (player) => dispatch => {\n    dispatch({\n        type: UPDATE_FIELD,\n        payload: player \n        })\n    }\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addGame } from '../../js/actions/gameActions'\nimport { fetchPlayers } from '../../js/actions/playerActions'\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { loadState } from \"../sessionStorage\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n\nconst moment = require(\"moment\");\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: \"\",\n            createGame: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        \n            this.setState(...this.state.date, privileges)\n        \n        }\n\n    handleChange(date) {\n        this.setState({\n            dateSelected: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let members = this.props.players.filter((player) => player.membershipStatus === \"Member\")\n        let membersWithGameInfo = members.map((member) => {return {\n            membershipStatus: member.membershipStatus,\n            _id: member._id,\n            name: member.name,\n            playerLevel: member.playerLevel,\n            preferredPosition: member.preferredPosition,\n            gameInfo: this.props.gameInfo\n        }})\n        let dateOfGame = moment(this.state.dateSelected).format(\"YYYY-MM-DD\")\n        this.props.addGame(dateOfGame, membersWithGameInfo)\n    }\n\n\n    render() {\n        return (\n            <div id=\"schedule_game\">\n                <div>\n                    <h2 className=\"h2_main\">Schedule a game</h2>\n                </div>\n\n                <div>\n                {this.state.createGame === true \n                    ? <form className=\"game_form\" onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                            <div className=\"calendar_component\">\n                                <DatePicker \n                                    placeholderText=\"MM DD YYYY\"\n                                    selected={this.state.dateSelected}\n                                    onChange={this.handleChange}\n                                    value={this.state.value}\n                                    />\n                            </div>\n                            \n                                <div className=\"submit_button\">\n                                    <button id=\"date_submit\" className=\"contrast_color content_button\" name=\"submit\" type=\"submit\" >Submit</button>\n                                </div> \n                            \n                        </div>\n                        </form> \n                    : <p className=\"no_game\">Login as an admin to schedule games and create team line-ups!</p> }\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    game: state.games.game,\n    players: state.players.players,\n    gameInfo: state.games.gameInfo\n    })\n\n\nexport default connect(mapStateToProps, { addGame, fetchPlayers }) (Calendar)\n    ","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { addNonMember } from '../../js/actions/gameActions'\nimport { setMemberUnavailable } from '../../js/actions/gameActions'\nimport { setTenBuckerUnavailable } from '../../js/actions/gameActions'\nimport { setAvailable } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    setUnavailable(playerID, playerStatus) {\n        let gameId = this.props.draft._id\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (playerStatus === \"Member\"){\n            this.props.setMemberUnavailable(gameId, {player: playerID, gameInfo: {available: false, team: \"N/A\"}})\n            }\n        else {\n            let gameId = this.props.draft._id\n            let gameData = {...this.props.draft, players: this.props.draft.players.filter(player => player._id !== playerID)}\n            this.props.setTenBuckerUnavailable(gameId, gameData, playerID)\n            }    \n        }\n    }\n\n    makeAvailable(playerID) {\n        let gameId = this.props.draft._id;\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            this.props.setAvailable(gameId, {player: playerID, gameInfo: {available: true, team: \"N/A\"}})    \n            }\n    }\n\n    assignTeam(playerID, team){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {team: team}})\n            }\n    }\n\n    addTenBuckerToDraft(player){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            let tenBuckerToAdd = {\n                membershipStatus: player.membershipStatus,\n                _id: player._id,\n                name: player.name,\n                playerLevel: player.playerLevel,\n                preferredPosition: player.preferredPosition,\n                gameInfo: this.props.gameInfo\n                }   \n            this.props.addNonMember(gameId, tenBuckerToAdd, this.props.draft.players)\n            }\n\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"row drafter_mode\">\n                    <div className=\"col col_no_bootstrap dark_draft_players\">\n                        <h1 className=\"h1_main col_header\"><br/>Dark</h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                                .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                .map(player => {\n                                    return (\n                                        <div className=\"player_div leaning_right_div\" key={player._id}>\n                                            <button className=\"content_button player_button leaning_right_color\">{player.name}</button>\n                                            {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                        </div>\n                                        )\n                                        })\n                                ) : (<p>Data has not loaded yet</p>)\n                            }\n                    </div>\n                    <div className=\"col col_no_bootstrap undraft_players\">\n                    <h1 className=\"h1_alternate col_header game_date\">{this.props.gameDate}<br/><br/></h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"N/A\")\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div leaning_center_div\" key={player._id}>\n                                        {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"Dark\")} /> : null }\n                                        <button className=\"content_button player_button plain_color\">{player.name}</button>\n                                        {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                        {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"White\")} /> : null }\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Data has not loaded yet</p>)\n                        }\n\n                        {this.props.unavailableMembers ? (this.props.unavailableMembers\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div\" key={player._id}>   \n                                        <button className=\"content_button player_button unavailable\" onClick={() => this.state.changeAvailability === true ? this.makeAvailable(player._id) : null } >{player.name}</button>\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Unable to retrieve unavailable Members</p>)\n                        }\n\n                        {this.props.notPlayingNonMembers ? (this.props.notPlayingNonMembers\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div\" key={player._id}>   \n                                        <button className=\"content_button player_button negative_color\" onClick={() => this.state.changeAvailability === true ? this.addTenBuckerToDraft(player) : null }>{player.name}</button>\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Unable to retrieve Ten Buckers</p>)\n                        }\n\n\n                    </div>\n                    <div className=\"col col_no_bootstrap white_drafted_players\">\n                    \n                    <h1 className=\"h1_main col_header\"><br/>White</h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                                    .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                    .map(player => {\n                                        return (\n                                            <div className=\"player_div leaning_left_div\" key={player._id}>\n                                                {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} size=\"2x\" onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                                <button className={\"content_button player_button leaning_left_color \"}>{player.name}</button>\n                                                {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            </div>\n                                            )\n                                            })\n                                    ) : (<p>Data has not loaded yet</p>)\n                                }\n                    </div>\n                </div>\n            </main>\n\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, addNonMember, setMemberUnavailable, setTenBuckerUnavailable, setAvailable, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { addNonMember } from '../../js/actions/gameActions'\nimport { setMemberUnavailable } from '../../js/actions/gameActions'\nimport { setTenBuckerUnavailable } from '../../js/actions/gameActions'\nimport { setAvailable } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { loadState } from \"../sessionStorage\"\n\nclass SmallScreenDrafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    setUnavailable(playerID, playerStatus) {\n        let gameId = this.props.draft._id\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (playerStatus === \"Member\"){\n            this.props.setMemberUnavailable(gameId, {player: playerID, gameInfo: {available: false, team: \"N/A\"}})\n            }\n        else {\n            let gameId = this.props.draft._id\n            let gameData = {...this.props.draft, players: this.props.draft.players.filter(player => player._id !== playerID)}\n            this.props.setTenBuckerUnavailable(gameId, gameData, playerID)\n            }    \n        }\n    }\n\n    makeAvailable(playerID) {\n        let gameId = this.props.draft._id;\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            this.props.setAvailable(gameId, {player: playerID, gameInfo: {available: true, team: \"N/A\"}})    \n            }\n    }\n\n    assignTeam(playerID, team){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {team: team}})\n            }\n    }\n\n    addTenBuckerToDraft(player){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            let tenBuckerToAdd = {\n                membershipStatus: player.membershipStatus,\n                _id: player._id,\n                name: player.name,\n                playerLevel: player.playerLevel,\n                preferredPosition: player.preferredPosition,\n                gameInfo: this.props.gameInfo\n                }   \n            this.props.addNonMember(gameId, tenBuckerToAdd, this.props.draft.players)\n            }\n\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"col_no_bootstrap undraft_players\">\n                    <h1 className=\"h1_alternate col_header game_date\">{this.props.gameDate}</h1>\n                    <div className=\"small_screen_team_names_header\">\n                        <div className=\"sstnh sstnhd\">\n                            \n                            <h1 className=\"h1_main col_header\"> <FontAwesomeIcon icon=\"arrow-circle-left\" className=\"arrows \"/> Dark</h1>\n                        </div>\n                        <div className=\"sstnh sstnhw\">\n                            <h1 className=\"h1_main col_header\">White <FontAwesomeIcon icon={faArrowAltCircleRight} className=\"arrows \" /></h1> \n                            \n                        </div>\n                    </div>\n\n                    {this.props.draft.players ? (this.props.draft.players\n                        .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"N/A\")\n                        .map(player => {\n                            return (\n                                <div className=\"player_div leaning_center_div\" key={player._id}>\n                                    {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"Dark\")} /> : null }\n                                    <button className=\"content_button player_button plain_color\">{player.name}</button>\n                                    {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                    {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"White\")} /> : null }\n                                </div>\n                                )\n                                })\n                        ) : (<p>Data has not loaded yet</p>)\n                    }\n\n                    {this.props.unavailableMembers ? (this.props.unavailableMembers\n                        .map(player => {\n                            return (\n                                <div className=\"player_div\" key={player._id}>   \n                                    <button className=\"content_button player_button unavailable\" onClick={() => this.state.changeAvailability === true ? this.makeAvailable(player._id) : null } >{player.name}</button>\n                                </div>\n                                )\n                                })\n                        ) : (<p>Unable to retrieve unavailable Members</p>)\n                    }\n\n                    {this.props.notPlayingNonMembers ? (this.props.notPlayingNonMembers\n                        .map(player => {\n                            return (\n                                <div className=\"player_div\" key={player._id}>   \n                                    <button className=\"content_button player_button negative_color\" onClick={() => this.state.changeAvailability === true ? this.addTenBuckerToDraft(player) : null }>{player.name}</button>\n                                </div>\n                                )\n                                })\n                        ) : (<p>Unable to retrieve Ten Buckers</p>)\n                    }\n                </div>\n                <div className=\"small_teams\">\n                    <div className=\"col_no_bootstrap dark_draft_players\">\n                        <h1 className=\"h1_alternate col_header\"><br/>Dark</h1>\n                        <div>\n                            {this.props.draft.players ? (this.props.draft.players\n                                    .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                    .map(player => {\n                                        return (\n                                            <div className=\"player_div\" key={player._id}>\n                                                {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"small_screen_arrows sm_dark \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                                <button className=\"content_button player_button black_small_screen\">{player.name}</button>\n                                                {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            </div>\n                                            )\n                                            })\n                                    ) : (<p>Data has not loaded yet</p>)\n                                }\n                        </div>\n                    </div>\n                    \n                    <div className=\"col_no_bootstrap white_draft_players\">\n                        <h1 className=\"h1_alternate col_header\"><br/>White</h1>\n                        <div>\n                        {this.props.draft.players ? (this.props.draft.players\n                                .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                .map(player => {\n                                    return (\n                                        <div className=\"player_div\" key={player._id}>\n                                            <button className=\"content_button player_button white_small_screen\">{player.name}</button>\n                                            {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"small_screen_arrows sm_white \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                        </div>\n                                        )\n                                        })\n                                ) : (<p>Data has not loaded yet</p>)\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </main>\n\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, addNonMember, setMemberUnavailable, setTenBuckerUnavailable, setAvailable }) (SmallScreenDrafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    addPick(team, playerID){\n        let gameId = this.props.draft._id\n        switch (team){\n            case \"Dark\":\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {player: playerID, gameInfo: {darkPickNum: this.props.picked.length + 1}})\n            break;\n\n            case \"White\":\n            this.props.setPick(\"White\", gameId, {player: playerID, gameInfo: {whitePickNum: this.props.picked.length + 1}})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    removePick(team, player) {\n        let gameId = this.props.draft._id\n        // we remove the player from the array of ranked players\n        let indexOfPlayerToRemove = this.props.picked.indexOf(player)\n        this.props.picked.splice(indexOfPlayerToRemove,1)\n        // we will also need to send the unavailable players, otherwise their availability cannot be reset later on\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        switch (team){\n            case \"Dark\":\n            // after removing the player from the array of ranked players, we reset their rank via their index in the array\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.darkPickNum = index + 1 }\n            })\n            // the rank of the player initially selected is reset to 0\n            player.gameInfo.darkPickNum = 0\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            case \"White\":\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.whitePickNum = index + 1 }\n            })\n            player.gameInfo.whitePickNum = 0\n            this.props.setPick(\"White\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    rankOneUp(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit > 0) {\n            switch (this.props.draftMode) {\n                case \"Dark\": \n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n            }\n        }\n    }\n\n    rankOneDown(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit < this.props.picked.length - 1) {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"row picker_mode\"> \n                    <div className=\"col col_no_bootstrap set_picks_col\">\n                        <h1 className=\"h1_main pick_col_header unpicked_list_header\">Set {this.props.draftMode} Picks</h1>\n                        <div className=\"list_of_unpicked_players\">\n                        {/* Mapping the unranked Players */}\n                        {this.props.unpicked ? (this.props.unpicked\n                            .map(player => {\n                                return (\n                                    <div className=\"player_picking_div\" key={player._id}>\n                                        <button className=\"content_button player_picking lighter_color\"  onClick={() => this.addPick(this.props.draftMode, player._id)} >{player.name}</button>\n                                        <FontAwesomeIcon icon=\"angle-right\" className=\"pick_arrow arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div>\n                        <div className=\"col col_no_bootstrap ranks_col\">\n                            <h1 className=\"h1_main pick_col_header picked_list_header\">Ranks</h1>\n                            {/* mapping the ranked available players */}\n                            <div className=\"list_of_picked_players\">\n                            {this.props.picked ? (this.props.picked\n                                .map(player => {\n                                    return (    \n                                        <div className=\"player_picking_div\" key={player._id}>\n                                            <button className=\"content_button player_button darker_color\">{player.name}</button>\n                                            <FontAwesomeIcon icon=\"minus-circle\" className=\"remove remove_pick\" onClick={() => this.removePick(this.props.draftMode, player)} />\n                                            <div className=\"sorter\"> \n                                                <FontAwesomeIcon icon=\"chevron-up\" className=\"up_arrow\" onClick={() => this.rankOneUp(player)}/>\n                                                <FontAwesomeIcon icon=\"chevron-down\" className=\"down_arrow\" onClick={() => this.rankOneDown(player)}/>\n                                            </div>\n                                        </div>\n                                    )\n                                } )\n                            ) : ( <p>Bogus data</p> )\n                            }\n                            </div>\n                        </div> \n                </div>\n            </main>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport _ from \"underscore\"\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { reset } from '../../js/actions/gameActions'\nimport { triggerPickMode } from '../../js/actions/gameActions'\nimport { triggerDraftMode } from '../../js/actions/gameActions'\n\nclass GameOptionsBottom extends Component {\n\n    resetTeams(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                    let resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for Dark team\n                            gameInfo: {...member.gameInfo, darkPickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                break;\n\n                case \"White\":\n                    resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for White team\n                            gameInfo: {...member.gameInfo, whitePickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                return;\n\n                case \"Draft\":\n                // we filter the members (but should be done from the player db, not the games.draft)\n                    resetPlayers = this.props.players\n                    .filter((player) => player.membershipStatus === \"Member\")\n                    .map((member) => {return {\n                        membershipStatus: member.membershipStatus,\n                        _id: member._id,\n                        name: member.name,\n                        playerLevel: member.playerLevel,\n                        preferredPosition: member.preferredPosition,\n                        // Resetting teams only\n                        gameInfo: {...member.gameInfo, team: \"N/A\"}\n                        }})\n                this.props.reset(game, {players: _.sortBy(resetPlayers, \"name\")})\n                break;\n                \n                default:\n                return;\n                }\n            }\n        }\n\n    autodraft(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (this.props.draftMode === \"Draft\") {\n                // Autodraft feature: separates all players by level, randomly assigns them to dark or white team\n                let mixedRosters = [];\n                let arrayOfAvailablePlayers = this.props.players.filter(player => player.gameInfo.available === true)\n                // recreating our array by assigning each player to its level\n                let output = arrayOfAvailablePlayers.reduce((levels,player) => {\n                    levels[player.playerLevel] = levels[player.playerLevel] || [];\n                    levels[player.playerLevel].push({\n                        player\n                    });\n                    return levels;\n                },[])\n                \n                let numOutput = Object.keys(output).length;\n                \n                for (let i = 0; i < numOutput; i++) {\n                    // running the randomize function for each level\n                    let playersByLevel = Object.entries(output)[i]\n                    // the \"level\" is the first argument in the array, the next one is the players: that's how we access them\n                    let playersArray = playersByLevel[1]\n                    // we randomize via a custom recursive function (could also try underscore, but on such a small array, it\n                    // I doubt it makes any difference)\n                    this.randomize(playersArray, mixedRosters)\n                    }\n                    \n                for (let i = 0; i < mixedRosters.length; i++) {\n                    // assigning different team to every other player\n                    if (i%2 === 0) {mixedRosters[i].player.gameInfo.team = \"Dark\";}\n                    else {mixedRosters[i].player.gameInfo.team = \"White\"}\n                    }\n                    \n                    let arrayOfUnavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    // For a reason I haven't been able to figure out, each player information is nested \n                    // under \"{player: }\" which we then need to remove\n                    let remappedAvailablePlayers = mixedRosters.map((player) => player.player)\n                    // Once this is done, we add the unavailable players since they need to be sent to the API as well (otherwise, they just can't be added back in the draft)\n                    let allPlayers = remappedAvailablePlayers.concat(arrayOfUnavailablePlayers)\n                    allPlayers = _.sortBy(allPlayers, \"name\") \n                    \n                this.props.editGameInfo(game, {players: allPlayers})\n                // the only purpose of calling this function is to verify that teams are balanced (level wise)\n                this.filterTeams(allPlayers, \"level\")\n                }\n                else {\n                    console.log(\"Error message: go to draft mode to draft teams\")\n                    }\n            }\n        }\n\n    // helper function to randomize an array (pushes/deletes to another array recursively, until it's empty) \n    randomize = (inputArray, outputArray) => {\n        if(inputArray.length > 0) {\n            let randomPlayer = inputArray[Math.floor(Math.random()*inputArray.length)];\n            let index = inputArray.indexOf(randomPlayer);\n            outputArray.push(randomPlayer);\n            inputArray.splice(index,1)\n            this.randomize(inputArray, outputArray);\n            }\n        }\n        \n    // function to filter array of player objects into teams used for quick control. \n    filterTeams = (arrayOfPlayerObjects, mode) => {\n        if (mode === \"level\") {\n            // filter player objects according to name of the team #1\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, \"playerLevel\")\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, \"playerLevel\")\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"playerLevel\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}`);\n                })\n            }\n        else {\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, (obj) => obj.gameInfo.darkPickNum)\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (picked for Dark: #${e.gameInfo.darkPickNum})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, (obj) => obj.gameInfo.whitePickNum)\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (picked for White: #${e.gameInfo.whitePickNum})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"name\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}\\nPicked for Dark: #${e.gameInfo.darkPickNum})\\nPicked for White: #${e.gameInfo.whitePickNum})`)//.\\nPicked in position: ${e.gameInfo.captain2Pick})`);\n                })\n            }\n        }\n    \n    toggleMode(currentMode, team){\n        if (currentMode === team) {\n            this.props.triggerDraftMode()\n        }\n        else {\n            this.props.triggerPickMode(team)\n        }\n    }\n    // helper function to test if a pick is eligible to be pushed to the ranked array. If not, moves on to the next pick. \n    testPick = (inputObject, rankedPlayers) => {\n        let index = 0;\n        let picks = inputObject.picks;\n        if (rankedPlayers.indexOf(picks[index]) !== -1) {\n            picks.splice(index,1);\n            this.testPick(inputObject, rankedPlayers);\n            }\n        else {\n            let nameOfTeam = inputObject.team;\n            // assigns the name of the team to the drafted player (to filter later on)\n            picks[index].gameInfo.team = nameOfTeam;\n            // takes the pick, pushes it to the output array\n            rankedPlayers.push(picks[index]);\n            // removes the pick from the array of picks\n            picks.splice(index,1);\n            }\n        }\n\n    // function to create a \"serpentine\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 has the next 2 picks, etc. until everyone is drafted\n    serpentineDraft = (game) => {\n        // Serpentine draft sends an object to \"testPick\" to figure if a player has already been drafted. \n        // If not, the player in question gets stored in the array of drafter players (and so on, recursively). \n        // For this to happen, we need to format our objects\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        // the function will error if we try to run it more times than players have been picked. \n        // Therefore, we need a pattern to determine how many times it should be ran\n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n            // there are 4 turns to complete a round\n            let turns = 4;\n            let modulo = num % turns;\n            let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                    // and complete the rosters one player at a time\n                    switch (modulo !== 0) {\n                        case modulo === 1:\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        case modulo === 2:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        break;\n                        case modulo === 3:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        default:\n                        return;\n                        }\n                    }\n                this.filterTeams(rankedPlayers, \"pick\")\n                // we re-add the unavailable players, otherwise they cannot be reset later on\n                let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    \n                let allPlayers = rankedPlayers.concat(unavailablePlayers)\n                this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n    \n    // function to create an \"alternate\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 drafts, etc. until everyone is drafted\n    alternateDraft = (game) => {\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        \n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n        // there are 2 turns to complete a round\n        let turns = 2;\n        let modulo = num % turns;\n        let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                // and complete the rosters with one more pick\n                this.testPick(darkPicks, rankedPlayers);\n                }\n            this.filterTeams(rankedPlayers, \"pick\")\n            // we re-add the unavailable players, otherwise they cannot be reset later on\n            let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                        \n            let allPlayers = rankedPlayers.concat(unavailablePlayers)\n            this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n\n    render() {\n        return (\n            <div className={\"row \" + this.props.visibility.bottom}>\n                <div className={this.props.visibility.bottom + \" reduced_container\"}>\n                        <div className=\"game_options_container\">\n                            \n                                <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"Dark\")}>{this.props.pickButtons.left}</button> \n                            \n                            \n                            \n                                <button className=\"content_button contrast_color pick_option\" onClick={() => this.resetTeams(this.props.gameDate)}>Reset</button> \n                            \n                            \n                            \n                                <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"White\")}>{this.props.pickButtons.right}</button> \n                            \n                        </div>\n                        <br />\n                        <div className={this.props.visibility.top + \" game_options_container\"}>\n                            \n                                <button className=\"content_button darker_color draft_option\" onClick={()=> this.autodraft(this.props.gameDate)} >Autodraft</button> \n                            \n                            \n                                <button className=\"content_button darker_color draft_option\" onClick={()=> this.alternateDraft(this.props.gameDate)}>Alternate Draft</button> \n                            \n                            \n                                <button className=\"content_button darker_color draft_option\" onClick={() => this.serpentineDraft(this.props.gameDate)}>Serpentine Draft</button> \n                            \n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    players: state.games.draft.players,\n    // playerDB: state.players.players,\n    lockStatus: state.games.lockStatus,\n    gameInfo: state.games.gameInfo,\n    draftMode: state.games.draftMode,\n    pickButtons: state.games.pickButtons\n    /*{\n        right: \"Set Dark Picks\",\n        left: \"Set White Picks\"\n    }*/\n})\n\nexport default connect(mapStateToProps, { editGameInfo, reset, triggerPickMode, triggerDraftMode }) (GameOptionsBottom)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { showUnavailable } from '../../js/actions/gameActions'\nimport { hideUnavailable } from '../../js/actions/gameActions'\nimport { showNonMembers } from '../../js/actions/gameActions'\nimport { hideNonMembers } from '../../js/actions/gameActions'\n\nclass GameOptionsTop extends Component {\n    \n    unavailable(action){\n        if (action === \"Show\") {\n            /*let members = this.props.players.filter(player => player.membershipStatus === \"Member\")\n            let playingMembers = this.props.gameParticipants.map(player => player._id)\n            let notPlayingMembers = members.filter(player => playingMembers.indexOf(player._id) === -1)\n            console.log(\"notPlayingMembers: \", notPlayingMembers)\n            // this.props.showUnavailable(notPlayingMembers)*/\n            this.props.showUnavailable()\n        }\n        else {\n            this.props.hideUnavailable()\n        }\n    }\n    tenBuckers(action){\n        /* This filters all players in the DB according to their membershipStatus\n        It then gets the id of all ten_buckers already playing (that we set when we fetch the game data in GameList.js\n        via the reducer). We check the former against the latter to see who's left to potentially add */\n        if (action === \"Show\") {\n            let tenBuckers = this.props.players.filter((player) => player.membershipStatus !== \"Member\")\n            let arrayOfIds = this.props.playingNonMembers.map(player => player._id)    \n            let newTenBuckers = tenBuckers.filter((player) => arrayOfIds.indexOf(player._id) === -1)\n            this.props.showNonMembers(tenBuckers, newTenBuckers)\n        }\n        else {\n            this.props.hideNonMembers()\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"container button_container\">\n                        <div className=\"row\">\n                            <div className=\"col text-center\">\n                                <button className=\"content_button darker_color game_options\" onClick={()=> this.unavailable(this.props.showingUnavailableMembers)}>{this.props.showingUnavailableMembers} Unavailable</button> \n                            </div>\n                            <div className=\"col text-center\">\n                                <button className=\"content_button darker_color game_options\" onClick={()=> this.tenBuckers(this.props.showingNonPlayingTenBuckers)}>{this.props.showingNonPlayingTenBuckers} Non-Members</button> \n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    players: state.players.players,\n    gameParticipants: state.games.draft.players,\n    playingNonMembers: state.games.playingNonMembers,\n    showingNonPlayingTenBuckers: state.games.showingNonPlayingTenBuckers,\n    showingUnavailableMembers: state.games.showingUnavailableMembers\n})\n\nexport default connect(mapStateToProps, { showUnavailable, hideUnavailable, showNonMembers, hideNonMembers }) (GameOptionsTop)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { lockGameInfo } from \"../js/actions/gameActions\"\nimport { unlockGameInfo } from \"../js/actions/gameActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Locker extends Component {\n\n    lockGame(game) {\n        this.props.lockGameInfo(game)\n    }\n\n    unlockGame(game){\n        this.props.unlockGameInfo(game)\n    }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom === \"visible\" ? \"visible\" : \"hidden\"}>\n                <div className=\"text-center lock_icons_container\">\n                    <div className=\"left_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"locked content_button lock\" : \"unlocked content_button lock\"} onClick={() => this.unlockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"unlock-alt\" /></button> \n                    </div>\n                    <div className=\"right_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"unlocked content_button lock\" : \"locked content_button lock\"} onClick={() => this.lockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"lock\"/></button> \n                    </div>\n                </div>\n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    // noStatsMessage: state.stats.visibility,\n})\n\nexport default connect(mapStateToProps, { lockGameInfo, unlockGameInfo }) (Locker)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleGames } from \"../js/actions/displayActions\"\n\nimport NavBar from \"../components/NavBar\";\nimport GameList from \"../components/DraftPageComp/GameList.js\";\nimport Calendar from \"../components/DraftPageComp/Calendar.js\";\nimport Drafter from \"../components/DraftPageComp/Drafter.js\"\nimport SmallScreenDrafter from \"../components/DraftPageComp/SmallScreenDrafter.js\"\nimport Picker from \"../components/DraftPageComp/Picker.js\"\nimport GameOptionsBottom from \"../components/DraftPageComp/GameOptionsBottom.js\"\nimport GameOptionsTop from \"../components/DraftPageComp/GameOptionsTop.js\"\nimport Locker from \"../components/Locker.js\"\nimport { loadState } from \"../components/sessionStorage\"\n\nimport \"../styles/css/draft.css\";\n\nconst screenSize = window.innerWidth\nclass Draft extends Component { \nconstructor(props) {\n    super(props);\n    this.state = {\n        changeLock: true\n    }\n}\n\ncomponentDidMount() {\n    const privileges = loadState()\n    this.setState(privileges)\n    console.log(screenSize)\n\n}\n\ntoggleGamesFunc(currentlyShowing) {\n    this.props.toggleGames(currentlyShowing)\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Draft Teams</h1>\n            <div className= \"row organizer\">\n                <div className=\"col\"><Calendar/></div>\n                <div className=\"col\"><GameList/></div>\n            </div>\n            <div className=\"row\">\n                <button className=\"contrast_color change_list_display\" onClick={() => this.toggleGamesFunc(this.props.showing)}> {this.props.buttonMsg} Games</button>\n            </div>\n        </div>\n        <div className={\"main_main \" + this.props.visibility.top}>\n            <GameOptionsTop />\n        </div>\n        <div className={\"main_main \" + this.props.visibility.main}>\n            {this.props.draftMode === \"Draft\" ? screenSize > 900 ? <Drafter /> : <SmallScreenDrafter /> : <Picker />}\n        </div>\n        <div className={\"main_main \" + this.props.visibility.bottom}>\n            <GameOptionsBottom />\n            {this.state.changeLock === true ? <Locker /> : null }\n        </div>\n    </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    showing: state.display.showing,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    visibility: state.games.visibility,\n    draftMode: state.games.draftMode,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleGames} ) (Draft)\n","import { SHOW_FUTURE, SHOW_PAST } from './types';\n\nexport const toggleGames = (currentState) => dispatch => {\n    if (currentState === \"past\") {\n        dispatch({\n            type: SHOW_FUTURE\n        })\n    }\n    else {\n        dispatch({\n            type: SHOW_PAST\n        })\n    }\n    }","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addPlayer } from '../../js/actions/playerActions'\nimport { editPlayer } from '../../js/actions/playerActions'\nimport { resetTabs } from '../../js/actions/playerActions'\nimport { updateField } from '../../js/actions/playerActions'\n\nimport { loadState } from \"../sessionStorage\"\n\nclass Form extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            createPlayer: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    componentDidMount() {\n        const privileges = loadState()\n        this.setState(privileges)\n    }\n    handleCancel(event) {\n        event.preventDefault()\n        this.props.resetTabs()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedPlayer = {...this.props.player, [name]: value}\n        this.props.updateField(editedPlayer)\n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        /* If a player is a goalie, their level needs to be set as \"Goalie\" */\n        let assignedLevel;\n        if ( this.props.player.preferredPosition === \"Goalie\") {assignedLevel = \"Goalie\"}\n        else {assignedLevel = this.props.player.playerLevel}\n        let newPlayer = {\n            name: this.props.player.name,\n            fullName: this.props.player.fullName,\n            playerLevel: assignedLevel,\n            preferredPosition: this.props.player.preferredPosition,\n            membershipStatus: this.props.player.membershipStatus,\n            email: this.props.player.email\n            }\n        \n        if (this.props.formMode === \"Add\") {\n            this.props.addPlayer(newPlayer)\n            }\n        else {\n            let id = this.props.player._id\n            this.props.editPlayer(id, newPlayer)\n        }\n\n        // go back to tab#1\n        this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n            {this.state.createPlayer === true ? \n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"name\"\n                                value= {this.props.player.name}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Full Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"fullName\"\n                                value= {this.props.player.fullName}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Preferred Position: </label>\n                            <select name=\"preferredPosition\" onChange={(event) => this.handleChange(event)} value={this.props.player.preferredPosition}>\n                                <option defaultValue=\"Forward\">Forward</option>\n                                <option value=\"Defense\">Defense</option>\n                                <option value=\"Goalie\">Goalie</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Membership Status:</label>\n                            <select name=\"membershipStatus\" onChange={(event) => this.handleChange(event)} value= {this.props.player.membershipStatus}>\n                                <option defaultValue=\"Member\">Member</option>\n                                <option value=\"Ten Bucker\">Ten Bucker</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\"> \n                            <label>Level: </label>\n                            <select name=\"playerLevel\" onChange={(event) => this.handleChange(event)} value= {this.props.player.playerLevel}>\n                                <option value=\"A+\">A+</option>\n                                <option value=\"A\">A</option>\n                                <option value=\"A-\">A-</option>\n                                <option defaultValue=\"B+\">B+</option>\n                                <option value=\"B\">B</option>\n                                <option value=\"B-\">B-</option>\n                                <option value=\"C+\">C+</option>\n                                <option value=\"C\">C</option>\n                                <option value=\"C-\">C-</option>\n                                <option value=\"D+\">D+</option>\n                                <option value=\"D\">D</option>\n                                <option value=\"D-\">D-</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Email: </label>\n                            <input \n                                type=\"text\" \n                                name=\"email\"\n                                value= {this.props.player.email}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <button type=\"submit\" value=\"Submit\" className=\"contrast_color\"> Submit </button>\n                        <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                    </form>\n                </div> : \n            <div className=\"unfortunately\">\n                <p className=\"no_game\">Login as an admin to add players!</p>\n            </div> }\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tab1,\n    tab2: state.players.tab2,\n    panel1: state.players.panel1,\n    panel2: state.players.panel2,\n    player: state.players.player,\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { addPlayer, editPlayer, resetTabs, updateField }) (Form)","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\nimport { loadState } from '../sessionStorage'\n\nclass MemberList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editMember: true,\n            deleteMember: false,\n        }\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        console.log(\"Need a warning that deleting is permanent...\")\n        console.log(\"Active/Inactive?\")\n        // this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus === \"Member\").map(player => {\n                            return (\n                                <tr key={player._id}> \n                                    <td className=\"player_table\">{player.name}</td>\n                                    <td className=\"player_table\"> \n                                        {this.state.editMember === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button>}\n                                        {this.state.deleteMember === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (MemberList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\n\nimport { loadState } from '../sessionStorage'\n\nclass TenBuckerList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editTenBucker: true,\n            deleteTenBucker: false\n        }\n    }\n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus !== \"Member\").map(player => {\n                            return (\n                                <tr key={player._id}> \n                                    <td className=\"player_table\">{player.name}</td>\n                                    <td className=\"player_table\"> \n                                        {this.state.editTenBucker === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button> }\n                                        {this.state.deleteTenBucker === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>)\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (TenBuckerList)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from '../js/actions/playerActions';\n\nimport NavBar from \"../components/NavBar\";\nimport Form from \"../components/PlayerPageComp/Form.js\";\nimport MemberList from \"../components/PlayerPageComp/MemberList.js\"\nimport TenBuckerList from \"../components/PlayerPageComp/TenBuckerList.js\"\n\nimport \"../styles/css/player.css\";\n\nclass Player extends Component {\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n        \nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_alternate\">\n                <h1 className=\"h1_alternate\">Players</h1>\n                <div className=\"row tab_centering\">\n                    <span id=\"1\" className={\"tab \" + this.props.tab1} onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Members </span>\n                    <span id=\"2\" className={\"tab \" + this.props.tab2} onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Ten Buckers </span>\n                    <span id=\"3\" className={\"tab \" + this.props.tab3} onClick={() => this.toggleStatus(\"3\", this.props.tab3) }> {this.props.formMode} Player </span>\n                </div>\n                <div className= \"row main_for_tab\">\n                    <span className={this.props.panel1 + \" full_tab_size\"}> <MemberList /> </span> \n                    <span className={this.props.panel2 + \" full_tab_size\"}> <TenBuckerList /> </span> \n                    <span className={this.props.panel3 + \" full_tab_size\"}> <Form /> </span> \n                </div>\n            </div>\n        </div>\n    \n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tabs[0],\n    tab2: state.players.tabs[1],\n    tab3: state.players.tabs[2],\n    panel1: state.players.panels[0],\n    panel2: state.players.panels[1],\n    panel3: state.players.panels[2],\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { toggleTabStatus }) (Player)\n","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES, \n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES,\n} from './types';\n\nimport API from \"../../utils/API\"\n\nconst moment = require(\"moment\");\n// need a separate function to fetch games within a time span\nexport const getGamesForRecords = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let arrayOfTenBuckerIDs = []\n                let allTenBuckers= res.data.map(game => game.players.filter(player => player.membershipStatus !== \"Member\"))\n                allTenBuckers.forEach(array => array.map(player => arrayOfTenBuckerIDs.push(player._id)))\n\n                dispatch({\n                    type: GET_GAMES_IN_TIMESPAN,\n                    payload: { \n                        games: res.data,\n                        allTenBuckers: arrayOfTenBuckerIDs\n                    }\n                })\n            }\n        })\n    }\n\n\nexport const toggleVisibility = (currentState) => dispatch => {\n    if (currentState === \"hidden\") {\n        dispatch({\n            type: SHOW_GAMES_TO_STATS\n            })\n        }\n    }\n\nexport const getGamesAndTransform = () => dispatch => {\n    \n    const monthify = (string) => {\n        switch (string) {\n            case \"01\":\n            return string = \"January\"\n            \n            case \"02\":\n            return string = \"February\"\n            \n            case \"03\":\n            return string = \"March\"\n            \n            case \"04\":\n            return string = \"April\"\n            \n            case \"05\":\n            return string = \"May\"\n            \n            case \"06\":\n            return string = \"June\"\n            \n            case \"07\":\n            return string = \"July\"\n            \n            case \"08\":\n            return string = \"August\"\n            \n            case \"09\":\n            return string = \"September\"\n            \n            case \"10\":\n            return string = \"October\"\n            \n            case \"11\":\n            return string = \"November\"\n            \n            case \"12\":\n            return string = \"December\"\n            \n            default: \n            return\n\n        }\n        }\n\n    const yearString = (game) => game.substring(0, 4)\n    const monthString = (game) => game.substring(5,7)\n\n    const beautifyGames = (array) => {\n        let object =\n        array.reduce((difYears,game) => {\n            difYears[yearString(game._id)] = difYears[yearString(game._id)] || [];\n            difYears[yearString(game._id)].push(game);\n            return difYears;\n            },{} \n        )\n        let arrayOfObjects = []\n        for (let i = 0; i < Object.values(object).length; i++) {\n            // for each array of games of the object created by the first reduce\n            let remapped = Object.values(object)[i].reduce((difMonths, game) => {\n                // each game is pushed to a different array under the \"month\"\n                difMonths[monthify(monthString(game._id))] = difMonths[monthify(monthString(game._id))] || [];\n                difMonths[monthify(monthString(game._id))].push(game);\n                return difMonths;\n                },{}\n            )\n            // This separates the months into distinct arrays. We push them in a separate array, \n            // otherwise another year's games might overwrite the data\n            arrayOfObjects.push({[Object.keys(object)[i]]: remapped})\n            }\n            return arrayOfObjects\n        }\n\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let pastGames = res.data.filter(game => game._id <= moment().format(\"YYYY-MM-DD\"))\n                let reducedGames = beautifyGames(pastGames)\n                let years = Object.keys(Object.values(reducedGames)).map(e => [e] = \"visible\")\n                // console.log(\"indexes2: \", years)\n                dispatch({\n                    type: GET_GAMES_AND_TRANSFORM,\n                    payload: \n                        {\n                            game: reducedGames,\n                            visibility: years\n                        }\n                    })\n                }\n            })\n        }\n\nexport const setVisibility = (array) => dispatch => {\n    dispatch({\n            type: SET_YEARS_VISIBILITIES,\n            payload: array\n    })\n}\n\nexport const selectGame = (id) => dispatch => {\n    dispatch({\n        type: ADD_GAME_TO_SELECTED,\n        payload: id\n    })\n}\n\nexport const unselectGame = (game) => dispatch => {\n    dispatch({\n        type: REMOVE_GAME_FROM_SELECTED,\n        payload: game\n    })\n}\n\nexport const selectPlayer = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_TO_SELECTED,\n        payload: {selected: player}\n    })\n}\n\nexport const unselectPlayer = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_FROM_SELECTED,\n        payload: {selected: player}\n    })\n}\n\nexport const toggleViews = (currentStatus, element) => dispatch => {\n    if (currentStatus === \"visible\") {\n        dispatch({\n            type: TOGGLE_RECORDS_VIEWS,\n            payload: {\n                dates: \"hidden\",\n                games: \"hidden\",\n                players: \"hidden\",\n                sort: \"hidden\",\n                chart: \"hidden\"\n            }\n        })}\n    else {\n        switch (element) {\n            case \"dates\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"visible\",\n                    games: \"hidden\",\n                    players: \"hidden\",\n                    sort: \"hidden\",\n                    chart: \"hidden\"\n                }\n            })\n            \n            break;\n            \n            case \"games\":\n                dispatch({\n                    type: TOGGLE_RECORDS_VIEWS,\n                    payload: {\n                        dates: \"hidden\",\n                        games: \"visible\",\n                        players: \"hidden\",\n                        sort: \"hidden\",\n                        chart: \"hidden\"\n                    }\n                })\n            break;\n\n            case \"players\":\n                dispatch({\n                        type: TOGGLE_RECORDS_VIEWS,\n                        payload: {\n                            dates: \"hidden\",\n                            games: \"hidden\",\n                            players: \"visible\",\n                            sort: \"hidden\",\n                            chart: \"hidden\"\n                        }\n                    })\n            break;\n\n            case \"sort\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"hidden\",\n                    games: \"hidden\",\n                    players: \"hidden\",\n                    sort: \"visible\",\n                    chart: \"hidden\"\n                }\n            })\n            break;\n\n            case \"chart\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"hidden\",\n                    games: \"hidden\",\n                    players: \"hidden\",\n                    sort: \"hidden\",\n                    chart: \"visible\"\n                }\n            })\n            break;\n\n            default:\n            return\n        }\n    }\n}\n\nexport const addPlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const removePlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const selectDateRange = (start, end) => dispatch => {\n    if (start === \"Invalid date\") {start = \"2000-01-01\"}\n    if (end === \"Invalid date\") {end = moment().format(\"YYYY-MM-DD\")}\n    dispatch({\n        type: SET_DATE_RANGE,\n        payload: {\n            from: start,\n            to: end\n        }\n    })\n}\n\nexport const toggleSortOptions = (tab, currentStatus, ascArrow) => dispatch => {\n    switch(tab){\n        case \"az\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_AZ_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"active\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"games\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GAMES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"active\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"wins\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_WINS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"active\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"losses\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_LOSSES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"active\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        \n        case \"ties\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_TIES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"active\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"goals\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GOALS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"active\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"gpg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GPG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"active\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"assists\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            }) \n\n        }\n        else {\n            dispatch({\n                type: SORT_ASSISTS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"active\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"apg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_APG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"active\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        break;\n\n        default:\n        return\n    }\n\n}\n\nexport const toggleSelectAll = (update) => dispatch => {\n    switch (update) {\n        case \"unselected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"selected_member\"}\n            })    \n        break;\n\n        case \"selected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"unselected_member\"}\n            })    \n        \n        break;\n\n        case \"unselected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"selected_non_member\"}\n            })    \n        break;\n\n        case \"selected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"unselected_non_member\"}\n            })    \n        break;\n\n        default:\n        return;\n    }\n}\n\nexport const batchCardUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CARD_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchChartUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CHART_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchUnselect = (type) => dispatch => {\n    dispatch({\n        type: BATCH_UNSELECT,\n        payload: type\n    })\n}\n\n// this handles when games are removed after the players. In this case, data needs to be re-initiated\n// we recreate the array of players\nexport const updatePlayers = (players) => dispatch => {\n    dispatch({\n        type: REPLACE_PLAYERS_RECORDS,\n        payload: players\n    })\n}\n// data is sent to the modal in showcase.js\nexport const togglePlayerModal = (newStatus, data) => dispatch => {\n    dispatch({\n        type: TOGGLE_PLAYER_MODAL,\n        payload: {\n            status: newStatus,\n            data: data\n        }\n    })\n}\n\nexport const selectAllGames = (status) => dispatch => {\n    dispatch({\n        type: BATCH_GAMES,\n        payload: status,\n    })\n}\n\nexport const unselectAllGames = () => dispatch => {\n    dispatch({\n        type: UNSELECT_ALL_GAMES,\n    })\n}\n\nexport const filterPlayerRecordsByType = (object) => dispatch => {\n    let operator;\n    let playerType;\n\n    if (object.offense === \"unselected\") {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"null\";\n                playerType = \"null\";\n            }\n            else {\n                operator = \"only\";\n                playerType = \"Goalie\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Defense\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Forward\"\n            }\n        }\n    }\n    else {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Forward\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Defense\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"but\"\n                playerType = \"Goalie\"\n            }\n            else {\n                operator = \"null\"\n                playerType = \"null\"\n            }\n        }\n\n    }\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_TYPE,\n        payload: {\n            operator: operator,\n            playerType: playerType,\n            playerFilters: object\n        }\n    })\n}\n\nexport const filterPlayerRecordsByGames = (object) => dispatch => {\n    console.log(\"object received in filterGames statsActions.js: \", object)\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_GAMES,\n        payload: object\n        })\n}","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGame } from '../../js/actions/gameActions'\nimport { getGamesAndTransform } from '../../js/actions/statsActions'\nimport { setVisibility } from '../../js/actions/statsActions'\n\nimport _ from \"underscore\"\n\nclass PastGameList extends Component {\n\n    componentDidMount() {\n        this.props.getGamesAndTransform();\n    }\n\n    toggleVisibility(currentStatus, num){\n        let newStatus;\n        if (currentStatus === \"visible\") {newStatus = \"hidden\"}\n        else { newStatus = \"visible\" }\n        \n        let visibleBefore = this.props.gameVisibility.slice(0, num)\n        let visibleAfter = this.props.gameVisibility.slice(num + 1)\n        let newArray = [...visibleBefore, newStatus, ...visibleAfter]\n        \n        this.props.setVisibility(newArray)\n        }\n\n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n        }\n\n    renderGames(object) {\n        return Object.values(object).map((game, i) => {\n            return (\n                <button key={game._id} className=\"btn past_game_button contrast_color\" onClick={()=> this.getGameInfo(game._id)}> {game._id} </button>\n                )\n            })\n        }\n\n    renderMonth(object) {\n        return Object.entries(Object.values(object)[0]).map(([key, value], i) => {\n            return (\n                <div key= {i}>\n                    <h3 className=\"h3_alternate\">{key}:</h3>\n\n                    {this.renderGames(value)}\n                </div>\n                )\n            })\n        }\n    \n    \n    renderYear(object) {\n        let reOrderedArray = _.sortBy(Object.values(object)).reverse()\n        return reOrderedArray.map((year, i) => {\n            return (\n                <div key={i}>\n                    <div>\n                        <h3 className=\"h3_main\">{ Object.keys(year)}</h3> \n                        <div className=\"hide_year_button\" onClick={()=> this.toggleVisibility(this.props.gameVisibility[i], i)}> {this.props.gameVisibility[i] === \"visible\" ? \"[hide]\" : \"[show]\" }</div>\n                    </div>\n                    <div className={this.props.gameVisibility ? this.props.gameVisibility[i] : null + \" games_per_year\"}>\n                        {this.renderMonth(year)} \n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"list_of_games\">\n                    <div>\n                        {this.renderYear(this.props.reducedGames)}\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    reducedGames: state.stats.reducedGames,\n    gameVisibility: state.stats.gameVisibility\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { getGamesAndTransform, setVisibility, getGame }) (PastGameList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { editGameInfo } from '../../js/actions/gameActions'\n// import { deletePlayer } from '../../../js/actions/playerActions'\n// import { editForm } from '../../../js/actions/playerActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nimport Locker from \"../Locker.js\"\n\nclass ScoreBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editScore: true,\n            changeLock: true\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    logStat(playerID, type, currentValue){\n        let gameId = this.props.game._id\n        switch (type){\n            case \"add_goal_dark\":\n            let goalUpdate = currentValue + 1;\n            let scoreUpdate = this.props.game.goals_dark + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_white:\n                this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"add_goal_white\":\n            goalUpdate = currentValue + 1;\n            scoreUpdate = this.props.game.goals_white + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_dark:\n                this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"substract_goal_dark\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_dark - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0) {\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_white:\n                    this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                    }\n                }\n            break;\n\n            case \"substract_goal_white\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_white - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0){\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                }\n                }\n            break;\n\n            case \"add_assist\":\n            let assistUpdate = currentValue + 1;\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n            break;\n\n            \n            case \"substract_assist\":\n            assistUpdate = currentValue - 1;\n            if (assistUpdate >= 0){\n                this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n                }\n            break;\n\n            default:\n            return;\n        }\n\n    }\n\n    render() {\n        return (\n            <span className=\"full\">\n                <div>\n                    <h1 className=\"h1_main\">{this.props.game._id}</h1>\n                    <div className=\"row tables_container\">\n                        <div className=\"col table_container\">\n                            <h1 className=\"h1_alternate\">Dark<br/>{this.props.game.goals_dark}</h1>\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th className=\"table_col_name\">Player</th> \n                                        <th className=\"table_col_name\">Goals</th>\n                                        <th className=\"table_col_name\">Assists</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.players ? (this.props.players\n                                        .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                        .map(player => {\n                                            return (\n                                                <tr className=\"stats_row\" key={player._id}> \n                                                    <td className=\"player_stats stats_name\">{player.name}\n                                                    </td>\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_dark\",player.gameInfo.goals)} /> : null }\n                                                            <div className={player.gameInfo.goals > 0 ? \"nice\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_dark\",player.gameInfo.goals)} />  : null }\n                                                        </div>\n                                                    </td>\n\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} />  : null }\n                                                            <div className={player.gameInfo.assists > 0 ? \"good\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus}  onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                )\n                                            })\n                                        ) : null\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"col table_container\">\n                                <h1 className=\"h1_alternate\">White<br/>{this.props.game.goals_white}</h1>\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            <th className=\"table_col_name\">Player</th> \n                                            <th className=\"table_col_name\">Goals</th>\n                                            <th className=\"table_col_name\">Assists</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.props.players ? (this.props.players\n                                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                            .map(player => {\n                                                return (\n                                                    <tr className=\"stats_row\" key={player._id}> \n                                                        <td className=\"player_stats stats_name\">{player.name}\n                                                        </td>\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_white\",player.gameInfo.goals)} /> : null }\n                                                                <div className={player.gameInfo.goals > 0 ? \"nice\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_white\",player.gameInfo.goals)} /> : null }\n                                                            </div>\n                                                        </td>\n\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} /> : null }\n                                                                <div className={player.gameInfo.assists > 0 ? \"good\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    )\n                                                })\n                                            ) : null\n                                            }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>    \n                    </div>    \n                {this.state.changeLock === true ? <Locker /> : null }\n        </span>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    game: state.games.draft,\n    players: state.games.draft.players,\n    lockStatus: state.games.lockStatus\n\n})\n\nexport default connect(mapStateToProps, { editGameInfo }) (ScoreBoard)\n","import React, { Component } from 'react';\n\nclass NoStatsBoard extends Component {\n    render(){\n        return (\n            <div className=\"no_stats_message\">\n                <p className=\"no_game\">The teams for this game have not been drafted yet. Please come back later!\n                </p>    \n            </div>\n        )\n    }\n}\n\nexport default NoStatsBoard;\n","import React, { Component } from \"react\";\n\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleVisibility } from \"../js/actions/statsActions\"\n\nimport NavBar from \"../components/NavBar\";\nimport PastGameList from \"../components/StatsPageComp/PastGamesList.js\"\nimport ScoreBoard from \"../components/StatsPageComp/ScoreBoard.js\"\nimport NoStatsBoard from \"../components/StatsPageComp/NoStatsBoard.js\"\n\nimport \"../styles/css/stats.css\";\n\nclass Stats extends Component {         \nrender() {\n    return (\n        <div>\n            <NavBar />\n            <div className=\"main_main\">\n                    <h1 className=\"h1_main\">Enter Stats</h1>\n                <div className= \"row \">\n                    <PastGameList />\n                </div>\n            </div>\n            {this.props.visibility.noStatsMessage === \"visible\" ? (\n\n                    <div className={\"main_main \" + this.props.visibility.noStatsMessage}>\n                        <div className= \"row \">\n                            <NoStatsBoard />\n                        </div>\n                    </div>\n                ) : (\n\n                    <div className={\"main_main \" + this.props.visibility.gameStats}>\n                        <div className= \"row \">\n                            <ScoreBoard />\n                        </div>\n                    </div>\n\n                )\n            }\n            \n        </div>\n    \n    )\n    }\n}\n\n// export default Stats\nconst mapStateToProps = state => ({\n    visibility: state.games.visibility,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleVisibility } ) (Stats)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { selectDateRange } from \"../../js/actions/statsActions\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nconst moment = require(\"moment\");\nclass DateRange extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChangeStart(date) {\n        this.setState({\n            startDate: date\n        })\n    }\n\n    handleChangeEnd(date) {\n        this.setState({\n            endDate: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let startDate = moment(this.state.startDate).format(\"YYYY-MM-DD\")\n        let endDate = moment(this.state.endDate).format(\"YYYY-MM-DD\")\n        this.props.selectDateRange(startDate, endDate)\n    }\n\n\n    render() {\n        return (\n            <div className={\"records_calendar \" + this.props.datePickers}>\n                <div className=\"calendar_alignment\">\n                    <form onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                        <DatePicker\n                            placeholderText=\"From: MM DD YYYY\"\n                            selected={this.state.startDate}\n                            selectsStart\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeStart}\n                            isClearable={true}\n                        />\n\n                        <DatePicker\n                            placeholderText=\"To:     MM DD YYYY\"\n                            selected={this.state.endDate}\n                            selectsEnd\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeEnd}\n                            isClearable={true}\n                        />\n                            <div className=\"date_range_options\">\n                                <button id=\"range_submit\" className=\"content_button btn contrast_color\" name=\"submit\" type=\"submit\" >Submit</button>\n                            </div>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    datePickers: state.stats.datePickers\n    })\n\n\nexport default connect(mapStateToProps, { selectDateRange }) (DateRange)\n    ","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport DateRange from \"./DateRange\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass DateSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"dates\")\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.datePickers)}> {this.props.datePickers === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Dates</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className={\"date_pickers \" + this.props.datePickers}>\n                            <div className={\"calendar_container \" + this.props.datePickers}>\n                                <DateRange />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    allGames: state.stats.gamesForRecords,\n    datePickers: state.stats.datePickers,\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, toggleViews }) (DateSelector)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { selectGame } from '../../js/actions/statsActions'\nimport { unselectGame } from '../../js/actions/statsActions'\nimport { selectAllGames } from '../../js/actions/statsActions'\nimport { unselectAllGames } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { updatePlayers } from '../../js/actions/statsActions'\nimport { batchChartUpdate } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass GameSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    unselectGame(game) {\n        this.props.unselectGame(game)\n        /* Adapting the reducer from Player selector to re-create an array of playerRecords after game has been deleted */\n        let playersForRecords = []\n        // if the game is added after players have been selected\n            if (this.props.selectedPlayers.length > 0) {\n                this.props.selectedPlayers.forEach((broomballer) => {\n                // re-filter the game array removing the game unselected\n                let gamesPlayed = this.props.selectedGames.filter(match => match._id !== game._id).filter(game => game.players.filter(player => player._id === broomballer._id )[0])\n                if (gamesPlayed.length > 0) {\n                    let playerReduced = gamesPlayed.reduce((players, game) => {\n                        let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                        let win;\n                        let available;\n                        players.name = broomballer.name\n                        players._id = broomballer._id\n                        players.membershipStatus = broomballer.membershipStatus\n                        players.preferredPosition = broomballer.preferredPosition\n                        \n                        players.gamesPlayed = players.gamesPlayed || []\n                        if(gameInfo[0].available === true){\n                            available= 1\n                            players.gamesPlayed.push(available)\n                        }\n                        \n                        players.goals = players.goals || []\n                        if(gameInfo[0].available === true) {\n                            players.goals.push(gameInfo[0].goals)\n                        }\n                        \n                        players.assists = players.assists || []\n                        if (gameInfo[0].available === true) {\n                            players.assists.push(gameInfo[0].assists)\n                        }\n                        \n                        players.wins = players.wins || []\n                        if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                            win= \"Win\"\n                            players.wins.push(win)\n                        }\n                        \n                        players.losses = players.losses || []\n                        if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                            let loss= \"Loss\"\n                            players.losses.push(loss)\n                        }\n\n                        players.ties = players.ties || []\n                        if(gameInfo[0].available === true && game.win === \"Tie\"){\n                            let tie= \"Tie\"\n                            players.ties.push(tie)\n                        }\n\n                        return players\n                        }, {});\n                        // this line errors if the player is a ten-bucker who didn't play in the remaining games\n                        let gamePlayedFromArray = playerReduced.gamesPlayed ? playerReduced.gamesPlayed.length : 0 \n                        let winsFromArray = playerReduced.wins.length\n                        let lossesFromArray = playerReduced.losses.length\n                        let tiesFromArray = playerReduced.ties.length\n                        let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let goalsFromArray = playerReduced.goals ? playerReduced.goals.reduce((a,b) => a + b, 0) : 0\n                        let assistsFromArray = playerReduced.assists ? playerReduced.assists.reduce((a, b) => a + b, 0) : 0\n                        let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                        let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n\n                        playerReduced.gamesPlayed = gamePlayedFromArray\n                        playerReduced.wins = winsFromArray\n                        playerReduced.losses = lossesFromArray\n                        playerReduced.ties = tiesFromArray\n                        playerReduced.winPercent = winPercent\n                        playerReduced.lossPercent = lossPercent\n                        playerReduced.tiePercent = tiePercent\n                        playerReduced.goals = goalsFromArray \n                        playerReduced.assists = assistsFromArray\n                        if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                        if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n                        \n            \n                        playersForRecords.push(playerReduced)\n                        }\n                        else {\n                            let playerWithoutRecord = {\n                                name: broomballer.name,\n                                gamesPlayed: 0,\n                                goals: \"N/A\",\n                                assists: \"N/A\",\n                                membershipStatus: broomballer.membershipStatus,\n                                winPercent: \"N/A\",\n                                lossPercent: \"N/A\",\n                                tiePercent: \"N/A\",\n                                win: \"N/A\",\n                                loss: \"N/A\",\n                                tie: \"N/A\",\n                                gpg: \"N/A\",\n                                apg: \"N/A\",\n                                _id: broomballer._id\n                            }\n                            // we do not want to create empty cards if zero games are selected\n                            if(this.props.selectedGames.length -1 > 0) {\n                                playersForRecords.push(playerWithoutRecord)\n                            }\n                    }\n                this.props.updatePlayers( playersForRecords )\n                })\n            }\n    }\n    \n    gameSelection(arrayOfGames) {\n        // this function takes an array of games so that it can be used for both individual and batch select\n        // this array is all the games for which records need to be created. \n        \n        // marks the selected games as such \n        arrayOfGames.forEach(game => this.markAsSelected(game))\n        // need a function that marks non selected games as such\n        \n        /*  Adapting the reducer originally created in PlayerSelector */\n        let transformedArrayForCards = []\n        // if the game is added after players have been selected\n            if (this.props.selectedPlayers.length > 0) {\n                // We will create record for each player * each game selected\n                this.props.selectedPlayers.forEach((broomballer) => {\n                // we map/filter all games selected to create record for each game played. If the player didn't play any game, we create an empty \"N/A\" record instead\n                let gamesPlayed = arrayOfGames.filter(game => game.players.filter(player => player._id === broomballer._id )[0])\n                // If the broomballer played any game \n                if (gamesPlayed.length > 0) {\n                    let playerReduced = gamesPlayed.reduce((players, game) => {\n                        let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                        let win;\n                        let available;\n                        players.name = broomballer.name\n                        players._id = broomballer._id\n                        players.membershipStatus = broomballer.membershipStatus\n                        players.preferredPosition = broomballer.preferredPosition\n                        \n                        players.gamesPlayed = players.gamesPlayed || []\n                        if(gameInfo[0].available === true){\n                            available = 1\n                            players.gamesPlayed.push(available)\n                        }\n                        \n                        players.goals = players.goals || []\n                        if(gameInfo[0].available === true) {\n                            players.goals.push(gameInfo[0].goals)\n                        }\n                        \n                        players.assists = players.assists || []\n                        if (gameInfo[0].available === true) {\n                            players.assists.push(gameInfo[0].assists)\n                        }\n                        \n                        players.wins = players.wins || []\n                        if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                            win= \"Win\"\n                            players.wins.push(win)\n                        }\n\n                        players.losses = players.losses || []\n                        if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                            let loss= \"Loss\"\n                            players.losses.push(loss)\n                        }\n\n                        players.ties = players.ties || []\n                        if(gameInfo[0].available === true && game.win === \"Tie\"){\n                            let tie= \"Tie\"\n                            players.ties.push(tie)\n                        }\n                    \n                        return players\n                        }, {});\n                        \n                        let gamePlayedFromArray = playerReduced.gamesPlayed ? playerReduced.gamesPlayed.length : 0 \n                        let winsFromArray = playerReduced.wins.length\n                        let lossesFromArray = playerReduced.losses.length\n                        let tiesFromArray = playerReduced.ties.length\n                        let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                        let goalsFromArray = playerReduced.goals ? playerReduced.goals.reduce((a,b) => a + b, 0) : 0\n                        let assistsFromArray = playerReduced.assists ? playerReduced.assists.reduce((a, b) => a + b, 0) : 0\n                        let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                        let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n\n                        playerReduced.gamesPlayed = gamePlayedFromArray\n                        playerReduced.wins = winsFromArray\n                        playerReduced.losses = lossesFromArray\n                        playerReduced.ties = tiesFromArray\n                        playerReduced.winPercent = winPercent\n                        playerReduced.lossPercent = lossPercent\n                        playerReduced.tiePercent = tiePercent\n                        playerReduced.goals = goalsFromArray \n                        playerReduced.assists = assistsFromArray\n                        if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                        if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n                        \n                        transformedArrayForCards.push(playerReduced)\n                    }    \n                else {\n                    let playerWithoutRecord = {\n                        name: broomballer.name,\n                        gamesPlayed: 0,\n                        goals: \"N/A\",\n                        assists: \"N/A\",\n                        membershipStatus: broomballer.membershipStatus,\n                        winPercent: \"N/A\",\n                        lossPercent: \"N/A\",\n                        tiePercent: \"N/A\",\n                        win: \"N/A\",\n                        loss: \"N/A\",\n                        tie: \"N/A\",\n                        gpg: \"N/A\",\n                        apg: \"N/A\",\n                        _id: broomballer._id\n                    }\n                    transformedArrayForCards.push(playerWithoutRecord)\n                }\n            })        \n            // preventing the data to send before the array is complete\n            if (transformedArrayForCards.length === this.props.selectedPlayers.length) {\n                this.props.updatePlayers( transformedArrayForCards )\n                this.replaceBatchChartData( transformedArrayForCards )\n                }\n            }\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"games\")\n    }\n\n    replaceBatchChartData(arrayOfPlayers) {\n        let labels = []\n        let goalsArray = []\n        let assistsArray = []\n        let gamesPlayedArray = []\n        let winPercentArray = []\n        let lossPercentArray = []\n        let tiePercentArray = []\n        let gpgArray = []\n        let apgArray = []\n        arrayOfPlayers.forEach(e => {\n            labels.push(e.name);\n            goalsArray.push(e.goals);\n            assistsArray.push(e.assists);\n            gamesPlayedArray.push(e.gamesPlayed);\n            winPercentArray.push(e.winPercent);\n            lossPercentArray.push(e.lossPercent);\n            tiePercentArray.push(e.tiePercent);\n            gpgArray.push(e.gpg);\n            apgArray.push(e.apg);\n        })\n\n        let newObject = {\n            labels: labels,\n            datasets: [\n                // This is causing performance issues (reduxDevTools crashing)\n                /*{...this.props.chartData.datasets[0], data: goalsArray},\n                {...this.props.chartData.datasets[1], data: assistsArray},\n                {...this.props.chartData.datasets[2], data: gamesPlayedArray},\n                {...this.props.chartData.datasets[3], data: winPercentArray},\n                {...this.props.chartData.datasets[4], data: lossPercentArray},\n                {...this.props.chartData.datasets[5], data: tiePercentArray},\n                {...this.props.chartData.datasets[6], data: gpgArray},\n                {...this.props.chartData.datasets[7], data: apgArray}*/\n                // we are reinitializing the \"metadata\" instead\n                {\n                    label: \"Goals\",\n                    data: goalsArray,\n                    backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                    hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                },\n                {\n                    label: \"Assists\",\n                    data: assistsArray,\n                    backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Games\",\n                    data: gamesPlayedArray,\n                    backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                    hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Wins (%)\",\n                    data: winPercentArray,\n                    backgroundColor: 'rgba(75,192,192,0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                    hoverBorderColor: 'rgba(75,192,192,0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Losses (%)\",\n                    data: lossPercentArray,\n                    backgroundColor: '#d3b8ae',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: '#d3b8ae',\n                    hoverBorderColor: '#d3b8ae',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Ties (%)\",\n                    data: tiePercentArray,\n                    backgroundColor: '#ff8a65',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: '#ff8a65',\n                    hoverBorderColor: '#ff8a65',\n                    barThickness: 15,\n                },\n                {\n                    label: \"GPG\",\n                    data: gpgArray,\n                    backgroundColor: 'rgba(153,102,255,0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                    hoverBorderColor: 'rgba(153,102,255,0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"APG\",\n                    data: apgArray,\n                    backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                    hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                    options: {barThickness: 100},\n                },\n                ]\n        }\n        this.props.batchChartUpdate(newObject)\n    }\n\n    selectAllGames(status){\n        this.props.selectAllGames(status)\n        // we send the whole array of games in the time span to the gameSelection function\n        this.gameSelection(this.props.gamesForRecords)\n        \n    }\n    unselectAllGames(){\n        this.props.unselectAllGames()\n        this.props.gamesForRecords.forEach(game => this.props.unselectGame(game))\n        this.gameSelection([])\n    }\n    // When we hit the \"Select All Games\", we need to make sure the game has not already been selected\n    // otherwise it might be sent twice \n    markAsSelected(game) {\n        let arrayOfIds = this.props.selectedGames.map(gamesSelected => gamesSelected._id)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.selectGame(game)\n        }\n    }\n\n    markAsUnselected(game) {\n        let arrayOfIds = this.props.unselectedGames.map(gamesUnselected => gamesUnselected._id)\n        console.log(\"ids of games already unselected: \", arrayOfIds)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.unselectGame(game)\n        }\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfGames)}> {this.props.listOfGames === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Games</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                    <div className={this.props.listOfGames + \" select_all\"}>\n                            <div className=\"button_options_third_set\">\n                                {this.props.allGamesSelection === \"unselected_game\" ? \n                                    <button className={\"btn record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.selectAllGames(this.props.allGamesSelection)}> Select All Games <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>\n                                    :\n                                    <button className={\"btn record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.unselectAllGames()}> Select All Games <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>\n                                }\n                            </div>\n                            \n                        </div>\n\n                        <div className={\"record_list_of_games \" + this.props.listOfGames}>\n                                {this.props.gamesForRecords.length > 0 ?\n                                    this.props.gamesForRecords\n                                    .map(game => this.props.selectedGames.indexOf(game) === -1 ? \n                                    (<button key={game._id} className=\"btn unselected_game record_game_button\" onClick={() => this.gameSelection([game, ...this.props.selectedGames])}> {game._id} <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>)\n                                    : \n                                    (<button key={game._id} className=\"btn selected_game record_game_button\" onClick={() => this.unselectGame(game)}> {game._id} <FontAwesomeIcon icon=\"times\" className=\"game_action_icon\"/> </button>)\n                                )\n                                : <p className=\"no_game\">There is currently no game to display</p> \n                            }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    unselectedGames: state.stats.unselectedGames,\n    gamesForRecords: state.stats.gamesForRecords, \n    listOfGames: state.stats.listOfGames, // to toggle the visibility\n    selectedPlayers: state.stats.selectedPlayers,\n    chartData: state.stats.chartData,\n    allGamesSelection: state.stats.allGamesSelection\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, selectGame, unselectGame, selectAllGames, unselectAllGames, toggleViews, updatePlayers, batchChartUpdate }) (GameSelector)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { selectPlayer } from '../../js/actions/statsActions'\nimport { unselectPlayer } from '../../js/actions/statsActions'\n// This adds a player to the playerRecords array\nimport { addPlayerStatObject } from \"../../js/actions/statsActions\"\nimport { removePlayerStatObject } from \"../../js/actions/statsActions\"\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { toggleSelectAll } from '../../js/actions/statsActions'\n// this replaces all the records in the playerRecords array\nimport { updatePlayers } from '../../js/actions/statsActions'\n// this merges newly created records with already existing records in the playerRecords array\nimport { batchCardUpdate } from '../../js/actions/statsActions'\n// this is used to send data to the chartData object from which data is pulled to create the chart\nimport { batchChartUpdate } from '../../js/actions/statsActions'\nimport { batchUnselect } from '../../js/actions/statsActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass PlayerSelector extends Component {\n\n    componentDidMount() {\n        this.props.fetchPlayers();\n    }\n    // unselect individual players (by way of slicing the existing arrays of data)\n    unselectPlayer(player) {\n        this.props.unselectPlayer(player)\n        this.props.removePlayerStatObject(player)\n        // removing the player from the chart dataset\n        let indexOfRemovedPlayer = this.props.chartData.labels.indexOf(player.name)\n        // removing all the info for this player. We need a new array\n        let newLabels = this.props.chartData.labels.slice(0,indexOfRemovedPlayer).concat(this.props.chartData.labels.slice(indexOfRemovedPlayer + 1))\n        \n        let newGoals = this.props.chartData.datasets[0].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[0].data.slice(indexOfRemovedPlayer + 1));\n        let newAssists = this.props.chartData.datasets[1].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[1].data.slice(indexOfRemovedPlayer + 1));\n        let newGames = this.props.chartData.datasets[2].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[2].data.slice(indexOfRemovedPlayer + 1));\n        let newWins = this.props.chartData.datasets[3].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[3].data.slice(indexOfRemovedPlayer + 1));\n        let newLosses = this.props.chartData.datasets[4].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[4].data.slice(indexOfRemovedPlayer + 1));\n        let newTies = this.props.chartData.datasets[5].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[5].data.slice(indexOfRemovedPlayer + 1));\n        let newGpg = this.props.chartData.datasets[6].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[6].data.slice(indexOfRemovedPlayer + 1));\n        let newApg = this.props.chartData.datasets[7].data.slice(0, indexOfRemovedPlayer).concat(this.props.chartData.datasets[7].data.slice(indexOfRemovedPlayer + 1));\n        \n        let newData = {\n            labels: newLabels,\n            datasets: [\n                {...this.props.chartData.datasets[0], data: newGoals}, // goals\n                {...this.props.chartData.datasets[1], data: newAssists}, // assists\n                {...this.props.chartData.datasets[2], data: newGames}, // Games\n                {...this.props.chartData.datasets[3], data: newWins}, // wins\n                {...this.props.chartData.datasets[4], data: newLosses}, // Losses\n                {...this.props.chartData.datasets[5], data: newTies}, // Ties\n                {...this.props.chartData.datasets[6], data: newGpg}, // gpg\n                {...this.props.chartData.datasets[7], data: newApg}, // apg\n                ]\n        }\n\n        this.props.batchChartUpdate(newData)\n\n    }\n    // select individual player\n    // if duplicate, see how to remove\n    selectPlayer(broomballer) {\n        let arrayOfplayer = []\n        this.markAsSelected(broomballer)\n        let gamesPlayed = this.props.selectedGames.filter(game => game.players.filter(player => player._id === broomballer._id )[0])\n        if (gamesPlayed.length > 0) {\n            let playerReduced = gamesPlayed.reduce((players, game) => {\n                let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                let win;\n                let available;\n                players.name = broomballer.name\n                players._id = broomballer._id\n                players.membershipStatus = broomballer.membershipStatus\n                players.preferredPosition = broomballer.preferredPosition\n                \n                players.gamesPlayed = players.gamesPlayed || []\n                if(gameInfo[0].available === true){\n                    available= 1\n                    players.gamesPlayed.push(available)\n                }\n                \n                players.goals = players.goals || []\n                if(gameInfo[0].available === true) {\n                    players.goals.push(gameInfo[0].goals)\n                }\n                \n                players.assists = players.assists || []\n                if (gameInfo[0].available === true) {\n                    players.assists.push(gameInfo[0].assists)\n                }\n                \n                players.wins = players.wins || []\n                if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                    win= \"Win\"\n                    players.wins.push(win)\n                }\n\n                players.losses = players.losses || []\n                if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                    let loss= \"Loss\"\n                    players.losses.push(loss)\n                }\n\n                players.ties = players.ties || []\n                if(gameInfo[0].available === true && game.win === \"Tie\"){\n                    let tie= \"Tie\"\n                    players.ties.push(tie)\n                }\n                \n                return players\n                }, {});\n                    \n            let gamePlayedFromArray = playerReduced.gamesPlayed.length\n            let winsFromArray = playerReduced.wins.length\n            let lossesFromArray = playerReduced.losses.length\n            let tiesFromArray = playerReduced.ties.length\n            let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n            let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n            let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n            let goalsFromArray = playerReduced.goals.reduce((a,b) => a + b, 0)\n            let assistsFromArray = playerReduced.assists.reduce((a, b) => a + b, 0)\n            let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n            let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n            \n            playerReduced.gamesPlayed = gamePlayedFromArray\n            playerReduced.wins = winsFromArray\n            playerReduced.losses = lossesFromArray\n            playerReduced.ties = tiesFromArray\n            // If the numbers are not integers, they are truncated \n            playerReduced.winPercent = winPercent\n            playerReduced.lossPercent = lossPercent\n            playerReduced.tiePercent = tiePercent\n            playerReduced.goals = goalsFromArray \n            playerReduced.assists = assistsFromArray\n            if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n            if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n            this.props.addPlayerStatObject( playerReduced )\n            arrayOfplayer.push(playerReduced)\n            }\n            else {\n                let playerWithoutRecord = {\n                    name: broomballer.name,\n                    gamesPlayed: 0,\n                    goals: \"N/A\",\n                    assists: \"N/A\",\n                    membershipStatus: broomballer.membershipStatus,\n                    winPercent: \"N/A\",\n                    lossPercent: \"N/A\",\n                    tiePercent: \"N/A\",\n                    win: \"N/A\",\n                    loss: \"N/A\",\n                    tie: \"N/A\",\n                    gpg: \"N/A\",\n                    apg: \"N/A\",\n                    _id: broomballer._id\n                }\n                this.props.addPlayerStatObject(playerWithoutRecord)\n                arrayOfplayer.push(playerWithoutRecord)\n            }\n            this.addBatchChartData(arrayOfplayer)\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"players\")\n    }\n    // calling the \"individual\" functions repeatedly makes redux (and redux devtool) fail & Chrome lag. For this reason, we create separate functions that will handle updates on the whole array. \n    // This dispatcher sends data to the function that will handle it.\n    selectAllPlayers(playerUpdate){\n        switch (playerUpdate) {\n            case \"unselected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // we need to add both all members + non-members already selected for we are going to replace all existing records\n            let allMembersAndSelectedTenBuckers = this.props.allPlayers.filter(player => player.membershipStatus === \"Member\").concat(this.props.selectedPlayers.filter(player => player.membershipStatus !== \"Member\"))\n            this.selectAndTransform(allMembersAndSelectedTenBuckers, \"select\")\n            break;\n\n            case \"selected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Member\")\n            break;\n\n            case \"unselected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // Adding both all ten buckers (who have played one of possible games) + non-members already selected\n            let allTenBuckersAndSelectedMembers = this.props.allPlayers.filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id)).concat(this.props.selectedPlayers.filter(player => player.membershipStatus === \"Member\"))\n            this.selectAndTransform(allTenBuckersAndSelectedMembers, \"select\")\n            break;\n\n            case \"selected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Ten Bucker\")\n            break;\n\n            default:\n            return;\n        }\n    }\n    // this function marks all players in the array as selected (via this.markAsSelected), creates an array of objects in the playerRecords reducer, \n    // and sends data to be handled by setChartData accordingly (=> selected players are created properly for Chartjs package)\n    selectAndTransform(array, type) {\n        let transformedArrayForCards = []\n            array.forEach(broomballer => {\n                let gamesPlayed = this.props.selectedGames.filter(game => game.players.filter(player => player._id === broomballer._id )[0])\n                if (type === \"select\") { this.markAsSelected(broomballer)}\n                if (gamesPlayed.length > 0) {\n                let playerReduced = gamesPlayed.reduce((players, game) => {\n                    let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                    players.name = broomballer.name\n                    players._id = broomballer._id\n                    players.membershipStatus = broomballer.membershipStatus\n                    players.preferredPosition = broomballer.preferredPosition\n                    \n                    players.gamesPlayed = players.gamesPlayed || []\n                    if(gameInfo[0].available === true){\n                        let available = 1\n                        players.gamesPlayed.push(available)\n                    }\n                    \n                    players.goals = players.goals || []\n                    if(gameInfo[0].available === true) {\n                        players.goals.push(gameInfo[0].goals)\n                    }\n                    \n                    players.assists = players.assists || []\n                    if (gameInfo[0].available === true) {\n                        players.assists.push(gameInfo[0].assists)\n                    }\n                    \n                    players.wins = players.wins || []\n                    if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                        let win= \"Win\"\n                        players.wins.push(win)\n                    }\n\n                    players.losses = players.losses || []\n                    if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                        let loss= \"Loss\"\n                        players.losses.push(loss)\n                    }\n\n                    players.ties = players.ties || []\n                    if(gameInfo[0].available === true && game.win === \"Tie\"){\n                        let tie= \"Tie\"\n                        players.ties.push(tie)\n                    }\n\n                    return players\n                    }, {});\n                let gamePlayedFromArray = playerReduced.gamesPlayed.length\n                let winsFromArray = playerReduced.wins.length\n                let lossesFromArray = playerReduced.losses.length\n                let tiesFromArray = playerReduced.ties.length\n                let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let goalsFromArray = playerReduced.goals.reduce((a,b) => a + b, 0)\n                let assistsFromArray = playerReduced.assists.reduce((a, b) => a + b, 0)\n                let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n                \n                playerReduced.gamesPlayed = gamePlayedFromArray\n                // should also store the arrays for stats purposes... ?\n                playerReduced.wins = winsFromArray\n                playerReduced.losses = lossesFromArray\n                playerReduced.ties = tiesFromArray\n                playerReduced.winPercent = winPercent\n                playerReduced.lossPercent = lossPercent\n                playerReduced.tiePercent = tiePercent\n                playerReduced.goals = goalsFromArray \n                playerReduced.assists = assistsFromArray\n                if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n\n                transformedArrayForCards.push( playerReduced )\n                }\n                else {\n                    let playerWithoutRecord = {\n                        name: broomballer.name,\n                        gamesPlayed: 0,\n                        goals: \"N/A\",\n                        assists: \"N/A\",\n                        membershipStatus: broomballer.membershipStatus,\n                        winPercent: \"N/A\",\n                        lossPercent: \"N/A\",\n                        tiePercent: \"N/A\",\n                        win: \"N/A\",\n                        loss: \"N/A\",\n                        tie: \"N/A\",\n                        gpg: \"N/A\",\n                        apg: \"N/A\",\n                        _id: broomballer._id\n                    }\n                    transformedArrayForCards.push( playerWithoutRecord )\n                }\n            })\n            // if the type is \"select\", the function will add the players to the existing records for chart (via addBatchChartData)\n            // otherwise, it will remove and replace them via the replace BatchChartData\n            if (type === \"select\") {\n                this.props.updatePlayers(transformedArrayForCards)\n                this.addBatchChartData(transformedArrayForCards)\n                }\n            else if (type === \"unselect\") {\n                this.replaceBatchChartData( transformedArrayForCards )\n            }\n    }\n    // this handles unselecting players depending on the membership type sent\n    batchUnselect(type){\n        this.props.batchUnselect(type);\n        this.props.selectedPlayers.filter(player => player.membershipStatus === type).forEach(broomballer => this.unselectPlayer(broomballer));\n        this.selectAndTransform(this.props.selectedPlayers.filter(player => player.membershipStatus !== type), \"unselect\")\n    }\n    // this is how we initialize what is sent to chartData. The index of the array of objects in the datasets nested object comes from the reducer, and needs to stay consistent across functions (0 = Goals object, 1 = Assist object, etc.)\n    addBatchChartData(arrayOfPlayers) {\n        let labels = []\n        let goalsArray = []\n        let assistsArray = []\n        let gamesPlayedArray = []\n        let winPercentArray = []\n        let lossPercentArray = []\n        let tiePercentArray = []\n        let gpgArray = []\n        let apgArray = []\n        arrayOfPlayers.forEach(e => {\n            labels.push(e.name);\n            goalsArray.push(e.goals);\n            assistsArray.push(e.assists);\n            gamesPlayedArray.push(e.gamesPlayed);\n            winPercentArray.push(e.winPercent);\n            lossPercentArray.push(e.lossPercent);\n            tiePercentArray.push(e.tiePercent);\n            gpgArray.push(e.gpg);\n            apgArray.push(e.apg);\n        })\n\n        let newObject = {\n            labels: labels.concat(this.props.chartData.labels),\n            // For performance reason, it is better to re-initiate the data than to use the ... operator to merge new with existing\n            datasets: [\n                {\n                    label: \"Goals\",\n                    data: goalsArray.concat(this.props.chartData.datasets[0].data),\n                    backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                    hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                },\n                {\n                    label: \"Assists\",\n                    data: assistsArray.concat(this.props.chartData.datasets[1].data),\n                    backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                    hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Games\",\n                    data: gamesPlayedArray.concat(this.props.chartData.datasets[2].data),\n                    backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                    hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Wins (%)\",\n                    data: winPercentArray.concat(this.props.chartData.datasets[3].data),\n                    backgroundColor: 'rgba(75,192,192,0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                    hoverBorderColor: 'rgba(75,192,192,0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Losses (%)\",\n                    data: lossPercentArray.concat(this.props.chartData.datasets[4].data),\n                    backgroundColor: '#d3b8ae',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: '#d3b8ae',\n                    hoverBorderColor: '#d3b8ae',\n                    barThickness: 15,\n                },\n                {\n                    label: \"Ties (%)\",\n                    data: tiePercentArray.concat(this.props.chartData.datasets[5].data),\n                    backgroundColor: '#ff8a65',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: '#ff8a65',\n                    hoverBorderColor: '#ff8a65',\n                    barThickness: 15,\n                },\n                {\n                    label: \"GPG\",\n                    data: gpgArray.concat(this.props.chartData.datasets[6].data),\n                    backgroundColor: 'rgba(153,102,255,0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                    hoverBorderColor: 'rgba(153,102,255,0.6)',\n                    barThickness: 15,\n                },\n                {\n                    label: \"APG\",\n                    data: apgArray.concat(this.props.chartData.datasets[7].data),\n                    backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                    borderColor: 'rgba(172,173,178,1)',\n                    borderWidth: 1,\n                    hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                    hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                    options: {barThickness: 100},\n                },\n                ]\n        }\n        this.props.batchChartUpdate(newObject)\n    }\n\n    replaceBatchChartData(arrayOfPlayers) {\n        let labels = []\n        let goalsArray = []\n        let assistsArray = []\n        let gamesPlayedArray = []\n        let winPercentArray = []\n        let lossPercentArray = []\n        let tiePercentArray = []\n        let gpgArray = []\n        let apgArray = []\n        arrayOfPlayers.forEach(e => {\n            labels.push(e.name);\n            goalsArray.push(e.goals);\n            assistsArray.push(e.assists);\n            gamesPlayedArray.push(e.gamesPlayed);\n            winPercentArray.push(e.winPercent);\n            lossPercentArray.push(e.lossPercent);\n            tiePercentArray.push(e.tiePercent);\n            gpgArray.push(e.gpg);\n            apgArray.push(e.apg);\n        })\n\n        let newObject = {\n            labels: labels,\n            datasets: [\n                {...this.props.chartData.datasets[0], data: goalsArray},\n                {...this.props.chartData.datasets[1], data: assistsArray},\n                {...this.props.chartData.datasets[2], data: gamesPlayedArray},\n                {...this.props.chartData.datasets[3], data: winPercentArray.concat(this.props.chartData.datasets[3].data)},\n                {...this.props.chartData.datasets[4], data: lossPercentArray.concat(this.props.chartData.datasets[4].data)},\n                {...this.props.chartData.datasets[5], data: tiePercentArray.concat(this.props.chartData.datasets[5].data)},\n                {...this.props.chartData.datasets[6], data: gpgArray.concat(this.props.chartData.datasets[6].data)},\n                {...this.props.chartData.datasets[7], data: apgArray.concat(this.props.chartData.datasets[7].data)}\n                ]\n        }\n        this.props.batchChartUpdate(newObject)\n    }\n\n    // Before sending the player to the selectPlayer action that will add it to the selectedPlayers array, we need to make sure the record does not already exist\n    // in that array (we might accidentally send twice via the batch select that consolidates before re-sending to playerRecords array). Otherwise, it creates \n    // problems with duplicate keys in React\n    markAsSelected(player) {\n        let arrayOfIds = this.props.selectedPlayers.map(broomballer => broomballer._id)\n        if ( !arrayOfIds.includes(player._id) ){\n            this.props.selectPlayer(player)\n        }\n    }\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfPlayers)}> {this.props.listOfPlayers === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Players</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className={this.props.listOfPlayers + \" select_all\"}>\n                            <div className=\"button_options_first_set\">\n                                <button className={\"btn record_player_button all_button \" + this.props.memberSelection} onClick={() => this.selectAllPlayers(this.props.memberSelection)}> {this.props.memberSelection === \"unselected_member\" ? \"Select\" : \"Unselect\"} All Members </button>\n                                <button className={\"btn record_player_button all_button \" + this.props.tenBuckerSelection} onClick={() => this.selectAllPlayers(this.props.tenBuckerSelection)}> {this.props.tenBuckerSelection === \"unselected_non_member\" ? \"Select\" : \"Unselect\"} All Ten Buckers </button>\n                            </div>\n                            \n                        </div>\n                        <div className={\"list_of_players \" + this.props.listOfPlayers}>\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus === \"Member\")\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"btn unselected_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"btn selected_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id))\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"btn unselected_non_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"btn selected_non_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    unselectedPlayers: state.stats.unselectedPlayers,\n    memberSelection: state.stats.memberSelection,\n    tenBuckerSelection: state.stats.tenBuckerSelection,\n    allPlayers: state.players.players,\n    arrayOfTenBuckersID: state.stats.arrayOfTenBuckersID,\n    listOfPlayers: state.stats.listOfPlayers,\n    chartData: state.stats.chartData,\n})\n\nexport default connect(mapStateToProps, {   \n        fetchPlayers, \n        selectPlayer, \n        unselectPlayer, \n        toggleViews, \n        addPlayerStatObject, \n        removePlayerStatObject, \n        // sendDataToChart, \n        toggleSelectAll, \n        batchCardUpdate, \n        batchChartUpdate, \n        batchUnselect, \n        updatePlayers \n    }) (PlayerSelector)\n","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nimport { Line } from \"react-chartjs-2\";\n\nimport { connect } from 'react-redux';\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\n\nclass PlayerStatsModal extends Component {\n    \n    render() {\n        return (\n            <div className=\"player_modal\">\n                <Modal isOpen={this.props.playerModal} toggle={this.toggle} centered={true} size={\"lg\"}>\n                    <ModalHeader className=\"modal_header\"> {this.props.playerModalData.name} </ModalHeader>\n                    <ModalBody>\n                        <Line\n                            data={this.props.playerModalData.data}\n                            options={{\n                                    responsive: true,\n                                    maintainAspectRatio: false,\n                                    }}\n                            />\n                    </ModalBody>\n                    <ModalFooter>\n                        <button className=\"contrast_color content_button\" onClick={()=> this.props.togglePlayerModal(false, {name: \"\", data:{}})}> Close </button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    playerModal: state.stats.playerModal,\n    playerModalData: state.stats.playerModalData\n})\n\nexport default connect(mapStateToProps, { togglePlayerModal }) (PlayerStatsModal)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { toggleViews } from \"../../js/actions/statsActions\"\nimport { toggleSortOptions } from \"../../js/actions/statsActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\nimport PlayerStatsModal from \"./PlayerStatsModal\"\n\nimport _ from \"underscore\"\n\n\nclass Showcase extends Component {\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    toggleSort(tab, currentStatus, ascArrow){\n        this.props.toggleSortOptions(tab, currentStatus, ascArrow)\n    }\n    \n    showPlayerStats(playerName, playerID){\n        // we need to filter games that the player has played to show relevant stats\n        // we have sorted the gamesSelected array chronologically for convenience\n        let playerStats = this.props.gamesInChronoOrder.reduce((broomballer, game) => {\n            broomballer.name = playerName\n            broomballer.gamesPlayed = broomballer.gamesPlayed || []\n            broomballer.goals = broomballer.goals || []\n            broomballer.assists = broomballer.assists || []\n            if (game.players.filter(player => player._id === playerID && player.gameInfo.available === true).length !== 0) {\n                broomballer.gamesPlayed.push(game._id)\n                // we filter the array of players with the matching ID (it creates a remapped array of one element if applicable, \n                // gameInfo, therefore the data we want is at index 0 of gameInfo)\n                let gameInfo = game.players.filter(player => player._id === playerID).map(player => player.gameInfo)\n                broomballer.goals.push( gameInfo[0].goals )\n                broomballer.assists.push( gameInfo[0].assists )\n            }            \n            return broomballer\n            }, {});\n        // creating the ChartJS object:    \n        let playerInfo = {\n            name: playerName,\n            data: {\n                labels: playerStats.gamesPlayed,\n                datasets: [\n                    {\n                        label: \"Goals\",\n                        data: playerStats.goals,\n                        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        borderColor: 'rgba(255, 99, 132, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                        lineTension: 0,\n                    },\n                    {\n                        label: \"Assists\",\n                        data: playerStats.assists,\n                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        borderColor: 'rgba(54, 162, 235, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                        lineTension: 0,\n                    }\n                ]\n            }\n        };\n        // sending the data to the modal\n        this.props.togglePlayerModal(true, playerInfo)\n    }\n    \n    render() {\n        return (\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Sorting Options</h3>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    \n                    <div className={\"list_of_options \" + this.props.sortOptionsDisplay}>\n                        \n                            <button className={this.props.sortingOptions.azTab + \" tab_button\"} onClick={()=> this.toggleSort(\"az\", this.props.sortingOptions.azTab, this.props.sortingOptions.alphaAsc)}>A-Z <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.alphaDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.alphaAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gamesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"games\", this.props.sortingOptions.gamesTab, this.props.sortingOptions.gamesAsc)}>Games Played  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gamesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gamesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.winsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"wins\", this.props.sortingOptions.winsTab, this.props.sortingOptions.winsAsc)}>Games Won  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.winsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.winsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.lossesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"losses\", this.props.sortingOptions.lossesTab, this.props.sortingOptions.lossesAsc)}>Games Lost  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.lossesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.lossesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.tiesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"ties\", this.props.sortingOptions.tiesTab, this.props.sortingOptions.tiesAsc)}>Games Tied  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.tiesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.tiesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.goalsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"goals\", this.props.sortingOptions.goalsTab, this.props.sortingOptions.goalsAsc)}>Goals  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.goalsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.goalsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gpgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"gpg\", this.props.sortingOptions.gpgTab, this.props.sortingOptions.gpgAsc)}>GPG  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gpgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gpgAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.assistsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"assists\", this.props.sortingOptions.assistsTab, this.props.sortingOptions.assistsAsc)}>Assists  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.assistsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.assistsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.apgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"apg\", this.props.sortingOptions.apgTab, this.props.sortingOptions.apgAsc)}>APG <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.apgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.apgAsc + \" sorting_arrow\"} /> </span> </button>\n                    \n                    </div>\n                    <div className=\"records \">\n                    {this.props.playerRecords ? this.props.playerRecords.map(object => {\n                        return (\n                            <div key={object._id} className={object.preferredPosition === this.props.positionVisibility ? \"hidden_card wrapping_card_div\" : \"visible wrapping_card_div\" } onClick={()=> this.showPlayerStats(object.name, object._id)}>\n                                <div className={object.membershipStatus === \"Member\" ? \"member_record player_card \" : \"non_member_record player_card\"}>\n                                \n                                    <div className=\"player_name\">{object.name} <span className=\"position_dot\"> <FontAwesomeIcon icon=\"circle\" className={object.preferredPosition} /> </span></div>\n                                    <div className=\"player_data\">\n                                        <p><span className=\"entry\">Games Played:</span> <span className=\"value\">{object.gamesPlayed}</span>/{this.props.selectedGames.length}</p>\n                                        <p><span className=\"entry\">W/L/T:</span> <span className=\"value\">{ object.winPercent !== \"N/A\" ? object.winPercent + \"%\" : object.winPercent } - { object.lossPercent !== \"N/A\" ? object.lossPercent + \"%\" : object.lossPercent } - { object.tiePercent !== \"N/A\" ? object.tiePercent + \"%\" : object.tiePercent } </span> </p>\n                                        <p><span className=\"entry\">Goals:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.goals : \"N/A\"}</span>\n                                        <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.gpg : \"N/A\"}</span></span></p>\n                                        <p><span className=\"entry\">Assists:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.assists : \"N/A\"}</span>\n                                        <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.apg : \"N/A\"}</span></span></p>\n                                    </div>\n                                </div>\n                            </div>\n                            )}\n                            ) : null }\n                    </div>\n                </div>\n                <PlayerStatsModal isOpen={this.props.playerModal} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    gamesInChronoOrder: _.sortBy(state.stats.selectedGames,\"_id\"),\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    playerRecords: state.stats.filteredPlayerRecords,\n    sortingOptions: state.stats.sortingOptions,\n    forwardSelection: state.stats.selectors.forwardSelection,\n    defenseSelection: state.stats.selectors.defenseSelection,\n    goalieSelection: state.stats.selectors.goalieSelection,\n    positionVisibility: state.stats.selectors.positionVisibility,\n    playerModal: state.stats.playerModal,\n})\n\nexport default connect(mapStateToProps, { toggleViews, toggleSortOptions, togglePlayerModal, }) (Showcase)\n\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSquare } from '@fortawesome/free-regular-svg-icons'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByType } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByGames } from '../../js/actions/statsActions'\n\nclass Filters extends Component {\n\n    playerSelection(setting, status){\n        switch (setting) {\n            case \"offense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({offense: \"unselected\", defense: this.props.defense, goalie: this.props.goalie})\n            }\n            else {\n                this.props.filterPlayerRecordsByType({offense: \"selected\", defense: this.props.defense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"defense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({defense: \"unselected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({defense: \"selected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"goalie\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({goalie: \"unselected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({goalie: \"selected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            break;\n\n            default:\n            return;\n        }\n    }\n\n\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    gameSelection(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        switch (name) {\n            case \"operator\":\n            this.props.filterPlayerRecordsByGames({[name]: value, gamePercent: this.props.gamePercent})\n            break;\n            \n            case \"gamePercent\":\n            this.props.filterPlayerRecordsByGames({operator: this.props.operator, [name]: value})\n            break;\n\n            default: \n            return;\n        }\n    }\n    render() {\n        return(\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Filters</h3>\n                    </div>\n                </div>\n            <div className=\"content\">\n                <div className={\"list_of_options \" + this.props.sortOptionsDisplay}>\n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Players</h3>\n                        <ul className=\"check_list\">\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"offense\",  this.props.offense)}>{ this.props.offense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\"/> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\"/>}  Offense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"defense\",  this.props.defense)}>{ this.props.defense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Defense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"goalie\",  this.props.goalie)}>{ this.props.goalie === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Goalies</li>        \n                        </ul> \n                    </div>\n                    \n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Attendance</h3>\n                            <ul className=\"check_list\">\n                                <li className=\"filter_item\">Played \n                                <select className=\"custom-select\" name=\"operator\" onChange={(event) => this.gameSelection(event)} value= {this.props.operator}>\n                                    <option value=\"+\"> more than </option>\n                                    <option value=\"-\"> less than </option>\n                                </select>\n                                <select className=\"custom-select\" name=\"gamePercent\" onChange={(event) => this.gameSelection(event)} value= {this.props.gamePercent}>\n                                    <option value=\"100\"> 100% </option>\n                                    <option value=\"90\"> 90% </option>\n                                    <option value=\"80\"> 80% </option>\n                                    <option value=\"70\"> 70% </option>\n                                    <option value=\"60\"> 60% </option>\n                                    <option value=\"50\"> 50% </option>\n                                    <option value=\"40\"> 40% </option>\n                                    <option value=\"30\"> 30% </option>\n                                    <option value=\"20\"> 20% </option>\n                                    <option value=\"10\"> 10% </option>\n                                    <option value=\"0\"> 0% </option>\n                                </select>\n                                    of the games </li>\n                            </ul> \n                    </div>\n\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    datePickers: state.stats.datePickers,\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    offense: state.stats.playerFilters.offense,\n    defense: state.stats.playerFilters.defense,\n    goalie: state.stats.playerFilters.goalie,\n    operator: state.stats.gameFilters.operator,\n    gamePercent: state.stats.gameFilters.gamePercent,\n})\n\nexport default connect(mapStateToProps, { toggleViews, filterPlayerRecordsByType, filterPlayerRecordsByGames }) (Filters)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {HorizontalBar} from \"react-chartjs-2\";\n// see https://www.npmjs.com/package/react-chartjs-2 for documentation\n\n// defaults.global.barThickness = 20;\nclass DataChart extends Component {\n    \n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"chart\")\n    }\n\n    render(){\n        \n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.chartDisplay)}> {this.props.chartDisplay === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Show Chart</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        \n                        <div className={\"chart \" }>\n                            {this.props.chartData && this.props.chartDisplay !== \"hidden\" ?  \n                            <div className=\"chartAreaWrapper\">\n                                <HorizontalBar\n                                    data={this.props.curatedChartData}\n                                    height= { this.props.chartData.labels.length * 50 }\n                                    className= { this.props.chartDisplay }\n                                    options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false,\n                                            barThickness: 100\n                                            }}\n                                    />\n                            </div> : null }  \n                        </div>\n                    </div>\n                </div>\n                )\n\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    chartData: state.stats.chartData,\n    curatedChartData: state.stats.curatedChartData,\n    chartDisplay: state.stats.chartDisplay,\n    chartingOptions: state.stats.chartingOptions,\n})\n\nexport default connect(mapStateToProps, { toggleViews }) (DataChart)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\n\nimport NavBar from \"../components/NavBar\"\nimport DateSelector from \"../components/RecordsPageComp/DateSelector.js\"\nimport GameSelector from \"../components/RecordsPageComp/GameSelector.js\"\nimport PlayerSelector from \"../components/RecordsPageComp/PlayerSelector.js\"\nimport Showcase from \"../components/RecordsPageComp/Showcase.js\"\nimport Filters from \"../components/RecordsPageComp/Filters.js\"\nimport DataChart from \"../components/RecordsPageComp/DataChart.js\"\n\nimport \"../styles/css/records.css\";\n\nclass Records extends Component { \n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main main_padded\"> \n            <h1 className=\"h1_main\">League Records</h1>\n            \n            <div className= \"row\">\n                < DateSelector />\n            </div>\n            \n            <div className= \"row\">\n                < GameSelector />\n            </div>\n            \n            <div className= \"row\">\n                < PlayerSelector />\n            </div>\n            \n            <div className= \"row\">\n                < DataChart />\n            </div>\n\n            <div className= \"row\">\n                < Showcase />\n            </div>\n\n            <div className= \"row\">\n                < Filters />\n            </div>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    games: state.games.games\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps) (Records)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n\nimport { updateUserForm } from '../js/actions/authenticateActions';\nimport { createNewUser } from '../js/actions/authenticateActions';\nimport { authenticateUser } from '../js/actions/authenticateActions';\n\nclass LoginForm extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n    handleCancel(event) {\n        event.preventDefault()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedUser = {...this.props.user, [name]: value}\n        this.props.updateUserForm(editedUser)\n        // this.setState({...this.state, [name]: value})\n        \n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        /* If a player is a goalie, their level needs to be set as \"Goalie\" */\n        \n        \n        if (this.props.in === \"show\") {\n            console.log(\"Sign-in mode activated\")\n            let user = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                }\n            this.props.authenticateUser(\"local\", user)\n            }\n        else {\n            let newUser = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                email: this.props.user.email,\n                privilege: \"user\"\n                }\n            // let id = this.props.player._id\n            this.props.createNewUser(newUser)\n        }\n\n        // go back to tab#1\n        // this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Username: </label>\n                            <input \n                                type=\"text\" \n                                name=\"username\"\n                                value= {this.props.user.username}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Password: </label>\n                            <input \n                                type=\"text\" \n                                name=\"password\"\n                                value= {this.props.user.password}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        {this.props.up === \"show\" ? (\n                            <div className=\"field\">\n                                <label>Email: </label>\n                                <input \n                                    type=\"text\" \n                                    name=\"email\"\n                                    value= {this.props.user.email}\n                                    onChange={(event) => this.handleChange(event)}\n                                    />\n                            </div>\n                        ) : null}\n                        \n                        {this.props.in === \"show\" ? \n                            <button type=\"submit\" value=\"Log In\" className=\"contrast_color\"> Sign in </button> \n                            :\n                            <button type=\"submit\" value=\"submit\" className=\"contrast_color\"> Sign up </button>\n                        } \n                        <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    user: state.authenticate.user,\n    in: state.authenticate.tabs[0],\n    up: state.authenticate.tabs[1]\n})\n\nexport default connect(mapStateToProps, { updateUserForm, createNewUser, authenticateUser }) (LoginForm)","import {\n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE\n} from \"./types\"\n\nimport { saveState } from \"../../components/sessionStorage\"\n\nimport API from \"../../utils/API\"\n\nexport const updateUserForm = (data) => dispatch => {\n    dispatch({\n        type: UPDATE_USER_FORM,\n        payload: data\n    })\n}\n\nexport const createNewUser = ( newUser ) => dispatch => {\n    API.addNewUser( newUser).then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NEW_USER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n    dispatch({\n        type: SIGN_MODE,\n        payload: id\n    })\n}\n\nexport const authenticateUser = (method, user) => dispatch => {\n    console.log(\"data in authenticateUser authenticateActions.js: \", user)\n    if (method === \"local\") {\n        API.authenticateUser(\"local\", user).then(res => {\n            if (!res.data.errmsg) {\n                console.log(\"Response from authentication API: \", res.data)\n                // dispatch({\n                //     type: SETTING_USER_PRIVILEGES,\n                //     payload: res.data\n                // })\n                switch (res.data.privilege) {\n                    case \"SuperAdmin\":\n                    saveState({\n                        SuperAdmin: true,\n                        draftTeams: true,\n                        changeAvailability: true,\n                        createGame: true,\n                        deleteGame: true,\n                        editScore: true,\n                        changeLock: true,\n                        createPlayer: true,\n                        editMember: true,\n                        deleteMember: true,\n                        editTenBucker: true,\n                        deleteTenBucker: true\n                    })\n\n                    break;\n\n                    default:\n                    return;\n                }\n            }\n        })\n    }\n}\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from \"../js/actions/authenticateActions\"\n\nimport NavBar from \"../components/NavBar\";\nimport LoginForm from \"../components/LoginForm.js\";\n\n// import \"../styles/css/login.css\";\n\nclass Login extends Component { \n\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_alternate\">\n            <h1 className=\"h1_alternate\">Login</h1>\n            <div className=\"row tab_centering\">\n                <span id=\"1\" className={\"auth_tab \" + this.props.tab1 } onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Sign-in </span>\n                <span id=\"2\" className={\"auth_tab \" + this.props.tab2 } onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Sign-up </span>\n            </div>\n            <div className= \"row main_for_tab\">\n                <LoginForm />\n            </div>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    tab1: state.authenticate.tabs[0],\n    tab2: state.authenticate.tabs[1],\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleTabStatus } ) (Login)\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    DELETE_GAME, \n    GET_GAME, \n    EDIT_GAME_INFO, \n    RESET,\n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE,\n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS,\n    HIDE_NON_MEMBERS, \n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO,\n    UNLOCK_GAME_INFO,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n} from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    games: [],\n    upcomingGames: [],\n    pastGames: [], // games showing in the \"Past Games\" list of Draft.js. Sorted from recent to old\n    gameInfo: {\n        goals: 0,\n        assists: 0,\n        darkPickNum: 0,\n        whitePickNum: 0,\n        available: true,\n        team: \"N/A\"\n    },\n    visibility: {\n        top: \"hidden\",\n        main: \"hidden\",\n        bottom: \"hidden\",\n        gameStats: \"hidden\",\n        noStatsMessage: \"hidden\",\n    },\n    gameDate: \"\",\n    draft: {},\n    unavailableMembers: [],\n    allTenBuckers: [],\n    notPlayingNonMembers: [],\n    playingNonMembers: [],\n    lockStatus: \"visible\", // this hides the arrows + delete icons if the game is locked\n    showingNonPlayingTenBuckers: \"Show\",    // which means this section is hidden\n    showingUnavailableMembers: \"Show\",      // which means this section is hidden\n    draftMode: \"Draft\",\n    pickButtons: {\n        left: \"Set Dark Picks\",\n        right: \"Set White Picks\"\n    },\n    picked: [],\n    unpicked: [],\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_GAMES:\n        return {\n            ...state,\n            games: action.payload,\n            upcomingGames: action.payload.filter(game => game._id >= moment().format(\"YYYY-MM-DD\")),\n            pastGames: _.sortBy(action.payload.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n        }\n        \n        case DELETE_GAME:\n        return {\n            ...state,\n            visibility: initialState.visibility,\n            games: state.games.filter(game => game._id !== action.payload._id),\n            upcomingGames: state.upcomingGames.filter(game => game._id !== action.payload._id),\n            pastGames: _.sortBy(state.pastGames.filter(game => game._id !== action.payload._id),\"_id\").reverse(),\n            lockStatus: \"hidden\",\n            draftMode: initialState.draftMode,\n            pickButtons: initialState.pickButtons,\n            }\n\n\n        case NEW_GAME:\n        return {\n            ...state,\n            games: _.sortBy([...state.games, action.payload], \"game_date\"),\n            upcomingGames: action.payload._id >= moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.upcomingGames], \"game_date\") : state.upcomingGames,\n            pastGames: action.payload._id < moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.pastGames], \"game_date\").reverse() : state.pastGames \n        }\n\n        case GET_GAME:\n        return {\n            ...state,\n            draftMode: initialState.draftMode,\n            gameDate: action.payload.game._id,\n            draft: action.payload.game,\n            // This hides the locker if \n            lockStatus: action.payload.game.lock_status === true ? \"hidden\" : \"visible\",\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.game.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            // We initiate the array of playing ten-buckers here (for them to not get added twice, this array will be check against when clicking on add non-member)\n            playingNonMembers: action.payload.game.players.filter(player => player.membershipStatus !== \"Member\"),\n            visibility: {\n                top: \"visible\", \n                main: \"visible\", \n                bottom: \"visible\",\n                gameStats: action.payload.gameStats,\n                noStatsMessage: action.payload.noStatsMessage\n            }\n        }\n\n        case EDIT_GAME_INFO:\n        return {\n            ...state,\n            draft: action.payload.game,\n        }\n        \n        case RESET:\n        return {\n            ...state,\n            draft: action.payload,\n            unavailableMembers: initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            playingNonMembers: initialState.playingNonMembers,\n            picked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case MAKE_MEMBER_UNAVAILABLE:\n        return {\n            ...state,\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            draft: action.payload\n        }\n\n        case MAKE_TEN_BUCKER_UNAVAILABLE:\n        return {\n            /* The Ten Buckers are managed outside of the \"game\" object. If they would just be set as \"Unavailable\" like Members, duplicates may be created.\n            They need to be removed from the game object altogether. Therefore, their status is handled in the reducer once sent to the state.\n            The allTenBuckers array that populates after a click is making this easier: when a Ten Bucker is set as unavailable, it is filtered \n            out of the array of playingNonMembers. It is also added to the array of notPlayingNonMembers: their data is checked agains the array of allTenBuckers\n            via a filter. It creates an array of 1 element, that we add to the notPlayingNonMembers array by extracting its index 0 */\n            ...state,\n            draft: action.payload.gameData,\n            notPlayingNonMembers: state.showingNonPlayingTenBuckers === \"Hide\" ? _.sortBy([...state.notPlayingNonMembers, state.allTenBuckers.filter(player => player._id === action.payload.player)[0]],\"name\") : initialState.notPlayingNonMembers,\n            playingNonMembers: state.playingNonMembers.filter(player => player._id !== action.payload.player),\n        }\n        // this case only deals with Members as Ten Buckers are handled separately through ADD_NON_MEMBER\n        case MAKE_MEMBER_AVAILABLE:\n        return {\n            ...state,\n            // removing properly from the array of unavailable players\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? (state.draft.players.filter(player => player.gameInfo.available === false && player.membershipStatus === \"Member\" && player._id !== action.payload.player)) : initialState.unavailableMembers,\n            draft: action.payload.game,\n        }\n\n        case SHOW_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: state.draft.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false),\n            showingUnavailableMembers: \"Hide\"\n        }\n        \n        case HIDE_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: initialState.unavailableMembers,\n            showingUnavailableMembers: \"Show\"\n        }\n\n        case SHOW_NON_MEMBERS:\n        return {\n            ...state,\n            allTenBuckers: action.payload.all,\n            notPlayingNonMembers: action.payload.new,\n            showingNonPlayingTenBuckers: \"Hide\"\n        }\n\n        case HIDE_NON_MEMBERS:\n        return {\n            ...state,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            showingNonPlayingTenBuckers: \"Show\"\n        }\n        \n        case ADD_NON_MEMBER:\n        return {\n            ...state,\n            draft: action.payload.players,\n            notPlayingNonMembers: state.notPlayingNonMembers.filter(player => player._id !== action.payload.player._id),\n            playingNonMembers: [action.payload.player, ...state.playingNonMembers]\n        }\n\n        case LOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n        \n        case UNLOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n\n        case TRIGGER_PICK_MODE:\n        return {\n            ...state,\n            draftMode: action.payload.team,\n            pickButtons: action.payload.buttons,\n            visibility: {top: \"hidden\", main: \"visible\", bottom: \"visible\"},\n            // as opposed to the \"SET_PICK\" case, the filtering needs to happen in the reducer, as it is based on data already stored in the state (not coming from API)\n            picked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case TRIGGER_DRAFT_MODE:\n        return {\n            ...state,\n            draftMode: \"Draft\",\n            visibility: {top: \"visible\", main: \"visible\", bottom: \"visible\"},\n            pickButtons: initialState.pickButtons\n        }\n\n        case SET_PICK:\n        return {\n            ...state,\n            draft: action.payload.game,\n            picked: action.payload.picked,\n            unpicked: action.payload.unpicked\n            \n        }\n\n        default: \n        return state;\n    }\n}","import { SHOW_FUTURE, SHOW_PAST } from '../actions/types';\nconst moment = require(\"moment\");\n\nconst initialState = {\n    showing: \"future\",\n    upcoming_visibility: \"visible\",\n    past_visibility: \"hidden\",\n    dateHeader: \"Upcoming\",\n    buttonMsg: \"Past\",\n    today: moment().format(\"YYYY-MM-DD\")    \n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_FUTURE:\n        return {\n            ...state,\n            upcoming_visibility: \"visible\",\n            past_visibility: \"hidden\",\n            dateHeader: \"Upcoming\",\n            buttonMsg: \"Past\",\n            showing: \"future\",\n        }\n        \n        case SHOW_PAST:\n        return {\n            ...state,\n            upcoming_visibility: \"hidden\",\n            past_visibility: \"visible\",\n            dateHeader: \"Past\",\n            buttonMsg: \"Upcoming\",\n            showing: \"past\"\n        }\n        \n        default:\n        return state;\n    }\n}","import { FETCH_PLAYERS, EDIT_PLAYER, ADD_PLAYER, DELETE_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from '../actions/types';\nimport _ from \"underscore\"\n\nconst initialState = {\n    players: [],\n    player: {\n        name: \"\",\n        fullName: \"\",\n        preferredPosition: \"Forward\",\n        membershipStatus: \"Member\",\n        email: \"\",\n        playerLevel: \"A+\"\n        },\n\n    tabs: [\"show\",\"hide\",\"hide\"],\n    panels: [\"visible\", \"hidden\", \"hidden\"],\n    \n    formMode: \"Add\"\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_PLAYERS:\n        return {\n            ...state,\n            players: action.payload\n        }\n\n        case ADD_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([...state.players, action.payload], \"name\")\n        }\n\n        case DELETE_PLAYER:\n        return {\n            ...state,\n            deletedPlayer: action.payload,\n            players: state.players.filter(player => player._id !== action.payload._id)\n        }\n        \n        case EDIT_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([action.payload, ...state.players.filter(player => player._id !== action.payload._id)], \"name\")\n        }\n        \n        case SHOW_TAB:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide\"} else {return tab = \"show\"}}),\n            panels: state.panels.map((panel, index) => {if(index !== action.payload) {return panel = \"hidden\"} else {return panel = \"visible\"}})\n        }\n\n        case RESET_TABS:\n        return {\n            ...state,\n            player: initialState.player,\n            formMode: \"Add\",\n            tabs: initialState.tabs,\n            panels: initialState.panels,\n        }\n\n        case EDIT_FORM:\n        return {\n            ...state,\n            formMode: \"Edit\",\n            tabs: [\"hide\",\"hide\",\"show\"],\n            panels: [\"hidden\", \"hidden\", \"visible\"],\n            player: action.payload\n        }\n\n        case UPDATE_FIELD:\n        return {\n            ...state,\n            player: action.payload\n        }        \n\n        default: \n        return state;\n    }\n}","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES,\n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES\n    } from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    visibility: \"hidden\",\n    message: \"Teams have not been drafted for this team yet. Please come back later!\",\n    gamesForRecords: [],\n    pastGamesFromAPI: [],\n    reducedGames: [],\n    gameVisibility: [],\n    selectedGames: [],\n    unselectedGames: [],\n    selectedPlayers: [],\n    unselectedPlayers: [],\n    datePickers: \"visible\",\n    listOfGames: \"hidden\",\n    listOfPlayers: \"hidden\", \n    sortOptionsDisplay: \"hidden\",\n    chartDisplay: \"hidden\",\n    playerRecords: [],\n    arrayOfTenBuckersID: [],\n    sortingOptions:\n        {\n            alphaDesc: \"active\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"selected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\",\n        },\n    chartingOptions: {\n        gamesTab: \"selected_chart_games\",\n        winsTab: \"selected_chart_wins\",\n        goalsTab: \"selected_chart_goals\",\n        gpgTab: \"selected_chart_gpg\",\n        assistsTab: \"selected_chart_assists\",\n        apgTab: \"selected_chart_apg\",\n        },\n    chartData: {\n        labels: [],\n        datasets: [\n            {\n                label: \"Goals\",\n                data: [],\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: \"Assists\",\n                data: [],\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Games\",\n                data: [],\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Wins (%)\",\n                data: [],\n                backgroundColor: 'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                hoverBorderColor: 'rgba(75,192,192,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Losses (%)\",\n                data: [],\n                backgroundColor: '#d3b8ae',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#d3b8ae',\n                hoverBorderColor: '#d3b8ae',\n                barThickness: 15,\n            },\n            {\n                label: \"Ties (%)\",\n                data: [],\n                backgroundColor: '#ff8a65',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#ff8a65',\n                hoverBorderColor: '#ff8a65',\n                barThickness: 15,\n            },\n            {\n                label: \"GPG\",\n                data: [],\n                backgroundColor: 'rgba(153,102,255,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                hoverBorderColor: 'rgba(153,102,255,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"APG\",\n                data: [],\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                options: {barThickness: 100},\n            },\n        ]\n    },\n    memberSelection: \"unselected_member\",\n    tenBuckerSelection: \"unselected_non_member\",\n    selectors: {\n        forwardSelection: \"unselected_forward\",\n        goalieSelection: \"unselected_goalie\",\n        defenseSelection: \"unselected_defense\",\n        positionVisibility: \"all\"\n        },\n    playerModal: false,\n    playerModalData: {},\n    allGamesSelection: \"unselected_game\",\n    playerFilters: {\n            offense: \"selected\",\n            defense: \"selected\",\n            goalie: \"selected\"\n    },\n    gameFilters: {\n            operator: \"+\",\n            gamePercent: \"0\",\n    },\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_GAMES_TO_STATS:\n        return {\n            ...state,\n            visibility: \"visible\",\n        }\n            \n        case GET_GAMES_AND_TRANSFORM:\n        return {\n            ...state,\n            reducedGames: action.payload.game,\n            gameVisibility: action.payload.visibility,\n        }\n\n        case GET_GAMES_IN_TIMESPAN:\n        return {\n            ...state,\n            pastGamesFromAPI: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            gamesForRecords: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            arrayOfTenBuckersID: action.payload.allTenBuckers,\n        }\n\n        case SET_YEARS_VISIBILITIES:\n        return {\n            ...state, \n            gameVisibility: action.payload\n        }\n\n        case ADD_GAME_TO_SELECTED:\n        return {\n            ...state,\n            selectedGames: [...state.selectedGames, action.payload],\n            unselectedGames: state.unselectedGames.filter(game => game._id !== action.payload._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.playerFilters\n        }\n\n        case REMOVE_GAME_FROM_SELECTED:\n        return {\n            ...state,\n            selectedGames: state.selectedGames.filter(game => game._id !== action.payload._id),\n            unselectedGames: [...state.unselectedGames, action.payload],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case ADD_PLAYER_TO_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: [...state.selectedPlayers, action.payload.selected],\n            unselectedPlayers: state.unselectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case REMOVE_PLAYER_FROM_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: state.selectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            unselectedPlayers: [...state.unselectedPlayers, action.payload.selected],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters\n        }\n        \n        case TOGGLE_RECORDS_VIEWS:\n        return {\n            ...state,\n            datePickers: action.payload.dates,\n            listOfGames: action.payload.games,\n            listOfPlayers: action.payload.players, \n            sortOptionsDisplay: action.payload.sort,\n            chartDisplay: action.payload.chart\n        }\n\n        case ADD_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\"),\n            filteredPlayerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\")\n        }\n\n        case REMOVE_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\"),\n            filteredPlayerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\")\n        }\n\n        case REPLACE_PLAYERS_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(action.payload, \"name\"),\n            filteredPlayerRecords: _.sortBy(action.payload, \"name\"),\n        }\n\n        case SORT_AZ_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\").reverse()\n        }\n\n        case SORT_AZ_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\"),\n        }\n\n        case SORT_GAMES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\")\n        }\n\n        case SORT_GAMES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\").reverse()\n        }\n\n        case SORT_WINS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\")\n        }\n\n        case SORT_WINS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\").reverse(),\n        }\n\n        case SORT_LOSSES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\")\n        }\n\n        case SORT_LOSSES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\").reverse(),\n        }\n\n        case SORT_TIES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\")\n        }\n\n        case SORT_TIES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\").reverse(),\n        }\n\n        case SORT_GOALS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\"),\n        }\n        \n        case SORT_GOALS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\").reverse(),\n        }\n        \n        case SORT_ASSISTS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\"),\n        }\n        \n        case SORT_ASSISTS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\").reverse(),\n        }\n\n\n        case SORT_GPG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\")\n        }\n\n        case SORT_GPG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\").reverse(),\n        }\n\n        case SORT_APG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\"),\n        }\n\n        case SORT_APG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\").reverse(),\n        }\n\n        case SET_DATE_RANGE:\n        return {\n            ...state,\n            dateRange: action.payload,\n            gamesForRecords: state.pastGamesFromAPI.filter(game => game._id >= action.payload.from && game._id <= action.payload.to)\n        }\n        \n        case TOGGLE_SELECT_ALL:\n        return {\n            ...state,\n            memberSelection: action.payload.player === \"member\" ? action.payload.memberSelection : state.memberSelection,\n            tenBuckerSelection: action.payload.player !== \"member\" ? action.payload.tenBuckerSelection : state.tenBuckerSelection,\n        }\n        \n        case BATCH_CARD_UPDATE:\n        return {\n            ...state,\n            // playerRecords: _.sortBy(action.payload.concat(state.playerRecords), \"name\"),\n            playerRecords: action.payload.concat(state.playerRecords.filter(player => player._id !== action.payload._id))\n        }\n\n        case BATCH_CHART_UPDATE:\n        return {\n            ...state,\n            chartData: action.payload,\n            curatedChartData: action.payload,\n        }\n\n        case BATCH_UNSELECT:\n        return {\n            ...state,\n            playerRecords: _.sortBy(state.playerRecords.filter(player => player.membershipStatus !== action.payload), \"name\")\n        }\n\n        case TOGGLE_PLAYER_MODAL:\n        return {\n            ...state, \n            playerModal: action.payload.status,\n            playerModalData: action.payload.data\n        }\n        case BATCH_GAMES:\n        return {\n            ...state, \n            allGamesSelection: action.payload === \"unselected_game\" ? \"selected_game\" : \"unselected_game\"\n        }\n\n        case UNSELECT_ALL_GAMES:\n        return {\n            ...state, \n            selectedGames: initialState.selectedGames,\n            unselectedGames: state.pastGamesFromAPI,\n            allGamesSelection: \"unselected_game\"\n        }\n        // Currently, the gameFilters and playerFilters cannot operate simultaneously. Therefore, playing with one should reset the other (to avoid confusion) \n        case FILTER_PLAYER_RECORDS_BY_TYPE:\n        return {\n            ...state,\n            gameFilters: initialState.gameFilters,\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: action.payload.playerFilters,\n            // \"only\", means that the players have to match a certain condition (hence: \"===\"), \"but\", means that matching players should be filtered out (\"!==\")\n            filteredPlayerRecords: action.payload.operator === \"only\" ? _.sortBy(state.playerRecords.filter(player => player.preferredPosition === action.payload.playerType),\"name\") : _.sortBy(state.playerRecords.filter(player => player.preferredPosition !== action.payload.playerType),\"name\") \n        }\n\n        case FILTER_PLAYER_RECORDS_BY_GAMES:\n        return {\n            ...state,\n            playerFilters: initialState.playerFilters,\n            sortingOptions: initialState.sortingOptions,\n            gameFilters: action.payload,\n            filteredPlayerRecords: action.payload.operator === \"-\" ? _.sortBy(state.playerRecords.filter(player => player.gamesPlayed < state.selectedGames.length * action.payload.gamePercent / 100), \"name\") : _.sortBy(state.playerRecords.filter(player => player.gamesPlayed > state.selectedGames.length * action.payload.gamePercent / 100), \"name\")\n        }\n\n        default:\n        return state;\n    }\n}","import { \n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE,\n} from \"../actions/types\"\n\nconst initialState = {\n    user: \n        {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n        },\n    tabs: [\"show\",\"hide\"], // this is used in the sign-in/sign-up user form\n    // superAdminPrivileges: false,\n    // adminPrivileges: false,\n    // draftPrivileges: false,\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_USER_FORM:\n        return {\n            ...state,\n            user: action.payload,\n        }\n\n        case ADD_NEW_USER:\n        return {\n            ...state,\n            user: initialState.user\n        }\n\n        case SIGN_MODE:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide\"} else {return tab = \"show\"}})\n        }\n        \n        default: \n        return state;\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./gameReducer\"\nimport displayReducer from \"./displayReducer\"\nimport playerReducer from \"./playerReducer\"\nimport statsReducer from \"./statsReducer\"\nimport authenticateReducer from \"./authenticateReducer\"\n\nexport default combineReducers({\n    games: gameReducer,\n    display: displayReducer,\n    players: playerReducer,\n    stats: statsReducer,\n    authenticate: authenticateReducer,\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {}\nconst middleware = [thunk]\n\n// createStore is the function for creating the Redux store.\n\n// since it crashes on Safari, and Chrome in incognito mode, we only install Redux DevTools on Chrome in Dev Mode\nif (window.navigator.userAgent.includes('Chrome') && window.location.origin === \"http://localhost:3000/\") {\n    var store = createStore(\n        rootReducer, \n        initialState, \n        compose(\n            applyMiddleware(...middleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n            )\n        );\n} else {\n    store = createStore(\n        rootReducer, \n        initialState,\n        compose(\n            applyMiddleware(...middleware)\n            )\n        )\n}\n\n\nexport default store;","\nimport React from 'react';\n// React router\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// const Home = React.lazy(() => import(\"./pages/Home\"));\nimport Home from \"./pages/HomePage.js\";\nimport Draft from \"./pages/DraftPage.js\";\nimport Player from \"./pages/PlayerPage.js\";\nimport Stats from \"./pages/StatsPage.js\";\nimport Records from \"./pages/RecordsPage.js\";\nimport Login from \"./pages/LoginPage.js\";\nimport './styles/css/App.css';\n\n// Redux \nimport { Provider } from 'react-redux'\nimport store from \"./js/store\"\n// Font-Awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { \n  faChevronUp, \n  faChevronDown, \n  faMinusCircle, \n  faTimesCircle, \n  faArrowCircleLeft, \n  faAngleRight, \n  faPlusCircle, \n  faTimes, \n  faPlus, \n  faCaretDown, \n  faCaretRight, \n  faLongArrowAltUp, \n  faLongArrowAltDown, \n  faCircle,\n  faLock,\n  faUnlockAlt,\n  // faSquare,\n  faCheckSquare\n  } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faChevronUp, faChevronDown, faMinusCircle, faTimesCircle, faArrowAltCircleRight, faArrowCircleLeft, faAngleRight, faPlusCircle, faMinusCircle, faTimes, faPlus, faCaretDown, faCaretRight, faLongArrowAltUp, faLongArrowAltDown, faCircle, faLock, faUnlockAlt, /* faSquare,*/ faCheckSquare)\n// const Records = React.lazy(() => import('./pages/Records'));\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={Home} />\n          <Route path=\"/Draft\" component={Draft} />\n          <Route path=\"/Player\" component={Player} />\n          <Route path=\"/Stats\" component={Stats} />\n          <Route path=\"/Records\" component={Records} />\n          {/* <Route path=\"/Records\" render={() => (<Suspense fallback={<div>Loading...</div>}> <Records /></Suspense>)}/> */}\n          <Route path=\"/Login\" component={Login} />\n          <Route path=\"/*\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>\n\n);\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/logo_sm.afca9f0c.jpeg\";"],"sourceRoot":""}