{"version":3,"sources":["utils/API.js","components/sessionStorage.js","components/NavBar.js","pages/HomePage.js","js/actions/gameActions.js","js/actions/types.js","components/DraftPageComp/GameList.js","js/actions/playerActions.js","components/DraftPageComp/Calendar.js","components/DraftPageComp/Drafter.js","components/DraftPageComp/Picker.js","components/DraftPageComp/SmallScreenPicker.js","components/DraftPageComp/GameOptionsBottom.js","components/DraftPageComp/GameOptionsTop.js","components/Locker.js","pages/DraftPage.js","js/actions/displayActions.js","components/PlayerPageComp/Form.js","components/PlayerPageComp/MemberList.js","components/PlayerPageComp/TenBuckerList.js","pages/PlayerPage.js","js/actions/statsActions.js","components/StatsPageComp/PastGamesList.js","components/StatsPageComp/ScoreBoard.js","components/StatsPageComp/NoStatsBoard.js","pages/StatsPage.js","components/RecordsPageComp/DateRange.js","components/RecordsPageComp/DateSelector.js","components/RecordsPageComp/curateData.js","components/RecordsPageComp/GameSelector.js","components/RecordsPageComp/PlayerSelector.js","components/RecordsPageComp/PlayerStatsModal.js","components/RecordsPageComp/Showcase.js","components/RecordsPageComp/Filters.js","components/RecordsPageComp/DataChart.js","pages/RecordsPage.js","components/LoginForm.js","js/actions/authenticateActions.js","pages/LoginPage.js","js/reducers/gameReducer.js","js/reducers/displayReducer.js","js/reducers/playerReducer.js","js/reducers/statsReducer.js","js/reducers/authenticateReducer.js","js/reducers/index.js","js/store/index.js","App.js","registerServiceWorker.js","index.js","components/images/logo_sm.jpeg"],"names":["currentURL","window","location","origin","API","url","axios","get","id","date","players","post","game_date","delete","gameId","data","put","player","userData","mode","loadState","serializedState","sessionStorage","getItem","JSON","parse","err","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navDisplay","navItemsVisibility","handleScroll","bind","assertThisInitialized","setState","scroll","scrollY","navbar","document","querySelector","objectSpread","top","offsetTop","height","offsetHeight","addEventListener","status","_this2","react_default","a","createElement","className","href","onClick","changeStatus","src","SmallLogo","alt","type","Component","Home","components_NavBar","getGame","game","dispatch","then","res","Error","statusText","gameStats","noStatsMessage","darkPlayers","filter","gameInfo","team","whitePlayers","length","payload","editGameInfo","setPick","available","picked","_","sortBy","darkPickNum","obj","unpicked","whitePickNum","GameList","getGameInfo","deleteGameFunc","deleteGame","fetchGames","privileges","console","log","dateHeader","upcomingGames","map","key","_id","index_es","icon","pastGames","connect","games","display","today","buttonMsg","upcoming_visibility","past_visibility","lockStatus","fetchPlayers","deletePlayer","editForm","moment","require","Calendar","createGame","handleChange","handleSubmit","apply","toConsumableArray","concat","dateSelected","event","preventDefault","membersWithGameInfo","membershipStatus","member","name","playerLevel","preferredPosition","dateOfGame","format","addGame","onSubmit","react_datepicker_es","placeholderText","selected","onChange","value","members","Drafter","draftTeams","changeAvailability","playerID","playerStatus","draft","setMemberUnavailable","gameData","setTenBuckerUnavailable","setAvailable","tenBuckerToAdd","addNonMember","setUnavailable","faArrowAltCircleRight","assignTeam","gameDate","unavailableMembers","makeAvailable","notPlayingNonMembers","addTenBuckerToDraft","size","draftMode","newPlayer","existingPlayers","newRoster","indexOfPlayerToRemove","indexOf","splice","unavailable","forEach","index","indexOfPlayerToEdit","addPick","removePick","rankOneUp","rankOneDown","GameOptionsBottom","randomize","inputArray","outputArray","randomPlayer","Math","floor","random","push","filterTeams","arrayOfPlayerObjects","rosterTeam1","e","rosterTeam2","testPick","inputObject","rankedPlayers","picks","nameOfTeam","serpentineDraft","num","darkPicks","whitePicks","num1","num2","modulo","completeRounds","i","unavailablePlayers","allPlayers","alternateDraft","resetPlayers","reset","mixedRosters","output","reduce","levels","numOutput","keys","playersArray","entries","arrayOfUnavailablePlayers","currentMode","triggerDraftMode","triggerPickMode","visibility","bottom","toggleMode","pickButtons","left","resetTeams","right","autodraft","buttons","GameOptionsTop","action","showUnavailable","hideUnavailable","tenBuckers","arrayOfIds","playingNonMembers","newTenBuckers","showNonMembers","hideNonMembers","showingUnavailableMembers","showingNonPlayingTenBuckers","gameParticipants","allTenBuckers","notPlayingTenBuckers","all","new","Locker","lockGameInfo","unlockGameInfo","unlockGame","lockGame","lock_status","screenSize","innerWidth","Draft","changeLock","currentlyShowing","toggleGames","DraftPageComp_Calendar","DraftPageComp_GameList","toggleGamesFunc","showing","DraftPageComp_GameOptionsTop","main","DraftPageComp_Drafter","Picker","SmallScreenPicker","DraftPageComp_GameOptionsBottom","components_Locker","currentState","Form","createPlayer","handleCancel","resetTabs","target","editedPlayer","defineProperty","updateField","assignedLevel","fullName","email","formMode","addPlayer","editPlayer","defaultValue","tab1","tab2","panel1","panel2","errors","message","MemberList","editMember","deleteMember","sendPlayerToEditForm","TenBuckerList","editTenBucker","deleteTenBucker","Player","currentStatus","tabIndex","parseInt","toggleTabStatus","toggleStatus","tab3","PlayerPageComp_MemberList","PlayerPageComp_TenBuckerList","panel3","PlayerPageComp_Form","tabs","panels","getGamesForRecords","arrayOfTenBuckerIDs","array","toggleViews","element","dates","sort","chart","batchChartUpdate","newData","updatePlayers","togglePlayerModal","newStatus","PastGameList","getGamesAndTransform","visibleBefore","gameVisibility","slice","visibleAfter","newArray","setVisibility","object","values","_this3","_ref","_ref2","slicedToArray","renderGames","_this4","reverse","year","toggleVisibility","renderMonth","renderYear","reducedGames","stats","monthify","string","yearString","substring","monthString","difYears","arrayOfObjects","remapped","difMonths","beautifyGames","years","ScoreBoard","editScore","currentValue","goalUpdate","scoreUpdate","goals_dark","goals_white","win","playerUpdate","goals","assistUpdate","assists","logStat","NoStatsBoard","Stats","PastGamesList","StatsPageComp_NoStatsBoard","StatsPageComp_ScoreBoard","DateRange","handleChangeStart","handleChangeEnd","startDate","endDate","selectDateRange","datePickers","selectsStart","isClearable","selectsEnd","start","end","from","to","DateSelector","RecordsPageComp_DateRange","allGames","gamesForRecords","createCardsArray","arrayOfPlayers","arrayOfGames","transformedArrayForCards","broomballer","gamesPlayed","playerReduced","wins","losses","ties","gamePlayedFromArray","winsFromArray","lossesFromArray","tiesFromArray","winPercent","lossPercent","tiePercent","goalsFromArray","b","assistsFromArray","gpg","parseFloat","apg","Number","isInteger","toFixed","playerWithoutRecord","loss","tie","createChartData","arrayOfCards","labels","goalsArray","assistsArray","gamesPlayedArray","winPercentArray","lossPercentArray","tiePercentArray","gpgArray","apgArray","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barThickness","options","GameSelector","unselectGame","selectedGames","match","cardsArray","selectedPlayers","newObject","markAsSelected","selectedPlayersNum","selectAllGames","gameSelection","unselectAllGames","gamesSelected","includes","selectGame","unselectedGames","gamesUnselected","listOfGames","allGamesSelection","chartData","PlayerSelector","unselectPlayer","removePlayerStatObject","selectedGamesNum","addBatchChartData","toggleSelectAll","allMembersAndSelectedTenBuckers","selectAndTransform","batchUnselect","allTenBuckersAndSelectedMembers","arrayOfTenBuckersID","selectPlayer","listOfPlayers","memberSelection","selectAllPlayers","tenBuckerSelection","unselectedPlayers","addPlayerStatObject","update","batchCardUpdate","PlayerStatsModal","reactstrap_es","isOpen","playerModal","toggle","centered","playerModalData","react_chartjs_2_es","responsive","maintainAspectRatio","Showcase","tab","ascArrow","toggleSortOptions","playerName","playerStats","gamesInChronoOrder","playerInfo","fill","lineTension","sortOptionsDisplay","numOfRecords","sortingOptions","azTab","toggleSort","alphaAsc","alphaDesc","gamesTab","gamesAsc","gamesDesc","winsTab","winsAsc","winsDesc","lossesTab","lossesAsc","lossesDesc","tiesTab","tiesAsc","tiesDesc","goalsTab","goalsAsc","goalsDesc","gpgTab","gpgAsc","gpgDesc","assistsTab","assistsAsc","assistsDesc","apgTab","apgAsc","apgDesc","playerRecords","positionVisibility","showPlayerStats","RecordsPageComp_PlayerStatsModal","filteredPlayerRecords","forwardSelection","selectors","defenseSelection","goalieSelection","Filters","setting","filterPlayerRecordsByType","offense","defense","goalie","_this$props$filterPla","filterPlayerRecordsByGames","gamePercent","operator","playerSelection","faSquare","playerFilters","gameFilters","playerType","DataChart","chartDisplay","curatedChartData","chartingOptions","Records","RecordsPageComp_DateSelector","RecordsPageComp_GameSelector","RecordsPageComp_PlayerSelector","RecordsPageComp_DataChart","RecordsPageComp_Showcase","RecordsPageComp_Filters","LoginForm","editedUser","user","updateUserForm","in","username","password","authenticateUser","newUser","privilege","createNewUser","up","authenticate","method","errmsg","redirectURI","Login","components_LoginForm","initialState","pastGamesFromAPI","connectionState","combineReducers","arguments","undefined","deletedPlayer","panel","dateRange","logged","middleware","thunk","navigator","userAgent","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","library","add","faChevronUp","faChevronDown","faMinusCircle","faTimesCircle","faArrowCircleLeft","faAngleRight","faPlusCircle","faTimes","faPlus","faCaretDown","faCaretRight","faLongArrowAltUp","faLongArrowAltDown","faCircle","faLock","faUnlockAlt","faCheckSquare","App","es","BrowserRouter","Switch","Route","exact","path","render","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App","getElementById","URL","process","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c79e9f61.chunk.js","sourcesContent":["import axios from \"axios\";\n// Transforming the current url in order to query the public API locally \n// (Express port 3001 changed to React port 3000 where the API exists).\n// Once deployed, it should reset to the domain name used.\nlet currentURL = window.location.origin\nif (currentURL === \"http://localhost:3000\") {\n    currentURL = \"http://localhost:8080\"\n    } \n// For Passport.js: \n/* Server sends SetCookie header then the browser handle to store it, and then the cookie is sent with requests made to \nthe same server inside a Cookie HTTP header.\nhttps://stackoverflow.com/questions/45536831/node-express-passport-req-user-undefined-but-works-in-postman\n\nconst config = {\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    }\n}\n*/\n\nexport default {\n    getGames: () => {       \n        const url = currentURL + \"/api/game/\"\n        return axios.get(url)\n        },\n    getGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.get(url)\n    },\n    addGame: (date, players) => {\n        const url = currentURL + \"/api/game/\"\n        return axios.post(url, { game_date: date, players: players})\n        },\n    deleteGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.delete(url)\n        },\n    editGame: (gameId, data) => {\n        const url = currentURL + \"/api/game/\" + gameId\n        return axios.put(url, { data })\n        },\n    getPlayers: () => {\n        const url = currentURL + \"/api/player/\"\n        return axios.get(url)\n        },\n    addPlayer: (player) => {\n        const url = currentURL + \"/api/player/\"\n        return axios.post(url, { player })\n        },\n    editPlayer: (id, data) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.put(url, { data })\n        },\n    deletePlayer: (id) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.delete(url)\n    },\n    addNewUser: (userData) => {\n        const url = currentURL + \"/users\"\n        return axios.post(url, {userData})\n    },\n    authenticateUser: (mode, userData) => {\n        const url = currentURL + \"/auth/login\"\n        if (mode === \"local\") {\n            return axios.post(url, userData)\n        }\n    },\n    checkUser: () => {\n        const url = currentURL + \"/auth/login\"\n        return axios.get(url)\n    },\n    }\n","import API from \"../utils/API\"\n\n/* https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage */\n\nexport const loadState = () => {\n    try {\n        const serializedState = sessionStorage.getItem('state');\n        if (serializedState === null ) {\n            return undefined;\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        return undefined\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem(\"state\", serializedState);\n    } catch (err) {\n        console.log(err)\n    }\n}\n// https://stackoverflow.com/questions/36486397/passport-login-and-persisting-session\nexport const checkAuthentication = () => {\n    API.checkUser();\n}","import React, { Component } from \"react\";\nimport SmallLogo from \"../components/images/logo_sm.jpeg\"\nimport { checkAuthentication } from \"./sessionStorage\"\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            navDisplay: \"noShowMenu\",\n            navItemsVisibility: \"hidden\",\n        }\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    handleScroll() {\n        this.setState({scroll: window.scrollY})\n    }\n\n    componentDidMount() {\n        const navbar = document.querySelector(\"nav\");\n        this.setState({...this.state, top: navbar.offsetTop, height: navbar.offsetHeight});\n        window.addEventListener('scroll', this.handleScroll);\n        // checkAuthentication()\n    }\n\n    changeStatus(status) {\n        this.setState({ navDisplay: status === \"noShowMenu\" ? \"showMenu\" : \"noShowMenu\", navItemsVisibility: status === \"noShowMenu\" ? \"visible\" : \"hidden\" })\n    }\n\n    render() {\n        return (\n            \n            <nav className={this.state.scroll > (this.state.height + 1)   ? this.state.navDisplay + \" stickyNav\" : null}>\n                <div className={this.state.navDisplay + \" darkNavBar\"}>\n                    <h4 className={this.state.navItemsVisibility + \" nav_title\"}>Summit Broomball</h4>\n                    <div className={this.state.navItemsVisibility + \" navbar-nav\"}>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/\">Home</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Player\">Players</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Draft\">Draft</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Stats\">Stats</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Records\">Records</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Login\">Login</a>\n                    </div>\n                </div>\n\n                <div className=\"navbar bg\">\n                        <img onClick={() => this.changeStatus(this.state.navDisplay)} className=\"navbar-toggler toggler_img\" src={SmallLogo} alt=\"logo\" type=\"button\" />    \n                </div>\n            </nav>\n            )\n        }\n}\n\n\nexport default NavBar\n","import React from \"react\";\nimport NavBar from \"../components/NavBar.js\";\n\nconst Home = () => (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Summit Broomball</h1>\n            <div className=\"instructions_div\">\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Create, Manage, and Edit Players:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"/Player\"><button className=\"btn contrast_color menu_button\">Players</button></a>\n                    </div>\n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Schedule Games and Draft Teams:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Draft\"><button className=\"btn contrast_color menu_button\">Draft</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Enter Stats for Games:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Stats\"><button className=\"btn contrast_color menu_button\" >Stats</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instruction instructions_text\">Visualize Recorded Stats:</p>\n                    </div> \n                    <div className=\"instruction\">\n                        <a href=\"./Records\"><button className=\"btn contrast_color menu_button\" >Records</button></a>\n                    </div>\n                    \n                </div>\n            </div>\n                \n                \n                <div className=\"container\">\n                    <div className=\"welcome_text\">\n                        <p className=\"text_center\">\n                        Click on the logo at any time to switch page.\n                        </p>\n                    </div>\n                </div>\n            </div>        \n        </div>\n\n)\nexport default Home;\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    GET_GAME, \n    DELETE_GAME, \n    EDIT_GAME_INFO, \n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE, \n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS, \n    HIDE_NON_MEMBERS,\n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO, \n    UNLOCK_GAME_INFO,\n    RESET,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n    \n} from './types';\n\nimport API from \"../../utils/API\"\nimport _ from \"underscore\"\n\nexport const fetchGames = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_GAMES,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deleteGame = (id) => dispatch => {\n    API.deleteGame(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_GAME,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addGame = (date, players, player, members) => dispatch => {\n    API.addGame(date, players, player, members)\n            .then(res => {\n                if(res.status !== 200) {\n                    throw new Error(res.statusText)\n                    }\n                else {\n                    let newGame = res.data\n                    // console.log(\"res.data: \", res.data)\n                    if(newGame.name){\n                        console.log(\"Error Message: the app encountered an error creating this game in the database\")\n                    }\n                    else {\n                        console.log(\"Game successfully added to db\")\n                        dispatch({\n                            type: NEW_GAME,\n                            payload: res.data\n                        })\n                        }\n                    }\n            })\n        }\n\nexport const getGame = (game) => dispatch => {\n    API.getGame(game)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                /* We need to know if drafting has happened for the Stats page to display properly */\n                let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\")\n                let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\")\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }\n\n                dispatch({\n                    type: GET_GAME,\n                    payload: {\n                        game: res.data,\n                        gameStats: gameStats,\n                        noStatsMessage: noStatsMessage\n                    }\n                })\n            }\n        })\n}\n\nexport const editGameInfo = (game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get full game data from the API's response\n            /*\n            // Then we need to check if the locker can be displayed\n            let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\" && player.gameInfo.available === true)\n            let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\" && player.gameInfo.available === true)\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }*/\n            \n            dispatch({\n                type: EDIT_GAME_INFO,\n                payload: {\n                    game: res.data,\n                    // gameStats: gameStats,\n                    // noStatsMessage: noStatsMessage\n                    }\n            })\n        }\n    })\n}\n\nexport const setMemberUnavailable = (game, data) => dispatch => {\n        API.editGame(game, data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_MEMBER_UNAVAILABLE,\n                    payload: res.data\n                    })\n                }\n            })\n    }\nexport const setTenBuckerUnavailable = (gameId, gameData, playerID) => dispatch => {\n    API.editGame(gameId, gameData)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_TEN_BUCKER_UNAVAILABLE,\n                    payload: {\n                        gameData: res.data,\n                        player: playerID\n                        }\n                    })\n                }\n            })\n        }\nexport const setAvailable = (game, data) => dispatch => {\n    // console.log(\"data.player: \", data.player, \"\\n(is the id of player to add)\")\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get the game info\n            // console.log(\"res.data: \", res.data)\n            dispatch({\n                type: MAKE_MEMBER_AVAILABLE,\n                payload: {\n                    player: data.player,\n                    game: res.data\n                    }\n            })\n        }\n    })\n}\n\n\nexport const showUnavailable = () => dispatch => {\n    dispatch({\n        type: SHOW_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const hideUnavailable = () => dispatch => {\n    dispatch({\n        type: HIDE_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const showNonMembers = (allTenBuckers, notPlayingTenBuckers) => dispatch => {\n    dispatch({\n        type: SHOW_NON_MEMBERS,\n        payload: {\n            all: allTenBuckers,\n            new: notPlayingTenBuckers\n                }\n    })\n}\n\nexport const hideNonMembers = () => dispatch => {\n    dispatch({\n        type: HIDE_NON_MEMBERS\n    })\n}\n// Adds a Ten Bucker to the list of players\nexport const addNonMember = (game, newPlayer, existingPlayers) => dispatch => {\n    let newRoster = _.sortBy([...existingPlayers, newPlayer], \"name\")\n    API.editGame(game, {players: newRoster})\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NON_MEMBER,\n                payload: {players: res.data, player: newPlayer}\n            })\n        }\n    })\n}\n\nexport const lockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: true}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: LOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const unlockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: false}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: UNLOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const triggerPickMode = (team) => dispatch => {\n    // console.log(\"team in triggerPickMode from gameActions.js: \", team)\n    switch (team) {\n        case \"Dark\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        left: \"Exit\",\n                        right: \"Set White Picks\"\n                        }\n                    }\n                })\n                break;\n\n        case \"White\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        right: \"Exit\",\n                        left: \"Set Dark Picks\"\n                        },\n                        // set: \"player.gameInfo.whitePickNum\"\n                    }\n                })\n                break;\n        default:\n            console.log(\"There was an error in the dispatcher\")\n    }\n    }\n\nexport const triggerDraftMode = () => dispatch => {\n    dispatch({\n        type: TRIGGER_DRAFT_MODE\n        })\n}\n\nexport const setPick = (team, game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data.players: \", res.data.players)\n            let available = res.data.players.filter(player => player.gameInfo.available === true)\n            switch (team) {\n                case \"Dark\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                case \"White\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                default:\n                return;\n                }\n            }\n        })\n    } \n\nexport const reset = (game, data) => dispatch => {\n    // console.log('Data received in reset gameActions.js: ', data)\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data in the reset gameAction.js function: \", res.data)\n            dispatch({\n                type: RESET,\n                payload: res.data\n            })\n            }\n    })\n}","export const FETCH_GAMES = 'FETCH_GAMES'\nexport const NEW_GAME = 'NEW_GAME'\nexport const GET_GAME = 'GET_GAME'\nexport const DELETE_GAME = 'DELETE_GAME'\n\nexport const GET_GAMES_AND_TRANSFORM = 'GET_GAMES_AND_TRANSFORM'\nexport const GET_GAMES_IN_TIMESPAN = 'GET_GAMES_IN_TIMESPAN'\n\nexport const EDIT_GAME_INFO = 'EDIT_GAME_INFO'\nexport const LOCK_GAME_INFO = 'LOCK_GAME_INFO'\nexport const UNLOCK_GAME_INFO = 'UNLOCK_GAME_INFO'\nexport const RESET = 'RESET'\n\nexport const SHOW_UNAVAILABLE_MEMBERS = 'SHOW_UNAVAILABLE_MEMBERS'\nexport const HIDE_UNAVAILABLE_MEMBERS = 'HIDE_UNAVAILABLE_MEMBERS'\nexport const MAKE_MEMBER_AVAILABLE = 'MAKE_MEMBER_AVAILABLE'\nexport const ADD_NON_MEMBER = 'ADD_NON_MEMBER'\nexport const MAKE_MEMBER_UNAVAILABLE = 'MAKE_MEMBER_UNAVAILABLE'\nexport const MAKE_TEN_BUCKER_UNAVAILABLE = 'MAKE_TEN_BUCKER_UNAVAILABLE'\nexport const SHOW_NON_MEMBERS = 'SHOW_NON_MEMBERS'\nexport const HIDE_NON_MEMBERS = 'HIDE_NON_MEMBERS'\n\nexport const SHOW_FUTURE = \"SHOW_FUTURE\"\nexport const SHOW_PAST = \"SHOW_PAST\"\n\nexport const SHOW_TAB = \"SHOW_TAB\"\nexport const RESET_TABS = \"RESET_TABS\"\n\nexport const EDIT_FORM = \"EDIT_FORM\"\nexport const UPDATE_FIELD = \"UPDATE_FIELD\"\n\nexport const FETCH_PLAYERS = \"FETCH_PLAYERS\"\nexport const DELETE_PLAYER = \"DELETE_PLAYER\"\nexport const ADD_PLAYER = \"ADD_PLAYER\"\nexport const EDIT_PLAYER = \"EDIT_PLAYER\"\n\nexport const CREATE_GAME_ROSTER = \"CREATE_GAME_ROSTER\"\n\nexport const TRIGGER_PICK_MODE = \"TRIGGER_PICK_MODE\"\nexport const TRIGGER_DRAFT_MODE = \"TRIGGER_DRAFT_MODE\"\nexport const SET_PICK = 'SET_PICK'\n\nexport const SET_DATE_RANGE = \"SET_DATE_RANGE\"\n\nexport const SHOW_GAMES_TO_STATS = \"SHOW_GAMES_TO_STATS\"\nexport const SET_YEARS_VISIBILITIES = \"SET_YEARS_VISIBILITIES\"\nexport const ADD_GAME_TO_SELECTED = \"ADD_GAME_TO_SELECTED\"\nexport const REMOVE_GAME_FROM_SELECTED = \"REMOVE_GAME_FROM_SELECTED\"\nexport const ADD_PLAYER_TO_SELECTED = \"ADD_PLAYER_TO_SELECTED\"\nexport const REMOVE_PLAYER_FROM_SELECTED = \"REMOVE_PLAYER_FROM_SELECTED\"\nexport const TOGGLE_RECORDS_VIEWS = \"TOGGLE_RECORDS_VIEWS\"\n\nexport const ADD_PLAYER_RECORDS = \"ADD_PLAYER_RECORDS\"\nexport const REMOVE_PLAYER_RECORDS = \"REMOVE_PLAYER_RECORDS\"\nexport const REPLACE_PLAYERS_RECORDS = \"REPLACE_PLAYERS_RECORDS\"\n\nexport const SORT_AZ_ASC = \"SORT_AZ_ASC\"\nexport const SORT_AZ_DESC = \"SORT_AZ_DESC\"\nexport const SORT_GAMES_ASC = \"SORT_GAMES_ASC\"\nexport const SORT_GAMES_DESC = \"SORT_GAMES_DESC\"\nexport const SORT_WINS_ASC = \"SORT_WINS_ASC\"\nexport const SORT_WINS_DESC = \"SORT_WINS_DESC\"\nexport const SORT_LOSSES_ASC = \"SORT_LOSSES_ASC\"\nexport const SORT_LOSSES_DESC = \"SORT_LOSSES_DESC\"\nexport const SORT_TIES_ASC = \"SORT_TIES_ASC\"\nexport const SORT_TIES_DESC = \"SORT_TIES_DESC\"\nexport const SORT_GOALS_ASC = \"SORT_GOALS_ASC\"\nexport const SORT_GOALS_DESC = \"SORT_GOALS_DESC\"\nexport const SORT_GPG_ASC = \"SORT_GPG_ASC\"\nexport const SORT_GPG_DESC = \"SORT_GPG_DESC\"\nexport const SORT_ASSISTS_ASC = \"SORT_ASSISTS_ASC\"\nexport const SORT_ASSISTS_DESC = \"SORT_ASSISTS_DESC\"\nexport const SORT_APG_ASC = \"SORT_APG_ASC\"\nexport const SORT_APG_DESC = \"SORT_APG_DESC\"\n\n// export const SET_CHART_DATA = \"SET_CHART_DATA\"\nexport const TOGGLE_SELECT_ALL = \"TOGGLE_SELECT_ALL\"\n// export const TOGGLE_POSITIONS = \"TOGGLE_POSITIONS\"\n\nexport const BATCH_CARD_UPDATE = \"BATCH_CARD_UPDATE\"\nexport const BATCH_CHART_UPDATE = \"BATCH_CHART_UPDATE\"\nexport const BATCH_UNSELECT = \"BATCH_UNSELECT\"\nexport const BATCH_GAMES = \"BATCH_GAMES\"\nexport const UNSELECT_ALL_GAMES = \"UNSELECT_ALL_GAMES\"\n\nexport const TOGGLE_PLAYER_MODAL = \"TOGGLE_PLAYER_MODAL\"\nexport const FILTER_PLAYER_RECORDS_BY_TYPE = \"FILTER_PLAYER_RECORDS_BY_TYPE\"\nexport const FILTER_PLAYER_RECORDS_BY_GAMES = \"FILTER_PLAYER_RECORDS_BY_GAMES\"\n\n// USERS\nexport const UPDATE_USER_FORM = \"UPDATE_USER_FORM\"\nexport const ADD_NEW_USER = \"ADD_NEW_USER\"\nexport const SIGN_MODE = \"SIGN_MODE\"\nexport const AUTHENTICATE = \"AUTHENTICATE\"","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchGames } from '../../js/actions/gameActions'\nimport { getGame } from '../../js/actions/gameActions'\nimport { deleteGame } from '../../js/actions/gameActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass GameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleteGame: true\n        }\n    }\n    componentDidMount() {\n        this.props.fetchGames();\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    /* \n    componentDidUpdate() {\n        console.log(this.state)\n    } \n    */\n    \n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n    }\n\n    deleteGameFunc = (gameId) => {\n        this.props.deleteGame(gameId);\n    }\n\n    render() {\n        return (\n            <div className=\"show_games\">\n            <h2 className=\"h2_main\">{this.props.dateHeader} Games</h2>\n                <div className=\"list-management\">\n                    {/* showing the upcoming games when mode has been  */}\n                    {this.props.dateHeader === \"Upcoming\" ? (\n                        // need case for when there is no game scheduled\n                        this.props.upcomingGames.length > 0 ?\n                        this.props.upcomingGames\n                            .map(game =>\n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color \" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n                    ) : \n                    (\n                        this.props.pastGames.length > 0 ?\n                        this.props.pastGames\n                            .map(game => \n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color\" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n\n                    )}\n\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    games: state.games.games,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    upcoming_visibility: state.display.upcoming_visibility,\n    past_visibility: state.display.past_visibility,\n    lockStatus: state.games.lockStatus,\n    upcomingGames: state.games.upcomingGames,\n    pastGames: state.games.pastGames\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { fetchGames, getGame, deleteGame }) (GameList)\n","import { FETCH_PLAYERS, EDIT_PLAYER, DELETE_PLAYER, ADD_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from './types';\nimport API from \"../../utils/API\"\n\nexport const fetchPlayers = () => dispatch => {\n    API.getPlayers()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_PLAYERS,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deletePlayer = (id) => dispatch => {\n    API.deletePlayer(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addPlayer = (data) => dispatch => {\n    console.log(\"data received: \", data)\n    API.addPlayer(data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n                }\n            else if (res.data.errors) {\n                console.log(res.data.message)\n            }\n            else {\n                let newPlayer = res.data\n                if(newPlayer.name !== \"MongoError\")\n                    {\n                    console.log(\"Player successfully added to db\")\n                    dispatch({\n                        type: ADD_PLAYER,\n                        payload: res.data\n                    })\n\n                    }\n                else {\n                    console.log(\"Error Message: the app encounted an error creating this player in the database\")\n                    }\n                }\n            })\n        }\n\nexport const editPlayer = (id, data) => dispatch => {\n    API.editPlayer(id, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: EDIT_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n        dispatch({\n            type: SHOW_TAB,\n            payload: id\n        })\n    }\n\nexport const resetTabs = (id) => dispatch => {\n    dispatch({\n        type: RESET_TABS\n    })\n}\n\nexport const editForm = (player) => dispatch => {\n    dispatch({\n        type: EDIT_FORM,\n        payload: player\n        })\n    }\n    \nexport const updateField = (player) => dispatch => {\n    dispatch({\n        type: UPDATE_FIELD,\n        payload: player \n        })\n    }\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addGame } from '../../js/actions/gameActions'\nimport { fetchPlayers } from '../../js/actions/playerActions'\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { loadState } from \"../sessionStorage\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n\nconst moment = require(\"moment\");\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: \"\",\n            createGame: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        \n            this.setState(...this.state.date, privileges)\n        \n        }\n\n    handleChange(date) {\n        this.setState({\n            dateSelected: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let members = this.props.players.filter((player) => player.membershipStatus === \"Member\")\n        let membersWithGameInfo = members.map((member) => {return {\n            membershipStatus: member.membershipStatus,\n            _id: member._id,\n            name: member.name,\n            playerLevel: member.playerLevel,\n            preferredPosition: member.preferredPosition,\n            gameInfo: this.props.gameInfo\n        }})\n        let dateOfGame = moment(this.state.dateSelected).format(\"YYYY-MM-DD\")\n        this.props.addGame(dateOfGame, membersWithGameInfo)\n    }\n\n\n    render() {\n        return (\n            <div id=\"schedule_game\">\n                <div>\n                    <h2 className=\"h2_main\">Schedule a game</h2>\n                </div>\n\n                <div>\n                {this.state.createGame === true \n                    ? <form className=\"game_form\" onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                            <div className=\"calendar_component\">\n                                <DatePicker \n                                    placeholderText=\"MM DD YYYY\"\n                                    selected={this.state.dateSelected}\n                                    onChange={this.handleChange}\n                                    value={this.state.value}\n                                    />\n                            </div>\n                            \n                                <div className=\"submit_button\">\n                                    <button id=\"date_submit\" className=\"contrast_color content_button\" name=\"submit\" type=\"submit\" >Submit</button>\n                                </div> \n                            \n                        </div>\n                        </form> \n                    : <p className=\"no_game\">Login as an admin to schedule games and create team line-ups!</p> }\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    game: state.games.game,\n    players: state.players.players,\n    gameInfo: state.games.gameInfo\n    })\n\n\nexport default connect(mapStateToProps, { addGame, fetchPlayers }) (Calendar)\n    ","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { addNonMember } from '../../js/actions/gameActions'\nimport { setMemberUnavailable } from '../../js/actions/gameActions'\nimport { setTenBuckerUnavailable } from '../../js/actions/gameActions'\nimport { setAvailable } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    setUnavailable(playerID, playerStatus) {\n        let gameId = this.props.draft._id\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (playerStatus === \"Member\"){\n            this.props.setMemberUnavailable(gameId, {player: playerID, gameInfo: {available: false, team: \"N/A\"}})\n            }\n        else {\n            let gameId = this.props.draft._id\n            let gameData = {...this.props.draft, players: this.props.draft.players.filter(player => player._id !== playerID)}\n            this.props.setTenBuckerUnavailable(gameId, gameData, playerID)\n            }    \n        }\n    }\n\n    makeAvailable(playerID) {\n        let gameId = this.props.draft._id;\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            this.props.setAvailable(gameId, {player: playerID, gameInfo: {available: true, team: \"N/A\"}})    \n            }\n    }\n\n    assignTeam(playerID, team){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {team: team}})\n            }\n    }\n\n    addTenBuckerToDraft(player){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            let tenBuckerToAdd = {\n                membershipStatus: player.membershipStatus,\n                _id: player._id,\n                name: player.name,\n                playerLevel: player.playerLevel,\n                preferredPosition: player.preferredPosition,\n                gameInfo: this.props.gameInfo\n                }   \n            this.props.addNonMember(gameId, tenBuckerToAdd, this.props.draft.players)\n            }\n\n    }\n\n    render() {\n        return (\n            <div className=\"universal_drafter\">\n                <div className=\"col_no_bootstrap dark_drafted_players\">\n                    <h1 className=\"h1_main col_header\"><br/>Dark</h1>\n                    {this.props.draft.players ? (this.props.draft.players\n                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div\" key={player._id}>\n                                        <button className=\"player_button\">{player.name}</button>\n                                        {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                        {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Data has not loaded yet</p>)\n                        }\n                </div>\n                <div className=\"col_no_bootstrap undrafted_players\">\n                <h1 className=\"h1_alternate col_header game_date\">{this.props.gameDate}<br/><br/></h1>\n                    {this.props.draft.players ? (this.props.draft.players\n                        .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"N/A\")\n                        .map(player => {\n                            return (\n                                <div className=\"player_div leaning_center_div\" key={player._id}>\n                                    {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"Dark\")} /> : null }\n                                    <button className=\"player_button plain_color\">{player.name}</button>\n                                    {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                    {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"White\")} /> : null }\n                                </div>\n                                )\n                                })\n                        ) : (<p>Data has not loaded yet</p>)\n                    }\n\n                    {this.props.unavailableMembers ? (this.props.unavailableMembers\n                        .map(player => {\n                            return (\n                                <div className=\"player_div\" key={player._id}>   \n                                    <button className=\"player_button unavailable\" onClick={() => this.state.changeAvailability === true ? this.makeAvailable(player._id) : null } >{player.name}</button>\n                                </div>\n                                )\n                                })\n                        ) : (<p>Unable to retrieve unavailable Members</p>)\n                    }\n\n                    {this.props.notPlayingNonMembers ? (this.props.notPlayingNonMembers\n                        .map(player => {\n                            return (\n                                <div className=\"player_div\" key={player._id}>   \n                                    <button className=\"player_button negative_color\" onClick={() => this.state.changeAvailability === true ? this.addTenBuckerToDraft(player) : null }>{player.name}</button>\n                                </div>\n                                )\n                                })\n                        ) : (<p>Unable to retrieve Ten Buckers</p>)\n                    }\n\n\n                </div>\n                <div className=\"col_no_bootstrap white_drafted_players\">\n                \n                <h1 className=\"h1_main col_header\"><br/>White</h1>\n                    {this.props.draft.players ? (this.props.draft.players\n                                .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                .map(player => {\n                                    return (\n                                        <div className=\"player_div\" key={player._id}>\n                                            {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} size=\"2x\" onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                            <button className={\"player_button\"}>{player.name}</button>\n                                            {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                        </div>\n                                        )\n                                        })\n                                ) : (<p>Data has not loaded yet</p>)\n                            }\n                </div>\n            </div>\n\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, addNonMember, setMemberUnavailable, setTenBuckerUnavailable, setAvailable, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    addPick(team, playerID){\n        let gameId = this.props.draft._id\n        switch (team){\n            case \"Dark\":\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {player: playerID, gameInfo: {darkPickNum: this.props.picked.length + 1}})\n            break;\n\n            case \"White\":\n            this.props.setPick(\"White\", gameId, {player: playerID, gameInfo: {whitePickNum: this.props.picked.length + 1}})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    removePick(team, player) {\n        let gameId = this.props.draft._id\n        // we remove the player from the array of ranked players\n        let indexOfPlayerToRemove = this.props.picked.indexOf(player)\n        this.props.picked.splice(indexOfPlayerToRemove,1)\n        // we will also need to send the unavailable players, otherwise their availability cannot be reset later on\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        switch (team){\n            case \"Dark\":\n            // after removing the player from the array of ranked players, we reset their rank via their index in the array\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.darkPickNum = index + 1 }\n            })\n            // the rank of the player initially selected is reset to 0\n            player.gameInfo.darkPickNum = 0\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            case \"White\":\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.whitePickNum = index + 1 }\n            })\n            player.gameInfo.whitePickNum = 0\n            this.props.setPick(\"White\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    rankOneUp(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit > 0) {\n            switch (this.props.draftMode) {\n                case \"Dark\": \n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n            }\n        }\n    }\n\n    rankOneDown(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit < this.props.picked.length - 1) {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"picker_mode\"> \n                    <div className=\"col_no_bootstrap set_picks_col\">\n                        <h1 className=\"h1_main pick_col_header unpicked_list_header\">Set {this.props.draftMode} Picks</h1>\n                        <div className=\"list_of_unpicked_players\">\n                        {/* Mapping the unranked Players */}\n                        {this.props.unpicked ? (this.props.unpicked\n                            .map(player => {\n                                return (\n                                    <div className=\"player_picking_div\" key={player._id}>\n                                        <button className=\"content_button player_picking lighter_color\"  onClick={() => this.addPick(this.props.draftMode, player._id)} >{player.name}</button>\n                                        <FontAwesomeIcon icon=\"angle-right\" className=\"pick_arrow arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div>\n                        <div className=\"col_no_bootstrap ranks_col\">\n                            <h1 className=\"h1_main pick_col_header picked_list_header\">Ranks</h1>\n                            {/* mapping the ranked available players */}\n                            <div className=\"list_of_picked_players\">\n                            {this.props.picked ? (this.props.picked\n                                .map(player => {\n                                    return (    \n                                        <div className=\"player_picking_div\" key={player._id}>\n                                            <button className=\"content_button player_button darker_color\">{player.name}</button>\n                                            <FontAwesomeIcon icon=\"minus-circle\" className=\"remove remove_pick\" onClick={() => this.removePick(this.props.draftMode, player)} />\n                                            <div className=\"sorter\"> \n                                                <FontAwesomeIcon icon=\"chevron-up\" className=\"up_arrow\" onClick={() => this.rankOneUp(player)}/>\n                                                <FontAwesomeIcon icon=\"chevron-down\" className=\"down_arrow\" onClick={() => this.rankOneDown(player)}/>\n                                            </div>\n                                        </div>\n                                    )\n                                } )\n                            ) : ( <p>Bogus data</p> )\n                            }\n                            </div>\n                        </div> \n                </div>\n            </main>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    addPick(team, playerID){\n        let gameId = this.props.draft._id\n        switch (team){\n            case \"Dark\":\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {player: playerID, gameInfo: {darkPickNum: this.props.picked.length + 1}})\n            break;\n\n            case \"White\":\n            this.props.setPick(\"White\", gameId, {player: playerID, gameInfo: {whitePickNum: this.props.picked.length + 1}})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    removePick(team, player) {\n        let gameId = this.props.draft._id\n        // we remove the player from the array of ranked players\n        let indexOfPlayerToRemove = this.props.picked.indexOf(player)\n        this.props.picked.splice(indexOfPlayerToRemove,1)\n        // we will also need to send the unavailable players, otherwise their availability cannot be reset later on\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        switch (team){\n            case \"Dark\":\n            // after removing the player from the array of ranked players, we reset their rank via their index in the array\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.darkPickNum = index + 1 }\n            })\n            // the rank of the player initially selected is reset to 0\n            player.gameInfo.darkPickNum = 0\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            case \"White\":\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.whitePickNum = index + 1 }\n            })\n            player.gameInfo.whitePickNum = 0\n            this.props.setPick(\"White\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    rankOneUp(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit > 0) {\n            switch (this.props.draftMode) {\n                case \"Dark\": \n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n            }\n        }\n    }\n\n    rankOneDown(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit < this.props.picked.length - 1) {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"picker_mode\"> \n                <div className=\"col_no_bootstrap ranks_col\">\n                        {this.props.picked.length !== 0 ? <h1 className=\"h1_main pick_col_header picked_list_header\">Ranks</h1> : null}\n                        {/* mapping the ranked available players */}\n                        <div className=\"list_of_picked_players\">\n                        {this.props.picked ? (this.props.picked\n                            .map(player => {\n                                return (    \n                                    <div className=\"player_picking_div\" key={player._id}>\n                                        <div className=\"pick_number\">\n                                            {this.props.draftMode === \"Dark\" ? player.gameInfo.darkPickNum : player.gameInfo.whitePickNum}\n                                        </div>\n                                        <div className=\"sorting-down\">     \n                                            <FontAwesomeIcon icon=\"chevron-down\" className=\"sm_down_arrow\" onClick={() => this.rankOneDown(player)}/>\n                                        </div>\n                                        <div className=\"pick_name_button\">\n                                            <button className=\"content_button player_button darker_color\">{player.name}</button>\n                                        </div>\n                                        <div className=\"sorting-up\">     \n                                            <FontAwesomeIcon icon=\"chevron-up\" className=\"sm_up_arrow\" onClick={() => this.rankOneUp(player)}/>\n                                        </div>\n                                        <div className=\"sm_remove_pick\">\n                                            <FontAwesomeIcon icon=\"minus-circle\" className=\"remove \" onClick={() => this.removePick(this.props.draftMode, player)} />\n                                        </div>\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div> \n\n                    <div className=\"col_no_bootstrap set_picks_col\">\n                        {this.props.unpicked.length !== 0 ? <h1 className=\"h1_main pick_col_header unpicked_list_header\">Pick {this.props.draftMode} Order</h1> : null }\n                        <div className=\"list_of_unpicked_players\">\n                        {/* Mapping the unranked Players */}\n                        {this.props.unpicked ? (this.props.unpicked\n                            .map(player => {\n                                return (\n                                    <div className=\"player_to_pick_div\" key={player._id}>\n                                        <button className=\"content_button player_picking lighter_color\"  onClick={() => this.addPick(this.props.draftMode, player._id)} >{player.name}</button>\n                                        <FontAwesomeIcon icon=\"plus-circle\" className=\"pick_arrow_plus arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div>\n                    \n                </div>\n            </main>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport _ from \"underscore\"\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { reset } from '../../js/actions/gameActions'\nimport { triggerPickMode } from '../../js/actions/gameActions'\nimport { triggerDraftMode } from '../../js/actions/gameActions'\n\nclass GameOptionsBottom extends Component {\n\n    resetTeams(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                    let resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for Dark team\n                            gameInfo: {...member.gameInfo, darkPickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                break;\n\n                case \"White\":\n                    resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for White team\n                            gameInfo: {...member.gameInfo, whitePickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                return;\n\n                case \"Draft\":\n                // we filter the members (but should be done from the player db, not the games.draft)\n                    resetPlayers = this.props.players\n                    .filter((player) => player.membershipStatus === \"Member\")\n                    .map((member) => {return {\n                        membershipStatus: member.membershipStatus,\n                        _id: member._id,\n                        name: member.name,\n                        playerLevel: member.playerLevel,\n                        preferredPosition: member.preferredPosition,\n                        // Resetting teams only\n                        gameInfo: {...member.gameInfo, team: \"N/A\"}\n                        }})\n                this.props.reset(game, {players: _.sortBy(resetPlayers, \"name\")})\n                break;\n                \n                default:\n                return;\n                }\n            }\n        }\n\n    autodraft(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (this.props.draftMode === \"Draft\") {\n                // Autodraft feature: separates all players by level, randomly assigns them to dark or white team\n                let mixedRosters = [];\n                let arrayOfAvailablePlayers = this.props.players.filter(player => player.gameInfo.available === true)\n                // recreating our array by assigning each player to its level\n                let output = arrayOfAvailablePlayers.reduce((levels,player) => {\n                    levels[player.playerLevel] = levels[player.playerLevel] || [];\n                    levels[player.playerLevel].push({\n                        player\n                    });\n                    return levels;\n                },[])\n                \n                let numOutput = Object.keys(output).length;\n                \n                for (let i = 0; i < numOutput; i++) {\n                    // running the randomize function for each level\n                    let playersByLevel = Object.entries(output)[i]\n                    // the \"level\" is the first argument in the array, the next one is the players: that's how we access them\n                    let playersArray = playersByLevel[1]\n                    // we randomize via a custom recursive function (could also try underscore, but on such a small array, it\n                    // I doubt it makes any difference)\n                    this.randomize(playersArray, mixedRosters)\n                    }\n                    \n                for (let i = 0; i < mixedRosters.length; i++) {\n                    // assigning different team to every other player\n                    if (i%2 === 0) {mixedRosters[i].player.gameInfo.team = \"Dark\";}\n                    else {mixedRosters[i].player.gameInfo.team = \"White\"}\n                    }\n                    \n                    let arrayOfUnavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    // For a reason I haven't been able to figure out, each player information is nested \n                    // under \"{player: }\" which we then need to remove\n                    let remappedAvailablePlayers = mixedRosters.map((player) => player.player)\n                    // Once this is done, we add the unavailable players since they need to be sent to the API as well (otherwise, they just can't be added back in the draft)\n                    let allPlayers = remappedAvailablePlayers.concat(arrayOfUnavailablePlayers)\n                    allPlayers = _.sortBy(allPlayers, \"name\") \n                    \n                this.props.editGameInfo(game, {players: allPlayers})\n                // the only purpose of calling this function is to verify that teams are balanced (level wise)\n                this.filterTeams(allPlayers, \"level\")\n                }\n                else {\n                    console.log(\"Error message: go to draft mode to draft teams\")\n                    }\n            }\n        }\n\n    // helper function to randomize an array (pushes/deletes to another array recursively, until it's empty) \n    randomize = (inputArray, outputArray) => {\n        if(inputArray.length > 0) {\n            let randomPlayer = inputArray[Math.floor(Math.random()*inputArray.length)];\n            let index = inputArray.indexOf(randomPlayer);\n            outputArray.push(randomPlayer);\n            inputArray.splice(index,1)\n            this.randomize(inputArray, outputArray);\n            }\n        }\n        \n    // function to filter array of player objects into teams used for quick control. \n    filterTeams = (arrayOfPlayerObjects, mode) => {\n        if (mode === \"level\") {\n            // filter player objects according to name of the team #1\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, \"playerLevel\")\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, \"playerLevel\")\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"playerLevel\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}`);\n                })\n            }\n        else {\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, (obj) => obj.gameInfo.darkPickNum)\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (picked for Dark: #${e.gameInfo.darkPickNum})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, (obj) => obj.gameInfo.whitePickNum)\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (picked for White: #${e.gameInfo.whitePickNum})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"name\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}\\nPicked for Dark: #${e.gameInfo.darkPickNum})\\nPicked for White: #${e.gameInfo.whitePickNum})`)//.\\nPicked in position: ${e.gameInfo.captain2Pick})`);\n                })\n            }\n        }\n    \n    toggleMode(currentMode, team){\n        if (currentMode === team) {\n            this.props.triggerDraftMode()\n        }\n        else {\n            this.props.triggerPickMode(team)\n        }\n    }\n    // helper function to test if a pick is eligible to be pushed to the ranked array. If not, moves on to the next pick. \n    testPick = (inputObject, rankedPlayers) => {\n        let index = 0;\n        let picks = inputObject.picks;\n        if (rankedPlayers.indexOf(picks[index]) !== -1) {\n            picks.splice(index,1);\n            this.testPick(inputObject, rankedPlayers);\n            }\n        else {\n            let nameOfTeam = inputObject.team;\n            // assigns the name of the team to the drafted player (to filter later on)\n            picks[index].gameInfo.team = nameOfTeam;\n            // takes the pick, pushes it to the output array\n            rankedPlayers.push(picks[index]);\n            // removes the pick from the array of picks\n            picks.splice(index,1);\n            }\n        }\n\n    // function to create a \"serpentine\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 has the next 2 picks, etc. until everyone is drafted\n    serpentineDraft = (game) => {\n        // Serpentine draft sends an object to \"testPick\" to figure if a player has already been drafted. \n        // If not, the player in question gets stored in the array of drafter players (and so on, recursively). \n        // For this to happen, we need to format our objects\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        // the function will error if we try to run it more times than players have been picked. \n        // Therefore, we need a pattern to determine how many times it should be ran\n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n            // there are 4 turns to complete a round\n            let turns = 4;\n            let modulo = num % turns;\n            let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                    // and complete the rosters one player at a time\n                    switch (modulo !== 0) {\n                        case modulo === 1:\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        case modulo === 2:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        break;\n                        case modulo === 3:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        default:\n                        return;\n                        }\n                    }\n                this.filterTeams(rankedPlayers, \"pick\")\n                // we re-add the unavailable players, otherwise they cannot be reset later on\n                let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    \n                let allPlayers = rankedPlayers.concat(unavailablePlayers)\n                this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n    \n    // function to create an \"alternate\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 drafts, etc. until everyone is drafted\n    alternateDraft = (game) => {\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        \n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n        // there are 2 turns to complete a round\n        let turns = 2;\n        let modulo = num % turns;\n        let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                // and complete the rosters with one more pick\n                this.testPick(darkPicks, rankedPlayers);\n                }\n            this.filterTeams(rankedPlayers, \"pick\")\n            // we re-add the unavailable players, otherwise they cannot be reset later on\n            let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                        \n            let allPlayers = rankedPlayers.concat(unavailablePlayers)\n            this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom + \" game_options_bottom\"}>\n                <div className={this.props.visibility.bottom + \" reduced_container\"}>\n                        <div className=\"game_options_container\">\n                            <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"Dark\")}>{this.props.pickButtons.left}</button> \n                            <button className=\"content_button contrast_color pick_option\" onClick={() => this.resetTeams(this.props.gameDate)}>Reset</button> \n                            <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"White\")}>{this.props.pickButtons.right}</button> \n                        </div>\n                        <br />\n                        <div className={this.props.visibility.top + \" game_options_container\"}>\n                            <button className=\"content_button darker_color draft_option\" onClick={()=> this.autodraft(this.props.gameDate)} >Autodraft</button>\n                            <button className=\"content_button darker_color draft_option\" onClick={()=> this.alternateDraft(this.props.gameDate)}>Alternate Draft</button> \n                            <button className=\"content_button darker_color draft_option\" onClick={() => this.serpentineDraft(this.props.gameDate)}>Serpentine Draft</button> \n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    players: state.games.draft.players,\n    lockStatus: state.games.lockStatus,\n    gameInfo: state.games.gameInfo,\n    draftMode: state.games.draftMode,\n    pickButtons: state.games.pickButtons\n})\n\nexport default connect(mapStateToProps, { editGameInfo, reset, triggerPickMode, triggerDraftMode }) (GameOptionsBottom)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { showUnavailable } from '../../js/actions/gameActions'\nimport { hideUnavailable } from '../../js/actions/gameActions'\nimport { showNonMembers } from '../../js/actions/gameActions'\nimport { hideNonMembers } from '../../js/actions/gameActions'\n\nclass GameOptionsTop extends Component {\n    \n    unavailable(action){\n        if (action === \"Show\") {\n            /*let members = this.props.players.filter(player => player.membershipStatus === \"Member\")\n            let playingMembers = this.props.gameParticipants.map(player => player._id)\n            let notPlayingMembers = members.filter(player => playingMembers.indexOf(player._id) === -1)\n            console.log(\"notPlayingMembers: \", notPlayingMembers)\n            // this.props.showUnavailable(notPlayingMembers)*/\n            this.props.showUnavailable()\n        }\n        else {\n            this.props.hideUnavailable()\n        }\n    }\n    tenBuckers(action){\n        /* This filters all players in the DB according to their membershipStatus\n        It then gets the id of all ten_buckers already playing (that we set when we fetch the game data in GameList.js\n        via the reducer). We check the former against the latter to see who's left to potentially add */\n        if (action === \"Show\") {\n            let tenBuckers = this.props.players.filter((player) => player.membershipStatus !== \"Member\")\n            let arrayOfIds = this.props.playingNonMembers.map(player => player._id)    \n            let newTenBuckers = tenBuckers.filter((player) => arrayOfIds.indexOf(player._id) === -1)\n            this.props.showNonMembers(tenBuckers, newTenBuckers)\n        }\n        else {\n            this.props.hideNonMembers()\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"container button_container\">\n                <button className=\"content_button darker_color game_options\" onClick={()=> this.unavailable(this.props.showingUnavailableMembers)}>{this.props.showingUnavailableMembers} Unavailable</button> \n                <button className=\"content_button darker_color game_options\" onClick={()=> this.tenBuckers(this.props.showingNonPlayingTenBuckers)}>{this.props.showingNonPlayingTenBuckers} Non-Members</button> \n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    players: state.players.players,\n    gameParticipants: state.games.draft.players,\n    playingNonMembers: state.games.playingNonMembers,\n    showingNonPlayingTenBuckers: state.games.showingNonPlayingTenBuckers,\n    showingUnavailableMembers: state.games.showingUnavailableMembers\n})\n\nexport default connect(mapStateToProps, { showUnavailable, hideUnavailable, showNonMembers, hideNonMembers }) (GameOptionsTop)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { lockGameInfo } from \"../js/actions/gameActions\"\nimport { unlockGameInfo } from \"../js/actions/gameActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Locker extends Component {\n\n    lockGame(game) {\n        this.props.lockGameInfo(game)\n    }\n\n    unlockGame(game){\n        this.props.unlockGameInfo(game)\n    }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom === \"visible\" ? \"visible\" : \"hidden\"}>\n                <div className=\"text-center lock_icons_container\">\n                    <div className=\"left_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"locked content_button lock\" : \"unlocked content_button lock\"} onClick={() => this.unlockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"unlock-alt\" /></button> \n                    </div>\n                    <div className=\"right_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"unlocked content_button lock\" : \"locked content_button lock\"} onClick={() => this.lockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"lock\"/></button> \n                    </div>\n                </div>\n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    // noStatsMessage: state.stats.visibility,\n})\n\nexport default connect(mapStateToProps, { lockGameInfo, unlockGameInfo }) (Locker)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleGames } from \"../js/actions/displayActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport GameList from \"../components/DraftPageComp/GameList.js\";\nimport Calendar from \"../components/DraftPageComp/Calendar.js\";\nimport Drafter from \"../components/DraftPageComp/Drafter.js\"\nimport Picker from \"../components/DraftPageComp/Picker.js\"\nimport SmallScreenPicker from \"../components/DraftPageComp/SmallScreenPicker.js\"\nimport GameOptionsBottom from \"../components/DraftPageComp/GameOptionsBottom.js\"\nimport GameOptionsTop from \"../components/DraftPageComp/GameOptionsTop.js\"\nimport Locker from \"../components/Locker.js\"\nimport { loadState } from \"../components/sessionStorage\"\n\nconst screenSize = window.innerWidth\nclass Draft extends Component { \nconstructor(props) {\n    super(props);\n    this.state = {\n        changeLock: true\n    }\n}\n\ncomponentDidMount() {\n    const privileges = loadState()\n    this.setState(privileges)\n    console.log(screenSize)\n\n}\n\ntoggleGamesFunc(currentlyShowing) {\n    this.props.toggleGames(currentlyShowing)\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Draft Teams</h1>\n            <div className= \"organizer\">\n                <div><Calendar/></div>\n                <div><GameList/></div>\n            </div>\n            <div className=\"game_toggle_container\">\n                <button className=\"contrast_color change_list_display\" onClick={() => this.toggleGamesFunc(this.props.showing)}> {this.props.buttonMsg} Games</button>\n            </div>\n        </div>\n        <div className={\"main_main \" + this.props.visibility.top}>\n            <GameOptionsTop />\n        </div>\n        <main className={\"main_main \" + this.props.visibility.main}>\n            {this.props.draftMode === \"Draft\" ? <Drafter /> : screenSize > 500 ? <Picker /> : <SmallScreenPicker />}\n        </main>\n        <footer className={\"main_main \" + this.props.visibility.bottom}>\n            <GameOptionsBottom />\n            {this.state.changeLock === true ? <Locker /> : null }\n        </footer>\n    </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    showing: state.display.showing,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    visibility: state.games.visibility,\n    draftMode: state.games.draftMode,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleGames} ) (Draft)\n","import { SHOW_FUTURE, SHOW_PAST } from './types';\n\nexport const toggleGames = (currentState) => dispatch => {\n    if (currentState === \"past\") {\n        dispatch({\n            type: SHOW_FUTURE\n        })\n    }\n    else {\n        dispatch({\n            type: SHOW_PAST\n        })\n    }\n    }","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addPlayer } from '../../js/actions/playerActions'\nimport { editPlayer } from '../../js/actions/playerActions'\nimport { resetTabs } from '../../js/actions/playerActions'\nimport { updateField } from '../../js/actions/playerActions'\n\nimport { loadState } from \"../sessionStorage\"\n\nclass Form extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            createPlayer: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    componentDidMount() {\n        const privileges = loadState()\n        this.setState(privileges)\n    }\n    handleCancel(event) {\n        event.preventDefault()\n        this.props.resetTabs()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedPlayer = {...this.props.player, [name]: value}\n        this.props.updateField(editedPlayer)\n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        /* If a player is a goalie, their level needs to be set as \"Goalie\" */\n        let assignedLevel;\n        if ( this.props.player.preferredPosition === \"Goalie\") {assignedLevel = \"Goalie\"}\n        else {assignedLevel = this.props.player.playerLevel}\n        let newPlayer = {\n            name: this.props.player.name,\n            fullName: this.props.player.fullName,\n            playerLevel: assignedLevel,\n            preferredPosition: this.props.player.preferredPosition,\n            membershipStatus: this.props.player.membershipStatus,\n            email: this.props.player.email\n            }\n        \n        if (this.props.formMode === \"Add\") {\n            this.props.addPlayer(newPlayer)\n            }\n        else {\n            let id = this.props.player._id\n            this.props.editPlayer(id, newPlayer)\n        }\n\n        // go back to tab#1\n        this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n            {this.state.createPlayer === true ? \n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"name\"\n                                value= {this.props.player.name}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Full Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"fullName\"\n                                value= {this.props.player.fullName}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Preferred Position: </label>\n                            <select name=\"preferredPosition\" onChange={(event) => this.handleChange(event)} value={this.props.player.preferredPosition}>\n                                <option defaultValue=\"Forward\">Forward</option>\n                                <option value=\"Defense\">Defense</option>\n                                <option value=\"Goalie\">Goalie</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Membership Status:</label>\n                            <select name=\"membershipStatus\" onChange={(event) => this.handleChange(event)} value= {this.props.player.membershipStatus}>\n                                <option defaultValue=\"Member\">Member</option>\n                                <option value=\"Ten Bucker\">Ten Bucker</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\"> \n                            <label>Level: </label>\n                            <select name=\"playerLevel\" onChange={(event) => this.handleChange(event)} value= {this.props.player.playerLevel}>\n                                <option value=\"A+\">A+</option>\n                                <option value=\"A\">A</option>\n                                <option value=\"A-\">A-</option>\n                                <option defaultValue=\"B+\">B+</option>\n                                <option value=\"B\">B</option>\n                                <option value=\"B-\">B-</option>\n                                <option value=\"C+\">C+</option>\n                                <option value=\"C\">C</option>\n                                <option value=\"C-\">C-</option>\n                                <option value=\"D+\">D+</option>\n                                <option value=\"D\">D</option>\n                                <option value=\"D-\">D-</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Email: </label>\n                            <input \n                                type=\"text\" \n                                name=\"email\"\n                                value= {this.props.player.email}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        <div className=\"button_container\">\n                            <button type=\"submit\" value=\"Submit\" className=\"contrast_color\"> Submit </button>\n                            <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                        </div>\n                    </form>\n                </div> : \n            <div className=\"unfortunately\">\n                <p className=\"no_game\">Login as an admin to add players!</p>\n            </div> }\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tab1,\n    tab2: state.players.tab2,\n    panel1: state.players.panel1,\n    panel2: state.players.panel2,\n    player: state.players.player,\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { addPlayer, editPlayer, resetTabs, updateField }) (Form)","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\nimport { loadState } from '../sessionStorage'\n\nclass MemberList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editMember: true,\n            deleteMember: false,\n        }\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        console.log(\"Need a warning that deleting is permanent...\")\n        console.log(\"Active/Inactive?\")\n        // this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"player_table\">\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus === \"Member\").map(player => {\n                            return (\n                                <tr key={player._id} className=\"player_table_row\"> \n                                    <td className=\"player_table_data player_table_name\">{player.name}</td>\n                                    <td className=\"player_table_data player_manage_buttons\"> \n                                        {this.state.editMember === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button>}\n                                        {this.state.deleteMember === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (MemberList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\n\nimport { loadState } from '../sessionStorage'\n\nclass TenBuckerList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editTenBucker: true,\n            deleteTenBucker: false\n        }\n    }\n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"player_table\">\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus !== \"Member\").map(player => {\n                            return (\n                                <tr key={player._id} className=\"player_table_row\"> \n                                    <td className=\"player_table_data player_table_name\">{player.name}</td>\n                                    <td className=\"player_table_data player_manage_buttons\"> \n                                        {this.state.editTenBucker === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button> }\n                                        {this.state.deleteTenBucker === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>)\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (TenBuckerList)\n","\nimport React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from '../js/actions/playerActions';\n\nimport NavBar from \"../components/NavBar.js\";\nimport Form from \"../components/PlayerPageComp/Form.js\";\nimport MemberList from \"../components/PlayerPageComp/MemberList.js\"\nimport TenBuckerList from \"../components/PlayerPageComp/TenBuckerList.js\"\n\nclass Player extends Component {\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide_tab\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n        \nrender() {\n    return (\n    <div>\n        <NavBar />\n        <main className=\"main_alternate\">\n            <h1 className=\"h1_alternate\">Players</h1>\n            <div className=\"player_table_head\">\n                    <div className=\"tab_centering\">\n                        <span id=\"1\" className={\"tab \" + this.props.tab1} onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Members </span>\n                        <span id=\"2\" className={\"tab \" + this.props.tab2} onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Buckers </span>\n                        <span id=\"3\" className={\"tab \" + this.props.tab3} onClick={() => this.toggleStatus(\"3\", this.props.tab3) }> {this.props.formMode} </span>\n                    </div>\n            </div>\n                <section className= \"main_for_tab\">\n                    <span className={this.props.panel1 + \" full_tab_size\"}> <MemberList /> </span> \n                    <span className={this.props.panel2 + \" full_tab_size\"}> <TenBuckerList /> </span> \n                    <span className={this.props.panel3 + \" full_tab_size\"}> <Form /> </span> \n                </section>\n        </main>\n    </div>\n    \n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tabs[0],\n    tab2: state.players.tabs[1],\n    tab3: state.players.tabs[2],\n    panel1: state.players.panels[0],\n    panel2: state.players.panels[1],\n    panel3: state.players.panels[2],\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { toggleTabStatus }) (Player)\n","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES, \n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES,\n} from './types';\n\nimport API from \"../../utils/API\"\n\nconst moment = require(\"moment\");\n// need a separate function to fetch games within a time span\nexport const getGamesForRecords = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let arrayOfTenBuckerIDs = []\n                let allTenBuckers= res.data.map(game => game.players.filter(player => player.membershipStatus !== \"Member\"))\n                allTenBuckers.forEach(array => array.map(player => arrayOfTenBuckerIDs.push(player._id)))\n\n                dispatch({\n                    type: GET_GAMES_IN_TIMESPAN,\n                    payload: { \n                        games: res.data,\n                        allTenBuckers: arrayOfTenBuckerIDs\n                    }\n                })\n            }\n        })\n    }\n\n\nexport const toggleVisibility = (currentState) => dispatch => {\n    if (currentState === \"dead\") {\n        dispatch({\n            type: SHOW_GAMES_TO_STATS\n            })\n        }\n    }\n\nexport const getGamesAndTransform = () => dispatch => {\n    \n    const monthify = (string) => {\n        switch (string) {\n            case \"01\":\n            return string = \"January\"\n            \n            case \"02\":\n            return string = \"February\"\n            \n            case \"03\":\n            return string = \"March\"\n            \n            case \"04\":\n            return string = \"April\"\n            \n            case \"05\":\n            return string = \"May\"\n            \n            case \"06\":\n            return string = \"June\"\n            \n            case \"07\":\n            return string = \"July\"\n            \n            case \"08\":\n            return string = \"August\"\n            \n            case \"09\":\n            return string = \"September\"\n            \n            case \"10\":\n            return string = \"October\"\n            \n            case \"11\":\n            return string = \"November\"\n            \n            case \"12\":\n            return string = \"December\"\n            \n            default: \n            return\n\n        }\n        }\n\n    const yearString = (game) => game.substring(0, 4)\n    const monthString = (game) => game.substring(5,7)\n\n    const beautifyGames = (array) => {\n        let object =\n        array.reduce((difYears,game) => {\n            difYears[yearString(game._id)] = difYears[yearString(game._id)] || [];\n            difYears[yearString(game._id)].push(game);\n            return difYears;\n            },{} \n        )\n        let arrayOfObjects = []\n        for (let i = 0; i < Object.values(object).length; i++) {\n            // for each array of games of the object created by the first reduce\n            let remapped = Object.values(object)[i].reduce((difMonths, game) => {\n                // each game is pushed to a different array under the \"month\"\n                difMonths[monthify(monthString(game._id))] = difMonths[monthify(monthString(game._id))] || [];\n                difMonths[monthify(monthString(game._id))].push(game);\n                return difMonths;\n                },{}\n            )\n            // This separates the months into distinct arrays. We push them in a separate array, \n            // otherwise another year's games might overwrite the data\n            arrayOfObjects.push({[Object.keys(object)[i]]: remapped})\n            }\n            return arrayOfObjects\n        }\n\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let pastGames = res.data.filter(game => game._id <= moment().format(\"YYYY-MM-DD\"))\n                let reducedGames = beautifyGames(pastGames)\n                let years = Object.keys(Object.values(reducedGames)).map(e => [e] = \"visible\")\n                // console.log(\"indexes2: \", years)\n                dispatch({\n                    type: GET_GAMES_AND_TRANSFORM,\n                    payload: \n                        {\n                            game: reducedGames,\n                            visibility: years\n                        }\n                    })\n                }\n            })\n        }\n\nexport const setVisibility = (array) => dispatch => {\n    dispatch({\n            type: SET_YEARS_VISIBILITIES,\n            payload: array\n    })\n}\n\nexport const selectGame = (id) => dispatch => {\n    dispatch({\n        type: ADD_GAME_TO_SELECTED,\n        payload: id\n    })\n}\n\nexport const unselectGame = (game) => dispatch => {\n    dispatch({\n        type: REMOVE_GAME_FROM_SELECTED,\n        payload: game\n    })\n}\n\nexport const selectPlayer = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_TO_SELECTED,\n        payload: {selected: player}\n    })\n}\n\nexport const unselectPlayer = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_FROM_SELECTED,\n        payload: {selected: player}\n    })\n}\n// There has to be a better way to do this (based on the index, maybe?)\nexport const toggleViews = (currentStatus, element) => dispatch => {\n    if (currentStatus === \"visible\") {\n        dispatch({\n            type: TOGGLE_RECORDS_VIEWS,\n            payload: {\n                dates: \"dead\",\n                games: \"dead\",\n                players: \"dead\",\n                sort: \"dead\",\n                chart: \"dead\"\n            }\n        })}\n    else {\n        switch (element) {\n            case \"dates\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"visible\",\n                    games: \"dead\",\n                    players: \"dead\",\n                    sort: \"dead\",\n                    chart: \"dead\"\n                }\n            })\n            \n            break;\n            \n            case \"games\":\n                dispatch({\n                    type: TOGGLE_RECORDS_VIEWS,\n                    payload: {\n                        dates: \"dead\",\n                        games: \"visible\",\n                        players: \"dead\",\n                        sort: \"dead\",\n                        chart: \"dead\"\n                    }\n                })\n            break;\n\n            case \"players\":\n                dispatch({\n                        type: TOGGLE_RECORDS_VIEWS,\n                        payload: {\n                            dates: \"dead\",\n                            games: \"dead\",\n                            players: \"visible\",\n                            sort: \"dead\",\n                            chart: \"dead\"\n                        }\n                    })\n            break;\n\n            case \"sort\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"dead\",\n                    games: \"dead\",\n                    players: \"dead\",\n                    sort: \"visible\",\n                    chart: \"dead\"\n                }\n            })\n            break;\n\n            case \"chart\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"dead\",\n                    games: \"dead\",\n                    players: \"dead\",\n                    sort: \"dead\",\n                    chart: \"visible\"\n                }\n            })\n            break;\n\n            default:\n            return\n        }\n    }\n}\n\nexport const addPlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const removePlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const selectDateRange = (start, end) => dispatch => {\n    if (start === \"Invalid date\") {start = \"2000-01-01\"}\n    if (end === \"Invalid date\") {end = moment().format(\"YYYY-MM-DD\")}\n    dispatch({\n        type: SET_DATE_RANGE,\n        payload: {\n            from: start,\n            to: end\n        }\n    })\n}\n\nexport const toggleSortOptions = (tab, currentStatus, ascArrow) => dispatch => {\n    switch(tab){\n        case \"az\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_AZ_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"active\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"games\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GAMES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"active\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"wins\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_WINS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"active\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"losses\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_LOSSES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"active\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        \n        case \"ties\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_TIES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"active\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"goals\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GOALS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"active\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"gpg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GPG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"active\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"assists\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            }) \n\n        }\n        else {\n            dispatch({\n                type: SORT_ASSISTS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"active\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"apg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_APG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"active\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        break;\n\n        default:\n        return\n    }\n\n}\n\nexport const toggleSelectAll = (update) => dispatch => {\n    switch (update) {\n        case \"unselected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"selected_member\"}\n            })    \n        break;\n\n        case \"selected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"unselected_member\"}\n            })    \n        \n        break;\n\n        case \"unselected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"selected_non_member\"}\n            })    \n        break;\n\n        case \"selected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"unselected_non_member\"}\n            })    \n        break;\n\n        default:\n        return;\n    }\n}\n\nexport const batchCardUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CARD_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchChartUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CHART_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchUnselect = (type) => dispatch => {\n    dispatch({\n        type: BATCH_UNSELECT,\n        payload: type\n    })\n}\n\n// this handles when games are removed after the players. In this case, data needs to be re-initiated\n// we recreate the array of players\nexport const updatePlayers = (players) => dispatch => {\n    dispatch({\n        type: REPLACE_PLAYERS_RECORDS,\n        payload: players\n    })\n}\n// data is sent to the modal in showcase.js\nexport const togglePlayerModal = (newStatus, data) => dispatch => {\n    dispatch({\n        type: TOGGLE_PLAYER_MODAL,\n        payload: {\n            status: newStatus,\n            data: data\n        }\n    })\n}\n\nexport const selectAllGames = (status) => dispatch => {\n    dispatch({\n        type: BATCH_GAMES,\n        payload: status,\n    })\n}\n\nexport const unselectAllGames = () => dispatch => {\n    dispatch({\n        type: UNSELECT_ALL_GAMES,\n    })\n}\n\nexport const filterPlayerRecordsByType = (object) => dispatch => {\n    let operator;\n    let playerType;\n\n    if (object.offense === \"unselected\") {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"null\";\n                playerType = \"null\";\n            }\n            else {\n                operator = \"only\";\n                playerType = \"Goalie\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Defense\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Forward\"\n            }\n        }\n    }\n    else {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Forward\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Defense\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"but\"\n                playerType = \"Goalie\"\n            }\n            else {\n                operator = \"null\"\n                playerType = \"null\"\n            }\n        }\n\n    }\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_TYPE,\n        payload: {\n            operator: operator,\n            playerType: playerType,\n            playerFilters: object\n        }\n    })\n}\n\nexport const filterPlayerRecordsByGames = (object) => dispatch => {\n    console.log(\"object received in filterGames statsActions.js: \", object)\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_GAMES,\n        payload: object\n        })\n}","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGame } from '../../js/actions/gameActions'\nimport { getGamesAndTransform } from '../../js/actions/statsActions'\nimport { setVisibility } from '../../js/actions/statsActions'\n\nimport _ from \"underscore\"\n\nclass PastGameList extends Component {\n\n    componentDidMount() {\n        this.props.getGamesAndTransform();\n    }\n\n    toggleVisibility(currentStatus, num){\n        let newStatus;\n        if (currentStatus === \"visible\") {newStatus = \"hidden\"}\n        else { newStatus = \"visible\" }\n        \n        let visibleBefore = this.props.gameVisibility.slice(0, num)\n        let visibleAfter = this.props.gameVisibility.slice(num + 1)\n        let newArray = [...visibleBefore, newStatus, ...visibleAfter]\n        \n        this.props.setVisibility(newArray)\n        }\n\n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n        }\n\n    renderGames(object) {\n        return Object.values(object).map((game, i) => {\n            return (\n                    <button key={game._id} className=\"past_game_button contrast_color\" onClick={()=> this.getGameInfo(game._id)}> {game._id} </button>\n                )\n            })\n        }\n\n    renderMonth(object) {\n        return Object.entries(Object.values(object)[0]).map(([key, value], i) => {\n            return (\n                <div key= {i}>\n                    <h3 className=\"h3_alternate\">{key}:</h3>\n                    <div className=\"month_game_played\">\n                        {this.renderGames(value)}\n                    </div>\n                </div>\n                )\n            })\n        }\n    \n    \n    renderYear(object) {\n        let reOrderedArray = _.sortBy(Object.values(object)).reverse()\n        return reOrderedArray.map((year, i) => {\n            return (\n                <div key={i}>\n                    <div>\n                        <h3 className=\"h3_main\">{ Object.keys(year)}</h3> \n                        <div className=\"hide_year_button\" onClick={()=> this.toggleVisibility(this.props.gameVisibility[i], i)}> {this.props.gameVisibility[i] === \"visible\" ? \"[hide]\" : \"[show]\" }</div>\n                    </div>\n                    <div className={this.props.gameVisibility ? this.props.gameVisibility[i] : null + \" games_per_year\"}>\n                        {this.renderMonth(year)} \n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"list_of_games\">\n                    <div>\n                        {this.renderYear(this.props.reducedGames)}\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    reducedGames: state.stats.reducedGames,\n    gameVisibility: state.stats.gameVisibility\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { getGamesAndTransform, setVisibility, getGame }) (PastGameList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { editGameInfo } from '../../js/actions/gameActions'\n// import { deletePlayer } from '../../../js/actions/playerActions'\n// import { editForm } from '../../../js/actions/playerActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nimport Locker from \"../Locker.js\"\n\nclass ScoreBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editScore: true,\n            changeLock: true\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    logStat(playerID, type, currentValue){\n        let gameId = this.props.game._id\n        switch (type){\n            case \"add_goal_dark\":\n            let goalUpdate = currentValue + 1;\n            let scoreUpdate = this.props.game.goals_dark + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_white:\n                this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"add_goal_white\":\n            goalUpdate = currentValue + 1;\n            scoreUpdate = this.props.game.goals_white + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_dark:\n                this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"substract_goal_dark\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_dark - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0) {\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_white:\n                    this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                    }\n                }\n            break;\n\n            case \"substract_goal_white\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_white - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0){\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                }\n                }\n            break;\n\n            case \"add_assist\":\n            let assistUpdate = currentValue + 1;\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n            break;\n\n            \n            case \"substract_assist\":\n            assistUpdate = currentValue - 1;\n            if (assistUpdate >= 0){\n                this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n                }\n            break;\n\n            default:\n            return;\n        }\n\n    }\n\n    render() {\n        return (\n            <span className=\"full\">\n                <div>\n                    <h1 className=\"h1_main\">{this.props.game._id}</h1>\n                    <div className=\"tables_container\">\n                        <div className=\"table_container\">\n                            <h1 className=\"h1_alternate\">Dark<br/>{this.props.game.goals_dark}</h1>\n                            <table>\n                                <thead>\n                                    <tr className=\"score_header_tr\">\n                                        <th className=\"table_col_name\">Player</th> \n                                        <th className=\"table_col_name\">Goals</th>\n                                        <th className=\"table_col_name\">Assists</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.players ? (this.props.players\n                                        .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                        .map(player => {\n                                            return (\n                                                <tr className=\"stats_row\" key={player._id}> \n                                                    <td className=\"player_stats stats_name\">{player.name}\n                                                    </td>\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_dark\",player.gameInfo.goals)} /> : null }\n                                                            <div className={player.gameInfo.goals > 0 ? \"nice data\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_dark\",player.gameInfo.goals)} />  : null }\n                                                        </div>\n                                                    </td>\n\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} />  : null }\n                                                            <div className={player.gameInfo.assists > 0 ? \"good data\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus}  onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                )\n                                            })\n                                        ) : null\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"table_container\">\n                                <h1 className=\"h1_alternate\">White<br/>{this.props.game.goals_white}</h1>\n                                <table className=\"score_table\">\n                                    <thead>\n                                        <tr className=\"score_header_tr\">\n                                            <th className=\"table_col_name\">Player</th> \n                                            <th className=\"table_col_name\">Goals</th>\n                                            <th className=\"table_col_name\">Assists</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.props.players ? (this.props.players\n                                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                            .map(player => {\n                                                return (\n                                                    <tr className=\"stats_row\" key={player._id}> \n                                                        <td className=\"player_stats stats_name\">{player.name}\n                                                        </td>\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_white\",player.gameInfo.goals)} /> : null }\n                                                                <div className={player.gameInfo.goals > 0 ? \"nice data\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_white\",player.gameInfo.goals)} /> : null }\n                                                            </div>\n                                                        </td>\n\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} /> : null }\n                                                                <div className={player.gameInfo.assists > 0 ? \"good data\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    )\n                                                })\n                                            ) : null\n                                            }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>    \n                    </div>    \n                {this.state.changeLock === true ? <Locker /> : null }\n        </span>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    game: state.games.draft,\n    players: state.games.draft.players,\n    lockStatus: state.games.lockStatus\n\n})\n\nexport default connect(mapStateToProps, { editGameInfo }) (ScoreBoard)\n","import React, { Component } from 'react';\n\nclass NoStatsBoard extends Component {\n    render(){\n        return (\n            <div className=\"no_stats_message\">\n                <p className=\"no_game\">The teams for this game have not been drafted yet. Please come back later!\n                </p>    \n            </div>\n        )\n    }\n}\n\nexport default NoStatsBoard;\n","import React, { Component } from \"react\";\n\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleVisibility } from \"../js/actions/statsActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport PastGameList from \"../components/StatsPageComp/PastGamesList.js\"\nimport ScoreBoard from \"../components/StatsPageComp/ScoreBoard.js\"\nimport NoStatsBoard from \"../components/StatsPageComp/NoStatsBoard.js\"\n\nclass Stats extends Component {         \nrender() {\n    return (\n        <div>\n            <NavBar />\n            <main>\n                <section className=\"main_main\">\n                    <h1 className=\"h1_main\">Enter Stats</h1>\n                    <PastGameList />\n                </section>\n                {this.props.visibility.noStatsMessage === \"visible\" ? \n                (<section className={\"main_main \" + this.props.visibility.noStatsMessage}>\n                    <NoStatsBoard />\n                </section>) : \n                (<section className={\"main_main \" + this.props.visibility.gameStats}>\n                    <ScoreBoard />\n                </section>)}\n            </main>\n        </div>\n        )\n    }\n}\n\n// export default Stats\nconst mapStateToProps = state => ({\n    visibility: state.games.visibility,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleVisibility } ) (Stats)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { selectDateRange } from \"../../js/actions/statsActions\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nconst moment = require(\"moment\");\nclass DateRange extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChangeStart(date) {\n        this.setState({\n            startDate: date\n        })\n    }\n\n    handleChangeEnd(date) {\n        this.setState({\n            endDate: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let startDate = moment(this.state.startDate).format(\"YYYY-MM-DD\")\n        let endDate = moment(this.state.endDate).format(\"YYYY-MM-DD\")\n        this.props.selectDateRange(startDate, endDate)\n    }\n\n\n    render() {\n        return (\n            <div className={\"records_calendar \" + this.props.datePickers}>\n                <div className=\"calendar_alignment\">\n                    <form onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                        <DatePicker\n                            placeholderText=\"From: MM DD YYYY\"\n                            selected={this.state.startDate}\n                            selectsStart\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeStart}\n                            isClearable={true}\n                        />\n\n                        <DatePicker\n                            placeholderText=\"To:     MM DD YYYY\"\n                            selected={this.state.endDate}\n                            selectsEnd\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeEnd}\n                            isClearable={true}\n                        />\n                            <div className=\"date_range_options\">\n                                <button id=\"range_submit\" className=\"content_button btn contrast_color\" name=\"submit\" type=\"submit\" >Submit</button>\n                            </div>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    datePickers: state.stats.datePickers\n    })\n\n\nexport default connect(mapStateToProps, { selectDateRange }) (DateRange)\n    ","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport DateRange from \"./DateRange\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass DateSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"dates\")\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.datePickers)}> {this.props.datePickers === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Dates</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className={\"date_pickers \" + this.props.datePickers}>\n                            <div className={\"calendar_container \" + this.props.datePickers}>\n                                <DateRange />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    allGames: state.stats.gamesForRecords,\n    datePickers: state.stats.datePickers,\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, toggleViews }) (DateSelector)\n","export const createCardsArray = (arrayOfPlayers, arrayOfGames) => {\n    // we do not want to fire the function if either array is empty\n    if (arrayOfGames.length > 0 && arrayOfPlayers.length > 0) {\n        // array to store the info\n        let transformedArrayForCards = [];\n        // for each player in the array\n        arrayOfPlayers.forEach((broomballer) => {\n            // we map/filter all games selected to create record for each game played.\n    \n            // if the player didn't play any game, we create an empty \"N/A\" record instead (otherwise misleading)\n            let gamesPlayed = arrayOfGames.filter(game => game.players.filter(player => player._id === broomballer._id)[0])\n            // if the broomballer played any game\n            if (gamesPlayed.length > 0) {\n                let playerReduced = gamesPlayed.reduce((players, game) => {\n                    // variable to access \"game info\" of each player for each game\n                    let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                    let win;\n                    let available;\n    \n                    players.name = broomballer.name\n                    players._id = broomballer._id\n                    players.membershipStatus = broomballer.membershipStatus\n                    players.preferredPosition = broomballer.preferredPosition\n                    \n                    players.gamesPlayed = players.gamesPlayed || []\n                    if(gameInfo[0].available === true){\n                        available = 1\n                        players.gamesPlayed.push(available)\n                    }\n                    \n                    players.goals = players.goals || []\n                    if(gameInfo[0].available === true) {\n                        players.goals.push(gameInfo[0].goals)\n                    }\n                    \n                    players.assists = players.assists || []\n                    if (gameInfo[0].available === true) {\n                        players.assists.push(gameInfo[0].assists)\n                    }\n                    \n                    players.wins = players.wins || []\n                    if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                        win= \"Win\"\n                        players.wins.push(win)\n                    }\n    \n                    players.losses = players.losses || []\n                    if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                        let loss= \"Loss\"\n                        players.losses.push(loss)\n                    }\n    \n                    players.ties = players.ties || []\n                    if(gameInfo[0].available === true && game.win === \"Tie\"){\n                        let tie= \"Tie\"\n                        players.ties.push(tie)\n                    }\n                \n                    return players\n                    }, {});\n                    \n                let gamePlayedFromArray = playerReduced.gamesPlayed ? playerReduced.gamesPlayed.length : 0 \n                let winsFromArray = playerReduced.wins.length\n                let lossesFromArray = playerReduced.losses.length\n                let tiesFromArray = playerReduced.ties.length\n                let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let goalsFromArray = playerReduced.goals ? playerReduced.goals.reduce((a,b) => a + b, 0) : 0\n                let assistsFromArray = playerReduced.assists ? playerReduced.assists.reduce((a, b) => a + b, 0) : 0\n                let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n    \n                playerReduced.gamesPlayed = gamePlayedFromArray\n                playerReduced.wins = winsFromArray\n                playerReduced.losses = lossesFromArray\n                playerReduced.ties = tiesFromArray\n                playerReduced.winPercent = winPercent\n                playerReduced.lossPercent = lossPercent\n                playerReduced.tiePercent = tiePercent\n                playerReduced.goals = goalsFromArray \n                playerReduced.assists = assistsFromArray\n                if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n                \n                transformedArrayForCards.push(playerReduced)\n            } else {\n                let playerWithoutRecord = {\n                    name: broomballer.name,\n                    gamesPlayed: 0,\n                    goals: \"N/A\",\n                    assists: \"N/A\",\n                    membershipStatus: broomballer.membershipStatus,\n                    winPercent: \"N/A\",\n                    lossPercent: \"N/A\",\n                    tiePercent: \"N/A\",\n                    win: \"N/A\",\n                    loss: \"N/A\",\n                    tie: \"N/A\",\n                    gpg: \"N/A\",\n                    apg: \"N/A\",\n                    _id: broomballer._id\n                }\n                transformedArrayForCards.push(playerWithoutRecord)\n            }\n        })\n        return transformedArrayForCards;\n    }\n};\n\nexport const createChartData = (arrayOfCards) => {\n    let labels = []\n    let goalsArray = []\n    let assistsArray = []\n    let gamesPlayedArray = []\n    let winPercentArray = []\n    let lossPercentArray = []\n    let tiePercentArray = []\n    let gpgArray = []\n    let apgArray = []\n    arrayOfCards.forEach(e => {\n        labels.push(e.name);\n        goalsArray.push(e.goals);\n        assistsArray.push(e.assists);\n        gamesPlayedArray.push(e.gamesPlayed);\n        winPercentArray.push(e.winPercent);\n        lossPercentArray.push(e.lossPercent);\n        tiePercentArray.push(e.tiePercent);\n        gpgArray.push(e.gpg);\n        apgArray.push(e.apg);\n    })\n    \n    let chartObject = {\n        labels: labels,\n        // For performance reason, it is better to re-initiate the data than to use the ... operator to merge new with existing\n        datasets: [\n            {\n                label: \"Goals\",\n                data: goalsArray,\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: \"Assists\",\n                data: assistsArray,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Games\",\n                data: gamesPlayedArray,\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Wins (%)\",\n                data: winPercentArray,\n                backgroundColor: 'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                hoverBorderColor: 'rgba(75,192,192,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Losses (%)\",\n                data: lossPercentArray,\n                backgroundColor: '#d3b8ae',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#d3b8ae',\n                hoverBorderColor: '#d3b8ae',\n                barThickness: 15,\n            },\n            {\n                label: \"Ties (%)\",\n                data: tiePercentArray,\n                backgroundColor: '#ff8a65',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#ff8a65',\n                hoverBorderColor: '#ff8a65',\n                barThickness: 15,\n            },\n            {\n                label: \"GPG\",\n                data: gpgArray,\n                backgroundColor: 'rgba(153,102,255,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                hoverBorderColor: 'rgba(153,102,255,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"APG\",\n                data: apgArray,\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                options: {barThickness: 100},\n            },\n            ]\n        }\n        return chartObject;\n    }","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { selectGame } from '../../js/actions/statsActions'\nimport { unselectGame } from '../../js/actions/statsActions'\nimport { selectAllGames } from '../../js/actions/statsActions'\nimport { unselectAllGames } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { updatePlayers } from '../../js/actions/statsActions'\nimport { batchChartUpdate } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { createCardsArray } from \"./curateData\"\nimport { createChartData } from \"./curateData\"\nclass GameSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    unselectGame(game) {\n        // marks the game as unselected\n        this.props.unselectGame(game)\n        let arrayOfGames = this.props.selectedGames.filter(match => match._id !== game._id)\n        let cardsArray = createCardsArray(this.props.selectedPlayers, arrayOfGames)\n        this.props.updatePlayers( cardsArray )\n        \n        if (arrayOfGames.length > 0) {\n            // createChartData( cardsArray )\n\n            let newObject = createChartData(cardsArray)\n            this.props.batchChartUpdate(newObject)\n\n        } else {\n            console.log(\"All games have been unselected\")\n        }\n    }\n\n    gameSelection(arrayOfGames) {\n        // marks the selected games as such \n        arrayOfGames.forEach(game => this.markAsSelected(game))\n        let cardsArray = createCardsArray(this.props.selectedPlayers, arrayOfGames)\n        this.props.updatePlayers( cardsArray )\n        \n        if (this.props.selectedPlayersNum > 0) {\n            let newObject = createChartData( cardsArray )\n            this.props.batchChartUpdate(newObject)\n        } else {\n            // if no game is selected, have to wipe the chartData\n            console.log(\"No player selected\")\n        }\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"games\")\n    }\n\n    selectAllGames(status){\n        this.props.selectAllGames(status)\n        // we send the whole array of games in the time span to the gameSelection function\n        this.gameSelection(this.props.gamesForRecords)\n        \n    }\n    unselectAllGames(){\n        this.props.unselectAllGames()\n        this.props.gamesForRecords.forEach(game => this.props.unselectGame(game))\n        this.gameSelection([])\n    }\n    // When we hit the \"Select All Games\", we need to make sure the game has not already been selected\n    // otherwise it might be sent twice \n    markAsSelected(game) {\n        let arrayOfIds = this.props.selectedGames.map(gamesSelected => gamesSelected._id)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.selectGame(game)\n        }\n    }\n\n    markAsUnselected(game) {\n        let arrayOfIds = this.props.unselectedGames.map(gamesUnselected => gamesUnselected._id)\n        console.log(\"ids of games already unselected: \", arrayOfIds)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.unselectGame(game)\n        }\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfGames)}> {this.props.listOfGames === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Games</h3>\n                        </div>\n                    </div>\n                    <div className={this.props.listOfGames + \" content \"}>\n                        <div className={this.props.listOfGames + \" select_all\"}>\n                            <div className=\"button_options_third_set\">\n                                {this.props.allGamesSelection === \"unselected_game\" ? \n                                    <button className={\"record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.selectAllGames(this.props.allGamesSelection)}> Games <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>\n                                    :\n                                    <button className={\"record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.unselectAllGames()}> Games <FontAwesomeIcon icon=\"times\" className=\"game_action_icon\"/> </button>\n                                }\n                            </div>\n                            \n                        </div>\n\n                        <div className={\"record_list_of_games \" + this.props.listOfGames}>\n                                {this.props.gamesForRecords.length > 0 ?\n                                    this.props.gamesForRecords\n                                    .map(game => this.props.selectedGames.indexOf(game) === -1 ? \n                                    (<button key={game._id} className=\"unselected_game record_game_button\" onClick={() => this.gameSelection([game, ...this.props.selectedGames])}> {game._id} <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>)\n                                    : \n                                    (<button key={game._id} className=\"selected_game record_game_button\" onClick={() => this.unselectGame(game)}> {game._id} <FontAwesomeIcon icon=\"times\" className=\"game_action_icon\"/> </button>)\n                                )\n                                : <p className=\"no_game\">There is currently no game to display</p> \n                            }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    selectedPlayersNum: state.stats.selectedPlayers ? state.stats.selectedPlayers.length : 0,\n    unselectedGames: state.stats.unselectedGames,\n    gamesForRecords: state.stats.gamesForRecords, \n    listOfGames: state.stats.listOfGames, // to toggle the visibility\n    chartData: state.stats.chartData,\n    allGamesSelection: state.stats.allGamesSelection\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, selectGame, unselectGame, selectAllGames, unselectAllGames, toggleViews, updatePlayers, batchChartUpdate }) (GameSelector)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { selectPlayer } from '../../js/actions/statsActions'\nimport { unselectPlayer } from '../../js/actions/statsActions'\n// This adds a player to the playerRecords array\nimport { addPlayerStatObject } from \"../../js/actions/statsActions\"\nimport { removePlayerStatObject } from \"../../js/actions/statsActions\"\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { toggleSelectAll } from '../../js/actions/statsActions'\n// this replaces all the records in the playerRecords array\nimport { updatePlayers } from '../../js/actions/statsActions'\n// this merges newly created records with already existing records in the playerRecords array\nimport { batchCardUpdate } from '../../js/actions/statsActions'\n// this is used to send data to the chartData object from which data is pulled to create the chart\nimport { batchChartUpdate } from '../../js/actions/statsActions'\nimport { batchUnselect } from '../../js/actions/statsActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { createCardsArray } from \"./curateData\"\nimport { createChartData } from \"./curateData\"\n\nclass PlayerSelector extends Component {\n\n    componentDidMount() {\n        this.props.fetchPlayers();\n    }\n    // unselect individual players (by way of slicing the existing arrays of data)\n    unselectPlayer(player) {\n        this.props.unselectPlayer(player)\n        this.props.removePlayerStatObject(player)\n        if ( this.props.selectedGamesNum > 0 ) {\n            let newObject = createChartData(this.props.selectedPlayers.filter(broomballer => broomballer._id !== player._id ))\n            this.props.batchChartUpdate(newObject)\n        } else {\n            console.log(\"Handle case: \\nPlayer is removed, no game selected\")\n        }\n    }\n    \n    selectPlayer(broomballer) {\n        this.markAsSelected(broomballer)\n        let cardsArray = createCardsArray(this.props.selectedPlayers.concat(broomballer), this.props.selectedGames)\n        this.props.updatePlayers( cardsArray )\n        this.addBatchChartData( cardsArray )\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"players\")\n    }\n    // calling the \"individual\" functions repeatedly makes redux (and redux devtool) fail & Chrome lag. For this reason, we create separate functions that will handle updates on the whole array. \n    // This dispatcher sends data to the function that will handle it.\n    selectAllPlayers(playerUpdate){\n        switch (playerUpdate) {\n            case \"unselected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // we need to add both all members + non-members already selected for we are going to replace all existing records\n            let allMembersAndSelectedTenBuckers = this.props.allPlayers.filter(player => player.membershipStatus === \"Member\").concat(this.props.selectedPlayers.filter(player => player.membershipStatus !== \"Member\"))\n            this.selectAndTransform(allMembersAndSelectedTenBuckers, \"select\")\n            break;\n\n            case \"selected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Member\")\n            break;\n\n            case \"unselected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // Adding both all ten buckers (who have played one of possible games) + non-members already selected\n            let allTenBuckersAndSelectedMembers = this.props.allPlayers.filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id)).concat(this.props.selectedPlayers.filter(player => player.membershipStatus === \"Member\"))\n            this.selectAndTransform(allTenBuckersAndSelectedMembers, \"select\")\n            break;\n\n            case \"selected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Ten Bucker\")\n            break;\n\n            default:\n            return;\n        }\n    }\n    // this function marks all players in the array as selected (via this.markAsSelected), creates an array of objects in the playerRecords reducer, \n    // and sends data to be handled by setChartData accordingly (=> selected players are created properly for Chartjs package)\n    selectAndTransform(arrayOfPlayers, type) {\n        if (type === \"select\") {\n            arrayOfPlayers.forEach(broomballer => this.markAsSelected(broomballer))\n        }\n        let cardsArray = createCardsArray(arrayOfPlayers, this.props.selectedGames)\n        if (type === \"select\") {\n            this.props.updatePlayers( cardsArray )\n            this.addBatchChartData( cardsArray )\n            }\n        else if (type === \"unselect\") {\n            this.addBatchChartData( cardsArray )\n        }\n    }\n\n    // this handles unselecting players depending on the membership type sent\n    batchUnselect(type){\n        this.props.batchUnselect(type);\n        this.props.selectedPlayers.filter(player => player.membershipStatus === type).forEach(broomballer => this.unselectPlayer(broomballer));\n        this.selectAndTransform(this.props.selectedPlayers.filter(player => player.membershipStatus !== type), \"unselect\")\n    }\n\n    addBatchChartData(arrayOfPlayers) {\n        if ( this.props.selectedGamesNum > 0 ) {\n            let newObject = createChartData(arrayOfPlayers)\n            this.props.batchChartUpdate(newObject)\n        }\n    }\n\n    // Before sending the player to the selectPlayer action that will add it to the selectedPlayers array, we need to make sure the record does not already exist\n    // in that array (we might accidentally send twice via the batch select that consolidates before re-sending to playerRecords array). Otherwise, it creates \n    // problems with duplicate keys in React\n    markAsSelected(player) {\n        let arrayOfIds = this.props.selectedPlayers.map(broomballer => broomballer._id)\n        if ( !arrayOfIds.includes(player._id) ){\n            this.props.selectPlayer(player)\n        }\n    }\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfPlayers)}> {this.props.listOfPlayers === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Players</h3>\n                        </div>\n                    </div>\n                    <div className=\"content \">\n                    {/* <div className={this.props.listOfPlayers + \" content \"}> */}\n                        <div className={this.props.listOfPlayers + \" select_all\"}>\n                            <div className=\"button_options_first_set\">\n                                <button className={\"record_player_button all_button \" + this.props.memberSelection} onClick={() => this.selectAllPlayers(this.props.memberSelection)}> Members {this.props.memberSelection === \"unselected_member\" ? <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> : <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/>}</button>\n                                <button className={\"record_player_button all_button \" + this.props.tenBuckerSelection} onClick={() => this.selectAllPlayers(this.props.tenBuckerSelection)}> Ten Buckers {this.props.tenBuckerSelection === \"unselected_non_member\" ? <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> : <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/>}</button>\n                            </div>\n                            \n                        </div>\n                        <div className={\"list_of_players \" + this.props.listOfPlayers}>\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus === \"Member\")\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"unselected_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"selected_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id))\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"unselected_non_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"selected_non_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    selectedGamesNum: state.stats.selectedGames ? state.stats.selectedGames.length : 0,\n    selectedPlayers: state.stats.selectedPlayers,\n    selectedPlayersNum: state.stats.selectedPlayers ? state.stats.selectedPlayers.length : 0,\n    unselectedPlayers: state.stats.unselectedPlayers,\n    memberSelection: state.stats.memberSelection,\n    tenBuckerSelection: state.stats.tenBuckerSelection,\n    allPlayers: state.players.players,\n    arrayOfTenBuckersID: state.stats.arrayOfTenBuckersID,\n    listOfPlayers: state.stats.listOfPlayers,\n    chartData: state.stats.chartData,\n})\n\nexport default connect(mapStateToProps, {   \n        fetchPlayers, \n        selectPlayer, \n        unselectPlayer, \n        toggleViews, \n        addPlayerStatObject, \n        removePlayerStatObject, \n        // sendDataToChart, \n        toggleSelectAll, \n        batchCardUpdate, \n        batchChartUpdate, \n        batchUnselect, \n        updatePlayers \n    }) (PlayerSelector)\n","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nimport { Line } from \"react-chartjs-2\";\n\nimport { connect } from 'react-redux';\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\n\nclass PlayerStatsModal extends Component {\n    \n    render() {\n        return (\n            <div className=\"player_modal\">\n                <Modal isOpen={this.props.playerModal} toggle={this.toggle} centered={true} size={\"lg\"}>\n                    <ModalHeader className=\"modal_header\"> {this.props.playerModalData.name} </ModalHeader>\n                    <ModalBody>\n                        <Line\n                            data={this.props.playerModalData.data}\n                            options={{\n                                    responsive: true,\n                                    maintainAspectRatio: false,\n                                    }}\n                            />\n                    </ModalBody>\n                    <ModalFooter>\n                        <button className=\"contrast_color content_button\" onClick={()=> this.props.togglePlayerModal(false, {name: \"\", data:{}})}> Close </button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    playerModal: state.stats.playerModal,\n    playerModalData: state.stats.playerModalData\n})\n\nexport default connect(mapStateToProps, { togglePlayerModal }) (PlayerStatsModal)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { toggleViews } from \"../../js/actions/statsActions\"\nimport { toggleSortOptions } from \"../../js/actions/statsActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\nimport PlayerStatsModal from \"./PlayerStatsModal\"\n\nimport _ from \"underscore\"\n\n\nclass Showcase extends Component {\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    toggleSort(tab, currentStatus, ascArrow){\n        this.props.toggleSortOptions(tab, currentStatus, ascArrow)\n    }\n    // Stats in Modal\n    showPlayerStats(playerName, playerID){\n        // we need to filter games that the player has played to show relevant stats\n        // we have sorted the gamesSelected array chronologically for convenience\n        let playerStats = this.props.gamesInChronoOrder.reduce((broomballer, game) => {\n            broomballer.name = playerName\n            broomballer.gamesPlayed = broomballer.gamesPlayed || []\n            broomballer.goals = broomballer.goals || []\n            broomballer.assists = broomballer.assists || []\n            if (game.players.filter(player => player._id === playerID && player.gameInfo.available === true).length !== 0) {\n                broomballer.gamesPlayed.push(game._id)\n                // we filter the array of players with the matching ID (it creates a remapped array of one element if applicable, \n                // gameInfo, therefore the data we want is at index 0 of gameInfo)\n                let gameInfo = game.players.filter(player => player._id === playerID).map(player => player.gameInfo)\n                broomballer.goals.push( gameInfo[0].goals )\n                broomballer.assists.push( gameInfo[0].assists )\n            }            \n            return broomballer\n            }, {});\n        // creating the ChartJS object:    \n        let playerInfo = {\n            name: playerName,\n            data: {\n                labels: playerStats.gamesPlayed,\n                datasets: [\n                    {\n                        label: \"Goals\",\n                        data: playerStats.goals,\n                        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        borderColor: 'rgba(255, 99, 132, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                        lineTension: 0,\n                    },\n                    {\n                        label: \"Assists\",\n                        data: playerStats.assists,\n                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        borderColor: 'rgba(54, 162, 235, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                        lineTension: 0,\n                    }\n                ]\n            }\n        };\n        // sending the data to the modal\n        this.props.togglePlayerModal(true, playerInfo)\n    }\n    \n    render() {\n        return (\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Sorting Options</h3>\n                    </div>\n                </div>\n                <div className={this.props.sortOptionsDisplay !== \"dead\" && this.props.numOfRecords > 0  ? \"content visible\" : \"content dead\"}>\n                    <div className={\"list_of_options \" + this.props.sortOptionsDisplay}>\n                        \n                            <button className={this.props.sortingOptions.azTab + \" tab_button\"} onClick={()=> this.toggleSort(\"az\", this.props.sortingOptions.azTab, this.props.sortingOptions.alphaAsc)}>A-Z <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.alphaDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.alphaAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gamesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"games\", this.props.sortingOptions.gamesTab, this.props.sortingOptions.gamesAsc)}>Games Played  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gamesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gamesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.winsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"wins\", this.props.sortingOptions.winsTab, this.props.sortingOptions.winsAsc)}>Games Won  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.winsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.winsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.lossesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"losses\", this.props.sortingOptions.lossesTab, this.props.sortingOptions.lossesAsc)}>Games Lost  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.lossesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.lossesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.tiesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"ties\", this.props.sortingOptions.tiesTab, this.props.sortingOptions.tiesAsc)}>Games Tied  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.tiesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.tiesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.goalsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"goals\", this.props.sortingOptions.goalsTab, this.props.sortingOptions.goalsAsc)}>Goals  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.goalsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.goalsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gpgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"gpg\", this.props.sortingOptions.gpgTab, this.props.sortingOptions.gpgAsc)}>GPG  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gpgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gpgAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.assistsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"assists\", this.props.sortingOptions.assistsTab, this.props.sortingOptions.assistsAsc)}>Assists  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.assistsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.assistsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.apgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"apg\", this.props.sortingOptions.apgTab, this.props.sortingOptions.apgAsc)}>APG <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.apgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.apgAsc + \" sorting_arrow\"} /> </span> </button>\n                    \n                    </div>\n                </div>\n                <div className=\"records \">\n                \n                {this.props.playerRecords ? this.props.playerRecords.map(object => {\n                    return (\n                        <div key={object._id} className={object.preferredPosition === this.props.positionVisibility ? \"hidden_card wrapping_card_div\" : \"visible wrapping_card_div\" } onClick={()=> this.showPlayerStats(object.name, object._id)}>\n                            <div className={object.membershipStatus === \"Member\" ? \"member_record player_card \" : \"non_member_record player_card\"}>\n                            \n                                <div className=\"player_name\">{object.name} <span className=\"position_dot\"> <FontAwesomeIcon icon=\"circle\" className={object.preferredPosition} /> </span></div>\n                                <div className=\"player_data\">\n                                    <p><span className=\"entry\">Games Played:</span> <span className=\"value\">{object.gamesPlayed}</span>/{this.props.selectedGames.length}</p>\n                                    <p><span className=\"entry\">W/L/T:</span> <span className=\"value\">{ object.winPercent !== \"N/A\" ? object.winPercent + \"%\" : object.winPercent } - { object.lossPercent !== \"N/A\" ? object.lossPercent + \"%\" : object.lossPercent } - { object.tiePercent !== \"N/A\" ? object.tiePercent + \"%\" : object.tiePercent } </span> </p>\n                                    <p><span className=\"entry\">Goals:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.goals : \"N/A\"}</span>\n                                    <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.gpg : \"N/A\"}</span></span></p>\n                                    <p><span className=\"entry\">Assists:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.assists : \"N/A\"}</span>\n                                    <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.apg : \"N/A\"}</span></span></p>\n                                </div>\n                            </div>\n                        </div>\n                        )}\n                        ) : null }\n                </div>\n                {/* </div> */}\n                <PlayerStatsModal isOpen={this.props.playerModal} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    gamesInChronoOrder: _.sortBy(state.stats.selectedGames,\"_id\"),\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    playerRecords: state.stats.filteredPlayerRecords,\n    numOfRecords: state.stats.filteredPlayerRecords ? state.stats.filteredPlayerRecords.length : 0,\n    sortingOptions: state.stats.sortingOptions,\n    forwardSelection: state.stats.selectors.forwardSelection,\n    defenseSelection: state.stats.selectors.defenseSelection,\n    goalieSelection: state.stats.selectors.goalieSelection,\n    positionVisibility: state.stats.selectors.positionVisibility,\n    playerModal: state.stats.playerModal,\n})\n\nexport default connect(mapStateToProps, { toggleViews, toggleSortOptions, togglePlayerModal, }) (Showcase)\n\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSquare } from '@fortawesome/free-regular-svg-icons'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByType } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByGames } from '../../js/actions/statsActions'\n\nclass Filters extends Component {\n\n    playerSelection(setting, status){\n        switch (setting) {\n            case \"offense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({offense: \"unselected\", defense: this.props.defense, goalie: this.props.goalie})\n            }\n            else {\n                this.props.filterPlayerRecordsByType({offense: \"selected\", defense: this.props.defense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"defense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({defense: \"unselected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({defense: \"selected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"goalie\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({goalie: \"unselected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({goalie: \"selected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            break;\n\n            default:\n            return;\n        }\n    }\n\n\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    gameSelection(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        switch (name) {\n            case \"operator\":\n            this.props.filterPlayerRecordsByGames({[name]: value, gamePercent: this.props.gamePercent})\n            break;\n            \n            case \"gamePercent\":\n            this.props.filterPlayerRecordsByGames({operator: this.props.operator, [name]: value})\n            break;\n\n            default: \n            return;\n        }\n    }\n    render() {\n        return(\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Filters</h3>\n                    </div>\n                </div>\n            <div className={\"content \" + this.props.sortOptionsDisplay}>\n                <div className=\"list_of_options\">\n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Players</h3>\n                        <ul className=\"check_list\">\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"offense\",  this.props.offense)}>{ this.props.offense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\"/> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\"/>}  Offense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"defense\",  this.props.defense)}>{ this.props.defense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Defense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"goalie\",  this.props.goalie)}>{ this.props.goalie === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Goalies</li>        \n                        </ul> \n                    </div>\n                    \n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Attendance</h3>\n                            <ul className=\"check_list\">\n                                <li className=\"filter_item\">Played \n                                <select className=\"custom-select\" name=\"operator\" onChange={(event) => this.gameSelection(event)} value= {this.props.operator}>\n                                    <option value=\"+\"> more than </option>\n                                    <option value=\"-\"> less than </option>\n                                </select>\n                                <select className=\"custom-select\" name=\"gamePercent\" onChange={(event) => this.gameSelection(event)} value= {this.props.gamePercent}>\n                                    <option value=\"100\"> 100% </option>\n                                    <option value=\"90\"> 90% </option>\n                                    <option value=\"80\"> 80% </option>\n                                    <option value=\"70\"> 70% </option>\n                                    <option value=\"60\"> 60% </option>\n                                    <option value=\"50\"> 50% </option>\n                                    <option value=\"40\"> 40% </option>\n                                    <option value=\"30\"> 30% </option>\n                                    <option value=\"20\"> 20% </option>\n                                    <option value=\"10\"> 10% </option>\n                                    <option value=\"0\"> 0% </option>\n                                </select>\n                                    of the games </li>\n                            </ul> \n                    </div>\n\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    datePickers: state.stats.datePickers,\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    offense: state.stats.playerFilters.offense,\n    defense: state.stats.playerFilters.defense,\n    goalie: state.stats.playerFilters.goalie,\n    operator: state.stats.gameFilters.operator,\n    gamePercent: state.stats.gameFilters.gamePercent,\n})\n\nexport default connect(mapStateToProps, { toggleViews, filterPlayerRecordsByType, filterPlayerRecordsByGames }) (Filters)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {HorizontalBar} from \"react-chartjs-2\";\n// see https://www.npmjs.com/package/react-chartjs-2 for documentation\n\n// defaults.global.barThickness = 20;\nclass DataChart extends Component {\n    \n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"chart\")\n    }\n\n    render(){\n        \n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.chartDisplay)}> {this.props.chartDisplay === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Show Chart</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        \n                        <div className={\"chart \" }>\n                            {this.props.chartData && this.props.chartDisplay !== \"dead\" ?  \n                            <div className=\"chartAreaWrapper\">\n                                <HorizontalBar\n                                    data={this.props.curatedChartData}\n                                    height= { this.props.chartData.labels.length * 50 }\n                                    className= { this.props.chartDisplay }\n                                    options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false,\n                                            barThickness: 100\n                                            }}\n                                    />\n                            </div> : null }  \n                        </div>\n                    </div>\n                </div>\n                )\n\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    chartData: state.stats.chartData,\n    curatedChartData: state.stats.curatedChartData,\n    chartDisplay: state.stats.chartDisplay,\n    chartingOptions: state.stats.chartingOptions,\n})\n\nexport default connect(mapStateToProps, { toggleViews }) (DataChart)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\n\nimport NavBar from \"../components/NavBar.js\"\nimport DateSelector from \"../components/RecordsPageComp/DateSelector.js\"\nimport GameSelector from \"../components/RecordsPageComp/GameSelector.js\"\nimport PlayerSelector from \"../components/RecordsPageComp/PlayerSelector.js\"\nimport Showcase from \"../components/RecordsPageComp/Showcase.js\"\nimport Filters from \"../components/RecordsPageComp/Filters.js\"\nimport DataChart from \"../components/RecordsPageComp/DataChart.js\"\nclass Records extends Component { \n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main main_padded\"> \n            <h1 className=\"h1_main\">League Records</h1>\n            \n            <section>\n                < DateSelector />\n            </section>\n            \n            <section>\n                < GameSelector />\n            </section>\n            \n            <section>\n                < PlayerSelector />\n            </section>\n            \n            <section>\n                < DataChart />\n            </section>\n\n            <section>\n                < Showcase />\n            </section>\n\n            <section>\n                < Filters />\n            </section>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    games: state.games.games\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps) (Records)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n\nimport { updateUserForm } from '../js/actions/authenticateActions';\nimport { createNewUser } from '../js/actions/authenticateActions';\nimport { authenticateUser } from '../js/actions/authenticateActions';\n\nclass LoginForm extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n    handleCancel(event) {\n        event.preventDefault()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedUser = {...this.props.user, [name]: value}\n        this.props.updateUserForm(editedUser)\n        // this.setState({...this.state, [name]: value})\n        \n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.props.in === \"show_tab\") {\n            console.log(\"Sign-in mode activated\")\n            let user = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                }\n            this.props.authenticateUser(\"local\", user)\n            }\n        else {\n            let newUser = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                email: this.props.user.email,\n                privilege: \"user\"\n                }\n            // let id = this.props.player._id\n            this.props.createNewUser(newUser)\n        }\n\n        // go back to tab#1\n        // this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Username: </label>\n                            <input \n                                type=\"text\" \n                                name=\"username\"\n                                value= {this.props.user.username}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Password: </label>\n                            <input \n                                type=\"text\" \n                                name=\"password\"\n                                value= {this.props.user.password}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        {this.props.up === \"show\" ? (\n                            <div className=\"field\">\n                                <label>Email: </label>\n                                <input \n                                    type=\"text\" \n                                    name=\"email\"\n                                    value= {this.props.user.email}\n                                    onChange={(event) => this.handleChange(event)}\n                                    />\n                            </div>\n                        ) : null}\n                        <div className=\"button_container\">\n                            {this.props.in === \"show_tab\" ? \n                                <button type=\"submit\" value=\"Log In\" className=\"contrast_color\"> Sign in </button> \n                                :\n                                <button type=\"submit\" value=\"submit\" className=\"contrast_color\"> Sign up </button>\n                            } \n                            <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    user: state.authenticate.user,\n    in: state.authenticate.tabs[0],\n    up: state.authenticate.tabs[1]\n})\n\nexport default connect(mapStateToProps, { updateUserForm, createNewUser, authenticateUser }) (LoginForm)","import {\n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE,\n    AUTHENTICATE\n} from \"./types\"\n\n\nimport API from \"../../utils/API\"\n\nexport const updateUserForm = (data) => dispatch => {\n    dispatch({\n        type: UPDATE_USER_FORM,\n        payload: data\n    })\n}\n\nexport const createNewUser = ( newUser ) => dispatch => {\n    API.addNewUser( newUser).then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NEW_USER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n    dispatch({\n        type: SIGN_MODE,\n        payload: id\n    })\n}\n\nexport const authenticateUser = (method, user) => dispatch => {\n    console.log(\"data in authenticateUser authenticateActions.js: \", user)\n    if (method === \"local\") {\n        API.authenticateUser(\"local\", user).then(res => {\n            if (!res.data.errmsg) {\n                console.log(\"Response from authentication API: \", res.data)\n                window.location = res.data.redirectURI;\n                dispatch({\n                    type: AUTHENTICATE,\n                    payload: res.data\n                })\n                /*switch (res.data.privilege) {\n                    case \"SuperAdmin\":\n                    saveState({\n                        SuperAdmin: true,\n                        draftTeams: true,\n                        changeAvailability: true,\n                        createGame: true,\n                        deleteGame: true,\n                        editScore: true,\n                        changeLock: true,\n                        createPlayer: true,\n                        editMember: true,\n                        deleteMember: true,\n                        editTenBucker: true,\n                        deleteTenBucker: true\n                    })\n\n                    break;\n\n                    default:\n                    return;\n                }*/\n            }\n        })\n    }\n}\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from \"../js/actions/authenticateActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport LoginForm from \"../components/LoginForm.js\";\n\nclass Login extends Component { \n\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide_tab\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_alternate\">\n            <h1 className=\"h1_alternate\">Login</h1>\n            <div className=\"two_tab_centering\">\n                <span id=\"1\" className={\"auth_tab \" + this.props.tab1 } onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Sign-in </span>\n                <span id=\"2\" className={\"auth_tab \" + this.props.tab2 } onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Sign-up </span>\n            </div>\n            <div className= \"main_for_tab\">\n                <LoginForm />\n            </div>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    tab1: state.authenticate.tabs[0],\n    tab2: state.authenticate.tabs[1],\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleTabStatus } ) (Login)\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    DELETE_GAME, \n    GET_GAME, \n    EDIT_GAME_INFO, \n    RESET,\n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE,\n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS,\n    HIDE_NON_MEMBERS, \n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO,\n    UNLOCK_GAME_INFO,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n} from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    games: [],\n    upcomingGames: [],\n    pastGames: [], // games showing in the \"Past Games\" list of Draft.js. Sorted from recent to old\n    gameInfo: {\n        goals: 0,\n        assists: 0,\n        darkPickNum: 0,\n        whitePickNum: 0,\n        available: true,\n        team: \"N/A\"\n    },\n    visibility: {\n        top: \"dead\",\n        main: \"dead\",\n        bottom: \"dead\",\n        gameStats: \"dead\",\n        noStatsMessage: \"dead\",\n    },\n    gameDate: \"\",\n    draft: {},\n    unavailableMembers: [],\n    allTenBuckers: [],\n    notPlayingNonMembers: [],\n    playingNonMembers: [],\n    lockStatus: \"visible\", // this hides the arrows + delete icons if the game is locked\n    showingNonPlayingTenBuckers: \"Show\",    // which means this section is hidden\n    showingUnavailableMembers: \"Show\",      // which means this section is hidden\n    draftMode: \"Draft\",\n    pickButtons: {\n        left: \"Set Dark Picks\",\n        right: \"Set White Picks\"\n    },\n    picked: [],\n    unpicked: [],\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_GAMES:\n        return {\n            ...state,\n            games: action.payload,\n            upcomingGames: action.payload.filter(game => game._id >= moment().format(\"YYYY-MM-DD\")),\n            pastGames: _.sortBy(action.payload.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n        }\n        \n        case DELETE_GAME:\n        return {\n            ...state,\n            visibility: initialState.visibility,\n            games: state.games.filter(game => game._id !== action.payload._id),\n            upcomingGames: state.upcomingGames.filter(game => game._id !== action.payload._id),\n            pastGames: _.sortBy(state.pastGames.filter(game => game._id !== action.payload._id),\"_id\").reverse(),\n            lockStatus: \"hidden\",\n            draftMode: initialState.draftMode,\n            pickButtons: initialState.pickButtons,\n            }\n\n\n        case NEW_GAME:\n        return {\n            ...state,\n            games: _.sortBy([...state.games, action.payload], \"game_date\"),\n            upcomingGames: action.payload._id >= moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.upcomingGames], \"game_date\") : state.upcomingGames,\n            pastGames: action.payload._id < moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.pastGames], \"game_date\").reverse() : state.pastGames \n        }\n\n        case GET_GAME:\n        return {\n            ...state,\n            draftMode: initialState.draftMode,\n            gameDate: action.payload.game._id,\n            draft: action.payload.game,\n            // This hides the locker if \n            lockStatus: action.payload.game.lock_status === true ? \"hidden\" : \"visible\",\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.game.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            // We initiate the array of playing ten-buckers here (for them to not get added twice, this array will be check against when clicking on add non-member)\n            playingNonMembers: action.payload.game.players.filter(player => player.membershipStatus !== \"Member\"),\n            visibility: {\n                top: \"visible\", \n                main: \"visible\", \n                bottom: \"visible\",\n                gameStats: action.payload.gameStats,\n                noStatsMessage: action.payload.noStatsMessage\n            }\n        }\n\n        case EDIT_GAME_INFO:\n        return {\n            ...state,\n            draft: action.payload.game,\n        }\n        \n        case RESET:\n        return {\n            ...state,\n            draft: action.payload,\n            unavailableMembers: initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            playingNonMembers: initialState.playingNonMembers,\n            picked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case MAKE_MEMBER_UNAVAILABLE:\n        return {\n            ...state,\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            draft: action.payload\n        }\n\n        case MAKE_TEN_BUCKER_UNAVAILABLE:\n        return {\n            /* The Ten Buckers are managed outside of the \"game\" object. If they would just be set as \"Unavailable\" like Members, duplicates may be created.\n            They need to be removed from the game object altogether. Therefore, their status is handled in the reducer once sent to the state.\n            The allTenBuckers array that populates after a click is making this easier: when a Ten Bucker is set as unavailable, it is filtered \n            out of the array of playingNonMembers. It is also added to the array of notPlayingNonMembers: their data is checked agains the array of allTenBuckers\n            via a filter. It creates an array of 1 element, that we add to the notPlayingNonMembers array by extracting its index 0 */\n            ...state,\n            draft: action.payload.gameData,\n            notPlayingNonMembers: state.showingNonPlayingTenBuckers === \"Hide\" ? _.sortBy([...state.notPlayingNonMembers, state.allTenBuckers.filter(player => player._id === action.payload.player)[0]],\"name\") : initialState.notPlayingNonMembers,\n            playingNonMembers: state.playingNonMembers.filter(player => player._id !== action.payload.player),\n        }\n        // this case only deals with Members as Ten Buckers are handled separately through ADD_NON_MEMBER\n        case MAKE_MEMBER_AVAILABLE:\n        return {\n            ...state,\n            // removing properly from the array of unavailable players\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? (state.draft.players.filter(player => player.gameInfo.available === false && player.membershipStatus === \"Member\" && player._id !== action.payload.player)) : initialState.unavailableMembers,\n            draft: action.payload.game,\n        }\n\n        case SHOW_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: state.draft.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false),\n            showingUnavailableMembers: \"Hide\"\n        }\n        \n        case HIDE_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: initialState.unavailableMembers,\n            showingUnavailableMembers: \"Show\"\n        }\n\n        case SHOW_NON_MEMBERS:\n        return {\n            ...state,\n            allTenBuckers: action.payload.all,\n            notPlayingNonMembers: action.payload.new,\n            showingNonPlayingTenBuckers: \"Hide\"\n        }\n\n        case HIDE_NON_MEMBERS:\n        return {\n            ...state,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            showingNonPlayingTenBuckers: \"Show\"\n        }\n        \n        case ADD_NON_MEMBER:\n        return {\n            ...state,\n            draft: action.payload.players,\n            notPlayingNonMembers: state.notPlayingNonMembers.filter(player => player._id !== action.payload.player._id),\n            playingNonMembers: [action.payload.player, ...state.playingNonMembers]\n        }\n\n        case LOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n        \n        case UNLOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n\n        case TRIGGER_PICK_MODE:\n        return {\n            ...state,\n            draftMode: action.payload.team,\n            pickButtons: action.payload.buttons,\n            visibility: {top: \"hidden\", main: \"visible\", bottom: \"visible\"},\n            // as opposed to the \"SET_PICK\" case, the filtering needs to happen in the reducer, as it is based on data already stored in the state (not coming from API)\n            picked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case TRIGGER_DRAFT_MODE:\n        return {\n            ...state,\n            draftMode: \"Draft\",\n            visibility: {top: \"visible\", main: \"visible\", bottom: \"visible\"},\n            pickButtons: initialState.pickButtons\n        }\n\n        case SET_PICK:\n        return {\n            ...state,\n            draft: action.payload.game,\n            picked: action.payload.picked,\n            unpicked: action.payload.unpicked\n            \n        }\n\n        default: \n        return state;\n    }\n}","import { SHOW_FUTURE, SHOW_PAST } from '../actions/types';\nconst moment = require(\"moment\");\n\nconst initialState = {\n    showing: \"future\",\n    upcoming_visibility: \"visible\",\n    past_visibility: \"hidden\",\n    dateHeader: \"Upcoming\",\n    buttonMsg: \"Past\",\n    today: moment().format(\"YYYY-MM-DD\")    \n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_FUTURE:\n        return {\n            ...state,\n            upcoming_visibility: \"visible\",\n            past_visibility: \"hidden\",\n            dateHeader: \"Upcoming\",\n            buttonMsg: \"Past\",\n            showing: \"future\",\n        }\n        \n        case SHOW_PAST:\n        return {\n            ...state,\n            upcoming_visibility: \"hidden\",\n            past_visibility: \"visible\",\n            dateHeader: \"Past\",\n            buttonMsg: \"Upcoming\",\n            showing: \"past\"\n        }\n        \n        default:\n        return state;\n    }\n}","import { FETCH_PLAYERS, EDIT_PLAYER, ADD_PLAYER, DELETE_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from '../actions/types';\nimport _ from \"underscore\"\n\nconst initialState = {\n    players: [],\n    player: {\n        name: \"\",\n        fullName: \"\",\n        preferredPosition: \"Forward\",\n        membershipStatus: \"Member\",\n        email: \"\",\n        playerLevel: \"A+\"\n        },\n\n    tabs: [\"show_tab\",\"hide_tab\",\"hide_tab\"],\n    panels: [\"visible\", \"hidden\", \"hidden\"],\n    \n    formMode: \"Add\"\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_PLAYERS:\n        return {\n            ...state,\n            players: action.payload\n        }\n\n        case ADD_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([...state.players, action.payload], \"name\")\n        }\n\n        case DELETE_PLAYER:\n        return {\n            ...state,\n            deletedPlayer: action.payload,\n            players: state.players.filter(player => player._id !== action.payload._id)\n        }\n        \n        case EDIT_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([action.payload, ...state.players.filter(player => player._id !== action.payload._id)], \"name\")\n        }\n        \n        case SHOW_TAB:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide_tab\"} else {return tab = \"show_tab\"}}),\n            panels: state.panels.map((panel, index) => {if(index !== action.payload) {return panel = \"hidden\"} else {return panel = \"visible\"}})\n        }\n\n        case RESET_TABS:\n        return {\n            ...state,\n            player: initialState.player,\n            formMode: \"Add\",\n            tabs: initialState.tabs,\n            panels: initialState.panels,\n        }\n\n        case EDIT_FORM:\n        return {\n            ...state,\n            formMode: \"Edit\",\n            tabs: [\"hide_tab\",\"hide_tab\",\"show_tab\"],\n            panels: [\"hidden\", \"hidden\", \"visible\"],\n            player: action.payload\n        }\n\n        case UPDATE_FIELD:\n        return {\n            ...state,\n            player: action.payload\n        }        \n\n        default: \n        return state;\n    }\n}","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES,\n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES\n    } from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    visibility: \"dead\",\n    message: \"Teams have not been drafted for this team yet. Please come back later!\",\n    gamesForRecords: [],\n    pastGamesFromAPI: [],\n    reducedGames: [],\n    gameVisibility: [],\n    selectedGames: [],\n    unselectedGames: [],\n    selectedPlayers: [],\n    unselectedPlayers: [],\n    datePickers: \"visible\",\n    listOfGames: \"dead\",\n    listOfPlayers: \"dead\", \n    sortOptionsDisplay: \"dead\",\n    chartDisplay: \"dead\",\n    playerRecords: [],\n    arrayOfTenBuckersID: [],\n    sortingOptions:\n        {\n            alphaDesc: \"active\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"selected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\",\n        },\n    chartingOptions: {\n        gamesTab: \"selected_chart_games\",\n        winsTab: \"selected_chart_wins\",\n        goalsTab: \"selected_chart_goals\",\n        gpgTab: \"selected_chart_gpg\",\n        assistsTab: \"selected_chart_assists\",\n        apgTab: \"selected_chart_apg\",\n        },\n    chartData: {\n        labels: [],\n        datasets: [\n            {\n                label: \"Goals\",\n                data: [],\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: \"Assists\",\n                data: [],\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Games\",\n                data: [],\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Wins (%)\",\n                data: [],\n                backgroundColor: 'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                hoverBorderColor: 'rgba(75,192,192,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Losses (%)\",\n                data: [],\n                backgroundColor: '#d3b8ae',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#d3b8ae',\n                hoverBorderColor: '#d3b8ae',\n                barThickness: 15,\n            },\n            {\n                label: \"Ties (%)\",\n                data: [],\n                backgroundColor: '#ff8a65',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#ff8a65',\n                hoverBorderColor: '#ff8a65',\n                barThickness: 15,\n            },\n            {\n                label: \"GPG\",\n                data: [],\n                backgroundColor: 'rgba(153,102,255,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                hoverBorderColor: 'rgba(153,102,255,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"APG\",\n                data: [],\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                options: {barThickness: 100},\n            },\n        ]\n    },\n    memberSelection: \"unselected_member\",\n    tenBuckerSelection: \"unselected_non_member\",\n    selectors: {\n        forwardSelection: \"unselected_forward\",\n        goalieSelection: \"unselected_goalie\",\n        defenseSelection: \"unselected_defense\",\n        positionVisibility: \"all\"\n        },\n    playerModal: false,\n    playerModalData: {},\n    allGamesSelection: \"unselected_game\",\n    playerFilters: {\n            offense: \"selected\",\n            defense: \"selected\",\n            goalie: \"selected\"\n    },\n    gameFilters: {\n            operator: \"+\",\n            gamePercent: \"0\",\n    },\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_GAMES_TO_STATS:\n        return {\n            ...state,\n            visibility: \"visible\",\n        }\n            \n        case GET_GAMES_AND_TRANSFORM:\n        return {\n            ...state,\n            reducedGames: action.payload.game,\n            gameVisibility: action.payload.visibility,\n        }\n\n        case GET_GAMES_IN_TIMESPAN:\n        return {\n            ...state,\n            pastGamesFromAPI: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            gamesForRecords: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            arrayOfTenBuckersID: action.payload.allTenBuckers,\n        }\n\n        case SET_YEARS_VISIBILITIES:\n        return {\n            ...state, \n            gameVisibility: action.payload\n        }\n\n        case ADD_GAME_TO_SELECTED:\n        return {\n            ...state,\n            selectedGames: [...state.selectedGames, action.payload],\n            unselectedGames: state.unselectedGames.filter(game => game._id !== action.payload._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.playerFilters\n        }\n\n        case REMOVE_GAME_FROM_SELECTED:\n        return {\n            ...state,\n            selectedGames: state.selectedGames.filter(game => game._id !== action.payload._id),\n            unselectedGames: [...state.unselectedGames, action.payload],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case ADD_PLAYER_TO_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: [...state.selectedPlayers, action.payload.selected],\n            unselectedPlayers: state.unselectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case REMOVE_PLAYER_FROM_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: state.selectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            unselectedPlayers: [...state.unselectedPlayers, action.payload.selected],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters\n        }\n        \n        case TOGGLE_RECORDS_VIEWS:\n        return {\n            ...state,\n            datePickers: action.payload.dates,\n            listOfGames: action.payload.games,\n            listOfPlayers: action.payload.players, \n            sortOptionsDisplay: action.payload.sort,\n            chartDisplay: action.payload.chart\n        }\n\n        case ADD_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\"),\n            filteredPlayerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\")\n        }\n\n        case REMOVE_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\"),\n            filteredPlayerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\")\n        }\n\n        case REPLACE_PLAYERS_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(action.payload, \"name\"),\n            filteredPlayerRecords: _.sortBy(action.payload, \"name\"),\n        }\n\n        case SORT_AZ_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\").reverse()\n        }\n\n        case SORT_AZ_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\"),\n        }\n\n        case SORT_GAMES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\")\n        }\n\n        case SORT_GAMES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\").reverse()\n        }\n\n        case SORT_WINS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\")\n        }\n\n        case SORT_WINS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\").reverse(),\n        }\n\n        case SORT_LOSSES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\")\n        }\n\n        case SORT_LOSSES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\").reverse(),\n        }\n\n        case SORT_TIES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\")\n        }\n\n        case SORT_TIES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\").reverse(),\n        }\n\n        case SORT_GOALS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\"),\n        }\n        \n        case SORT_GOALS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\").reverse(),\n        }\n        \n        case SORT_ASSISTS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\"),\n        }\n        \n        case SORT_ASSISTS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\").reverse(),\n        }\n\n\n        case SORT_GPG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\")\n        }\n\n        case SORT_GPG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\").reverse(),\n        }\n\n        case SORT_APG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\"),\n        }\n\n        case SORT_APG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\").reverse(),\n        }\n\n        case SET_DATE_RANGE:\n        return {\n            ...state,\n            dateRange: action.payload,\n            gamesForRecords: state.pastGamesFromAPI.filter(game => game._id >= action.payload.from && game._id <= action.payload.to)\n        }\n        \n        case TOGGLE_SELECT_ALL:\n        return {\n            ...state,\n            memberSelection: action.payload.player === \"member\" ? action.payload.memberSelection : state.memberSelection,\n            tenBuckerSelection: action.payload.player !== \"member\" ? action.payload.tenBuckerSelection : state.tenBuckerSelection,\n        }\n        \n        case BATCH_CARD_UPDATE:\n        return {\n            ...state,\n            // playerRecords: _.sortBy(action.payload.concat(state.playerRecords), \"name\"),\n            playerRecords: action.payload.concat(state.playerRecords.filter(player => player._id !== action.payload._id))\n        }\n\n        case BATCH_CHART_UPDATE:\n        return {\n            ...state,\n            chartData: action.payload,\n            curatedChartData: action.payload,\n        }\n\n        case BATCH_UNSELECT:\n        return {\n            ...state,\n            playerRecords: _.sortBy(state.playerRecords.filter(player => player.membershipStatus !== action.payload), \"name\")\n        }\n\n        case TOGGLE_PLAYER_MODAL:\n        return {\n            ...state, \n            playerModal: action.payload.status,\n            playerModalData: action.payload.data\n        }\n        case BATCH_GAMES:\n        return {\n            ...state, \n            allGamesSelection: action.payload === \"unselected_game\" ? \"selected_game\" : \"unselected_game\"\n        }\n\n        case UNSELECT_ALL_GAMES:\n        return {\n            ...state, \n            selectedGames: initialState.selectedGames,\n            unselectedGames: state.pastGamesFromAPI,\n            allGamesSelection: \"unselected_game\"\n        }\n        // Currently, the gameFilters and playerFilters cannot operate simultaneously. Therefore, playing with one should reset the other (to avoid confusion) \n        case FILTER_PLAYER_RECORDS_BY_TYPE:\n        return {\n            ...state,\n            gameFilters: initialState.gameFilters,\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: action.payload.playerFilters,\n            // \"only\", means that the players have to match a certain condition (hence: \"===\"), \"but\", means that matching players should be filtered out (\"!==\")\n            filteredPlayerRecords: action.payload.operator === \"only\" ? _.sortBy(state.playerRecords.filter(player => player.preferredPosition === action.payload.playerType),\"name\") : _.sortBy(state.playerRecords.filter(player => player.preferredPosition !== action.payload.playerType),\"name\") \n        }\n\n        case FILTER_PLAYER_RECORDS_BY_GAMES:\n        return {\n            ...state,\n            playerFilters: initialState.playerFilters,\n            sortingOptions: initialState.sortingOptions,\n            gameFilters: action.payload,\n            filteredPlayerRecords: action.payload.operator === \"-\" ? _.sortBy(state.playerRecords.filter(player => player.gamesPlayed < state.selectedGames.length * action.payload.gamePercent / 100), \"name\") : _.sortBy(state.playerRecords.filter(player => player.gamesPlayed > state.selectedGames.length * action.payload.gamePercent / 100), \"name\")\n        }\n\n        default:\n        return state;\n    }\n}","import { \n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE,\n    AUTHENTICATE\n} from \"../actions/types\"\n\nconst initialState = {\n    connectionState: \"Login\",\n    user: \n        {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n        },\n    tabs: [\"show_tab\",\"hide_tab\"], // this is used in the sign-in/sign-up user form\n    // superAdminPrivileges: false,\n    // adminPrivileges: false,\n    // draftPrivileges: false,\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_USER_FORM:\n        return {\n            ...state,\n            user: action.payload,\n        }\n\n        case ADD_NEW_USER:\n        return {\n            ...state,\n            user: initialState.user\n        }\n\n        case SIGN_MODE:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide_tab\"} else {return tab = \"show_tab\"}})\n        }\n\n        case AUTHENTICATE:\n        return {\n            ...state,\n            connectionState: action.payload.data.logged === true ? \"Logout\" : \"Login\"\n        }\n        \n        default: \n        return state;\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./gameReducer\"\nimport displayReducer from \"./displayReducer\"\nimport playerReducer from \"./playerReducer\"\nimport statsReducer from \"./statsReducer\"\nimport authenticateReducer from \"./authenticateReducer\"\n\nexport default combineReducers({\n    games: gameReducer,\n    display: displayReducer,\n    players: playerReducer,\n    stats: statsReducer,\n    authenticate: authenticateReducer,\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {}\nconst middleware = [thunk]\n\n// createStore is the function for creating the Redux store\n\n// since it crashes on Safari, and Chrome in incognito mode, we only install Redux DevTools on Chrome in Dev Mode\nif (window.navigator.userAgent.includes('Chrome') && window.location.origin === \"http://localhost:3000\") {\n    var store = createStore(\n        rootReducer, \n        initialState, \n        compose(\n            applyMiddleware(...middleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n            )\n        );\n} else {\n    store = createStore(\n        rootReducer, \n        initialState,\n        compose(\n            applyMiddleware(...middleware)\n            )\n        )\n}\n\n\nexport default store;","\nimport React from 'react';\n// React router\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// const Home = React.lazy(() => import(\"./pages/Home\"));\nimport Home from \"./pages/HomePage.js\";\nimport Draft from \"./pages/DraftPage.js\";\nimport Player from \"./pages/PlayerPage.js\";\nimport Stats from \"./pages/StatsPage.js\";\nimport Records from \"./pages/RecordsPage.js\";\nimport Login from \"./pages/LoginPage.js\";\nimport './styles/css/App.css';\n\n// Redux \nimport { Provider } from 'react-redux'\nimport store from \"./js/store\"\n// Font-Awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { \n  faChevronUp, \n  faChevronDown, \n  faMinusCircle, \n  faTimesCircle, \n  faArrowCircleLeft, \n  faAngleRight, \n  faPlusCircle, \n  faTimes, \n  faPlus, \n  faCaretDown, \n  faCaretRight, \n  faLongArrowAltUp, \n  faLongArrowAltDown, \n  faCircle,\n  faLock,\n  faUnlockAlt,\n  // faSquare,\n  faCheckSquare\n  } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faChevronUp, faChevronDown, faMinusCircle, faTimesCircle, faArrowAltCircleRight, faArrowCircleLeft, faAngleRight, faPlusCircle, faMinusCircle, faTimes, faPlus, faCaretDown, faCaretRight, faLongArrowAltUp, faLongArrowAltDown, faCircle, faLock, faUnlockAlt, /* faSquare,*/ faCheckSquare)\n// const Records = React.lazy(() => import('./pages/Records'));\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={Home} />\n          <Route path=\"/Draft\" component={Draft} />\n          <Route path=\"/Player\" component={Player} />\n          <Route path=\"/Stats\" component={Stats} />\n          <Route path=\"/Records\" component={Records} />\n          {/* <Route path=\"/Records\" render={() => (<Suspense fallback={<div>Loading...</div>}> <Records /></Suspense>)}/> */}\n          <Route path=\"/Login\" component={Login} />\n          <Route path=\"*\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>\n\n);\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/logo_sm.afca9f0c.jpeg\";"],"sourceRoot":""}