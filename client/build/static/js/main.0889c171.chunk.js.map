{"version":3,"sources":["utils/API.js","components/sessionStorage.js","components/NavBar.js","pages/HomePage.js","js/actions/gameActions.js","js/actions/types.js","components/DraftPageComp/GameList.js","js/actions/playerActions.js","components/DraftPageComp/Calendar.js","components/DraftPageComp/Drafter.js","components/DraftPageComp/Picker.js","components/DraftPageComp/GameOptionsBottom.js","components/DraftPageComp/GameOptionsTop.js","components/Locker.js","pages/DraftPage.js","js/actions/displayActions.js","components/PlayerPageComp/Form.js","components/PlayerPageComp/MemberList.js","components/PlayerPageComp/TenBuckerList.js","pages/PlayerPage.js","components/GameDisplayUtils.js","js/actions/statsActions.js","components/StatsPageComp/PastGamesList.js","components/StatsPageComp/ScoreBoard.js","components/StatsPageComp/NoStatsBoard.js","pages/StatsPage.js","components/RecordsPageComp/DateRange.js","components/RecordsPageComp/DateSelector.js","components/RecordsPageComp/curateData.js","components/RecordsPageComp/GameSelector.js","components/RecordsPageComp/PlayerSelector.js","components/RecordsPageComp/PlayerStatsModal.js","components/RecordsPageComp/Showcase.js","components/RecordsPageComp/Filters.js","components/RecordsPageComp/DataChart.js","pages/RecordsPage.js","components/LoginForm.js","js/actions/authenticateActions.js","pages/LoginPage.js","js/reducers/gameReducer.js","js/reducers/displayReducer.js","js/reducers/playerReducer.js","js/reducers/statsReducer.js","js/reducers/authenticateReducer.js","js/reducers/index.js","js/store/index.js","App.js","registerServiceWorker.js","index.js","components/images/logo_sm.jpeg"],"names":["currentURL","window","location","origin","API","url","axios","get","id","date","players","post","game_date","delete","gameId","data","put","player","userData","mode","loadState","serializedState","sessionStorage","getItem","JSON","parse","err","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navDisplay","navItemsVisibility","handleScroll","bind","assertThisInitialized","setState","scroll","scrollY","navbar","document","querySelector","totalHeight","Math","max","documentElement","clientHeight","innerHeight","objectSpread","top","offsetTop","height","offsetHeight","pageHeight","addEventListener","status","_this2","react_default","a","createElement","className","href","onClick","changeStatus","src","SmallLogo","alt","type","Component","Home","components_NavBar","getGame","game","dispatch","then","res","Error","statusText","gameStats","noStatsMessage","darkPlayers","filter","gameInfo","team","whitePlayers","length","payload","editGameInfo","setPick","available","picked","_","sortBy","darkPickNum","obj","unpicked","whitePickNum","GameList","getGameInfo","deleteGameFunc","deleteGame","fetchGames","privileges","console","log","dateHeader","upcomingGames","map","key","_id","index_es","icon","pastGames","connect","games","display","today","buttonMsg","upcoming_visibility","past_visibility","lockStatus","fetchPlayers","deletePlayer","editForm","moment","require","zombiePlayers","name","playerLevel","preferredPosition","membershipStatus","goals","assists","Calendar","createGame","handleChange","handleSubmit","apply","toConsumableArray","concat","dateSelected","event","preventDefault","membersWithGameInfo","member","dateOfGame","format","addGame","onSubmit","react_datepicker_es","placeholderText","selected","onChange","value","members","Drafter","draftTeams","changeAvailability","playerID","playerStatus","draft","setMemberUnavailable","gameData","setTenBuckerUnavailable","setAvailable","tenBuckerToAdd","addNonMember","draftedDark","draftedWhite","setUnavailable","faArrowAltCircleRight","assignTeam","gameDate","undrafted","unavailableMembers","makeAvailable","notPlayingNonMembers","addTenBuckerToDraft","size","draftMode","newPlayer","existingPlayers","newRoster","indexOfPlayerToRemove","indexOf","splice","unavailable","forEach","index","indexOfPlayerToEdit","addPick","removePick","rankOneUp","rankOneDown","GameOptionsBottom","randomize","inputArray","outputArray","randomPlayer","floor","random","push","filterTeams","arrayOfPlayerObjects","rosterTeam1","e","rosterTeam2","testPick","inputObject","rankedPlayers","picks","nameOfTeam","serpentineDraft","num","darkPicks","whitePicks","num1","num2","modulo","completeRounds","i","unavailablePlayers","allPlayers","alternateDraft","resetPlayers","reset","mixedRosters","output","reduce","levels","numOutput","keys","playersArray","entries","arrayOfUnavailablePlayers","currentMode","triggerDraftMode","triggerPickMode","visibility","bottom","toggleMode","pickButtons","left","resetTeams","right","autodraft","buttons","GameOptionsTop","action","showUnavailable","hideUnavailable","tenBuckers","arrayOfIds","playingNonMembers","newTenBuckers","showNonMembers","hideNonMembers","showingUnavailableMembers","showingNonPlayingTenBuckers","gameParticipants","allTenBuckers","notPlayingTenBuckers","all","new","Locker","lockGameInfo","unlockGameInfo","unlockGame","lockGame","lock_status","screenSize","innerWidth","Draft","changeLock","currentlyShowing","toggleGames","DraftPageComp_Calendar","DraftPageComp_GameList","toggleGamesFunc","showing","DraftPageComp_GameOptionsTop","main","DraftPageComp_Drafter","Picker","DraftPageComp_GameOptionsBottom","components_Locker","currentState","Form","createPlayer","handleCancel","resetTabs","target","editedPlayer","defineProperty","updateField","assignedLevel","fullName","email","formMode","addPlayer","editPlayer","defaultValue","tab1","tab2","panel1","panel2","errors","message","MemberList","editMember","deleteMember","sendPlayerToEditForm","TenBuckerList","editTenBucker","deleteTenBucker","Player","currentStatus","tabIndex","parseInt","toggleTabStatus","toggleStatus","tab3","PlayerPageComp_MemberList","PlayerPageComp_TenBuckerList","panel3","PlayerPageComp_Form","tabs","panels","monthify","string","yearString","substring","monthString","getGamesForRecords","arrayOfTenBuckerIDs","array","reducedGames","object","difYears","arrayOfObjects","values","remapped","difMonths","beautifyGames","years","setVisibility","toggleViews","element","dates","sort","chart","batchChartUpdate","newData","updatePlayers","togglePlayerModal","newStatus","PastGameList","visibleBefore","gameVisibility","slice","visibleAfter","newArray","_this3","_ref","_ref2","slicedToArray","renderGames","_this4","reverse","year","toggleVisibility","renderMonth","renderYear","stats","ScoreBoard","editScore","currentValue","goalUpdate","scoreUpdate","goals_dark","goals_white","win","playerUpdate","assistUpdate","logStat","NoStatsBoard","Stats","PastGamesList","StatsPageComp_NoStatsBoard","StatsPageComp_ScoreBoard","DateRange","handleChangeStart","handleChangeEnd","startDate","endDate","selectDateRange","datePickers","selectsStart","isClearable","selectsEnd","start","end","from","to","DateSelector","RecordsPageComp_DateRange","allGames","gamesForRecords","createCardsArray","arrayOfPlayers","arrayOfGames","transformedArrayForCards","broomballer","gamesPlayed","playerReduced","wins","losses","ties","gamePlayedFromArray","winsFromArray","lossesFromArray","tiesFromArray","winPercent","lossPercent","tiePercent","goalsFromArray","b","assistsFromArray","gpg","parseFloat","apg","Number","isInteger","toFixed","playerWithoutRecord","loss","tie","createChartData","arrayOfCards","labels","goalsArray","assistsArray","gamesPlayedArray","winPercentArray","lossPercentArray","tiePercentArray","gpgArray","apgArray","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barThickness","options","GameSelector","unselectGame","selectedGames","match","cardsArray","selectedPlayers","newObject","markAsSelected","selectedPlayersNum","selectAllGames","gameSelection","unselectAllGames","gamesSelected","includes","selectGame","unselectedGames","gamesUnselected","_this5","_this6","listOfGames","chartData","allGamesSelection","PlayerSelector","unselectPlayer","removePlayerStatObject","selectedGamesNum","addBatchChartData","toggleSelectAll","allMembersAndSelectedTenBuckers","selectAndTransform","batchUnselect","allTenBuckersAndSelectedMembers","arrayOfTenBuckersID","selectPlayer","listOfPlayers","memberSelection","selectAllPlayers","tenBuckerSelection","unselectedPlayers","addPlayerStatObject","update","batchCardUpdate","PlayerStatsModal","reactstrap_es","isOpen","playerModal","toggle","centered","playerModalData","react_chartjs_2_es","responsive","maintainAspectRatio","Showcase","tab","ascArrow","toggleSortOptions","playerName","playerStats","gamesInChronoOrder","playerInfo","fill","lineTension","sortOptionsDisplay","numOfRecords","sortingOptions","azTab","toggleSort","alphaAsc","alphaDesc","gamesTab","gamesAsc","gamesDesc","winsTab","winsAsc","winsDesc","lossesTab","lossesAsc","lossesDesc","tiesTab","tiesAsc","tiesDesc","goalsTab","goalsAsc","goalsDesc","gpgTab","gpgAsc","gpgDesc","assistsTab","assistsAsc","assistsDesc","apgTab","apgAsc","apgDesc","playerRecords","positionVisibility","showPlayerStats","RecordsPageComp_PlayerStatsModal","filteredPlayerRecords","forwardSelection","selectors","defenseSelection","goalieSelection","Filters","setting","filterPlayerRecordsByType","offense","defense","goalie","_this$props$filterPla","filterPlayerRecordsByGames","gamePercent","operator","playerSelection","faSquare","playerFilters","gameFilters","playerType","DataChart","chartDisplay","curatedChartData","chartingOptions","Records","RecordsPageComp_DateSelector","RecordsPageComp_GameSelector","RecordsPageComp_PlayerSelector","RecordsPageComp_DataChart","RecordsPageComp_Showcase","RecordsPageComp_Filters","LoginForm","editedUser","user","updateUserForm","in","username","password","authenticateUser","newUser","privilege","createNewUser","up","authenticate","method","errmsg","redirectURI","Login","components_LoginForm","initialState","pastGamesFromAPI","connectionState","combineReducers","arguments","undefined","deletedPlayer","panel","dateRange","logged","middleware","thunk","navigator","userAgent","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","library","add","faChevronUp","faChevronDown","faMinusCircle","faTimesCircle","faArrowCircleLeft","faAngleRight","faPlusCircle","faTimes","faPlus","faCaretDown","faCaretRight","faLongArrowAltUp","faLongArrowAltDown","faCircle","faLock","faUnlockAlt","faCheckSquare","App","es","BrowserRouter","Switch","Route","exact","path","render","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App","getElementById","URL","process","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0889c171.chunk.js","sourcesContent":["import axios from \"axios\";\n// Transforming the current url in order to query the public API locally \n// (Express port 3001 changed to React port 3000 where the API exists).\n// Once deployed, it should reset to the domain name used.\nlet currentURL = window.location.origin\nif (currentURL === \"http://localhost:3000\") {\n    currentURL = \"http://localhost:8080\"\n    } \n// For Passport.js: \n/* Server sends SetCookie header then the browser handle to store it, and then the cookie is sent with requests made to \nthe same server inside a Cookie HTTP header.\nhttps://stackoverflow.com/questions/45536831/node-express-passport-req-user-undefined-but-works-in-postman\n\nconst config = {\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    }\n}\n*/\n\nexport default {\n    getGames: () => {       \n        const url = currentURL + \"/api/game/\"\n        return axios.get(url)\n        },\n    getGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.get(url)\n    },\n    addGame: (date, players) => {\n        const url = currentURL + \"/api/game/\"\n        return axios.post(url, { game_date: date, players: players})\n        },\n    deleteGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.delete(url)\n        },\n    editGame: (gameId, data) => {\n        const url = currentURL + \"/api/game/\" + gameId\n        return axios.put(url, { data })\n        },\n    getPlayers: () => {\n        const url = currentURL + \"/api/player/\"\n        return axios.get(url)\n        },\n    addPlayer: (player) => {\n        const url = currentURL + \"/api/player/\"\n        return axios.post(url, { player })\n        },\n    editPlayer: (id, data) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.put(url, { data })\n        },\n    deletePlayer: (id) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.delete(url)\n    },\n    addNewUser: (userData) => {\n        const url = currentURL + \"/users\"\n        return axios.post(url, {userData})\n    },\n    authenticateUser: (mode, userData) => {\n        const url = currentURL + \"/auth/login\"\n        if (mode === \"local\") {\n            return axios.post(url, userData)\n        }\n    },\n    checkUser: () => {\n        const url = currentURL + \"/auth/login\"\n        return axios.get(url)\n    },\n    }\n","import API from \"../utils/API\"\n\n/* https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage */\n\nexport const loadState = () => {\n    try {\n        const serializedState = sessionStorage.getItem('state');\n        if (serializedState === null ) {\n            return undefined;\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        return undefined\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem(\"state\", serializedState);\n    } catch (err) {\n        console.log(err)\n    }\n}\n// https://stackoverflow.com/questions/36486397/passport-login-and-persisting-session\nexport const checkAuthentication = () => {\n    API.checkUser();\n}","import React, { Component } from \"react\";\nimport SmallLogo from \"../components/images/logo_sm.jpeg\"\nimport { checkAuthentication } from \"./sessionStorage\"\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            navDisplay: \"noShowMenu\",\n            navItemsVisibility: \"hidden\",\n        }\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    handleScroll() {\n        this.setState({scroll: window.scrollY})\n    }\n\n    componentDidMount() {\n        const navbar = document.querySelector(\"nav\");\n        const totalHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n        this.setState({...this.state, top: navbar.offsetTop, height: navbar.offsetHeight, pageHeight: totalHeight});\n        window.addEventListener('scroll', this.handleScroll);\n        // checkAuthentication()\n    }\n\n    changeStatus(status) {\n        this.setState({ navDisplay: status === \"noShowMenu\" ? \"showMenu\" : \"noShowMenu\", navItemsVisibility: status === \"noShowMenu\" ? \"visible\" : \"hidden\" })\n    }\n\n    render() {\n        return (\n            \n            <nav className={this.state.scroll > 10 ? this.state.navDisplay + \" stickyNav\" : this.state.navDisplay + \" nonStickyNav\"}>\n                <div className={this.state.navDisplay + \" darkNavBar\"}>\n                    <h4 className={this.state.navItemsVisibility + \" nav_title\"}>Summit Broomball</h4>\n                    <div className={this.state.navItemsVisibility + \" navbar-nav\"}>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/\">Home</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Player\">Players</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Draft\">Draft</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Stats\">Stats</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Records\">Records</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Login\">Login</a>\n                    </div>\n                </div>\n\n                <div className=\"navbar bg\">\n                        <img onClick={() => this.changeStatus(this.state.navDisplay)} className=\"navbar-toggler toggler_img\" src={SmallLogo} alt=\"logo\" type=\"button\" />    \n                </div>\n            </nav>\n            )\n        }\n}\n\n\nexport default NavBar\n","import React from \"react\";\nimport NavBar from \"../components/NavBar.js\";\n\nconst Home = () => (\n  <div>\n    <NavBar />\n    <main className=\"main_main\">\n      <h1 className=\"h1_main\">Summit Broomball</h1>\n      <div className=\"instructions_div\">\n        <div className=\"page_div\">\n          <div className=\"instruction\">\n            <p className=\"instructions_text\">\n              Create, Manage, and Edit Players:\n            </p>\n          </div>\n          <div className=\"instruction\">\n            <a href=\"/Player\">\n              <button className=\"btn contrast_color menu_button\">\n                Players\n              </button>\n            </a>\n          </div>\n        </div>\n\n        <div className=\"page_div\">\n          <div className=\"instruction\">\n            <p className=\"instructions_text\">Schedule Games and Draft Teams:</p>\n          </div>\n          <div className=\"instruction\">\n            <a href=\"./Draft\">\n              <button className=\"btn contrast_color menu_button\">Draft</button>\n            </a>\n          </div>\n        </div>\n\n        <div className=\"page_div\">\n          <div className=\"instruction\">\n            <p className=\"instructions_text\">Enter Stats for Games:</p>\n          </div>\n          <div className=\"instruction\">\n            <a href=\"./Stats\">\n              <button className=\"btn contrast_color menu_button\">Stats</button>\n            </a>\n          </div>\n        </div>\n\n        <div className=\"page_div\">\n          <div className=\"instruction\">\n            <p className=\"instruction instructions_text\">\n              Visualize Recorded Stats:\n            </p>\n          </div>\n          <div className=\"instruction\">\n            <a href=\"./Records\">\n              <button className=\"btn contrast_color menu_button\">\n                Records\n              </button>\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"welcome_text\">\n          <p className=\"text_center\">\n            Click on the logo at any time to switch page.\n          </p>\n        </div>\n      </div>\n    </main>\n  </div>\n);\nexport default Home;\n","import {\n  FETCH_GAMES,\n  NEW_GAME,\n  GET_GAME,\n  DELETE_GAME,\n  EDIT_GAME_INFO,\n  SHOW_UNAVAILABLE_MEMBERS,\n  HIDE_UNAVAILABLE_MEMBERS,\n  MAKE_MEMBER_UNAVAILABLE,\n  MAKE_TEN_BUCKER_UNAVAILABLE,\n  MAKE_MEMBER_AVAILABLE,\n  SHOW_NON_MEMBERS,\n  HIDE_NON_MEMBERS,\n  ADD_NON_MEMBER,\n  LOCK_GAME_INFO,\n  UNLOCK_GAME_INFO,\n  RESET,\n  TRIGGER_PICK_MODE,\n  TRIGGER_DRAFT_MODE,\n  SET_PICK\n} from \"./types\";\n\nimport API from \"../../utils/API\";\nimport _ from \"underscore\";\n\nexport const fetchGames = () => dispatch => {\n  API.getGames().then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      dispatch({\n        type: FETCH_GAMES,\n        payload: res.data\n      });\n    }\n  });\n};\n\nexport const deleteGame = id => dispatch => {\n  API.deleteGame(id).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      dispatch({\n        type: DELETE_GAME,\n        payload: res.data\n      });\n    }\n  });\n};\n\nexport const addGame = (date, players, player, members) => dispatch => {\n  API.addGame(date, players, player, members).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      let newGame = res.data;\n      // console.log(\"res.data: \", res.data)\n      if (newGame.name) {\n        console.log(\n          \"Error Message: the app encountered an error creating this game in the database\"\n        );\n      } else {\n        console.log(\"Game successfully added to db\");\n        dispatch({\n          type: NEW_GAME,\n          payload: res.data\n        });\n      }\n    }\n  });\n};\n\nexport const getGame = game => dispatch => {\n  API.getGame(game).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      /* We need to know if drafting has happened for the Stats page to display properly */\n      let darkPlayers = res.data.players.filter(\n        player => player.gameInfo.team === \"Dark\"\n      );\n      let whitePlayers = res.data.players.filter(\n        player => player.gameInfo.team === \"White\"\n      );\n      // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n      let gameStats;\n      let noStatsMessage;\n      if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n        gameStats = \"visible\";\n        noStatsMessage = \"hidden\";\n      } else {\n        gameStats = \"hidden\";\n        noStatsMessage = \"visible\";\n      }\n\n      dispatch({\n        type: GET_GAME,\n        payload: {\n          game: res.data,\n          gameStats: gameStats,\n          noStatsMessage: noStatsMessage\n        }\n      });\n    }\n  });\n};\n\nexport const editGameInfo = (game, data) => dispatch => {\n  API.editGame(game, data).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      // we get full game data from the API's response\n      /*\n            // Then we need to check if the locker can be displayed\n            let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\" && player.gameInfo.available === true)\n            let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\" && player.gameInfo.available === true)\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }*/\n\n      dispatch({\n        type: EDIT_GAME_INFO,\n        payload: {\n          game: res.data\n          // gameStats: gameStats,\n          // noStatsMessage: noStatsMessage\n        }\n      });\n    }\n  });\n};\n\nexport const setMemberUnavailable = (game, data) => dispatch => {\n  API.editGame(game, data).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      // we get the game info\n      // console.log(\"res.data: \", res.data)\n      dispatch({\n        type: MAKE_MEMBER_UNAVAILABLE,\n        payload: res.data\n      });\n    }\n  });\n};\nexport const setTenBuckerUnavailable = (\n  gameId,\n  gameData,\n  playerID\n) => dispatch => {\n  API.editGame(gameId, gameData).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      // we get the game info\n      // console.log(\"res.data: \", res.data)\n      dispatch({\n        type: MAKE_TEN_BUCKER_UNAVAILABLE,\n        payload: {\n          gameData: res.data,\n          player: playerID\n        }\n      });\n    }\n  });\n};\nexport const setAvailable = (game, data) => dispatch => {\n  // console.log(\"data.player: \", data.player, \"\\n(is the id of player to add)\")\n  API.editGame(game, data).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      // we get the game info\n      // console.log(\"res.data: \", res.data)\n      dispatch({\n        type: MAKE_MEMBER_AVAILABLE,\n        payload: {\n          player: data.player,\n          game: res.data\n        }\n      });\n    }\n  });\n};\n\nexport const showUnavailable = () => dispatch => {\n  dispatch({\n    type: SHOW_UNAVAILABLE_MEMBERS\n  });\n};\n\nexport const hideUnavailable = () => dispatch => {\n  dispatch({\n    type: HIDE_UNAVAILABLE_MEMBERS\n  });\n};\n\nexport const showNonMembers = (\n  allTenBuckers,\n  notPlayingTenBuckers\n) => dispatch => {\n  dispatch({\n    type: SHOW_NON_MEMBERS,\n    payload: {\n      all: allTenBuckers,\n      new: notPlayingTenBuckers\n    }\n  });\n};\n\nexport const hideNonMembers = () => dispatch => {\n  dispatch({\n    type: HIDE_NON_MEMBERS\n  });\n};\n// Adds a Ten Bucker to the list of players\nexport const addNonMember = (game, newPlayer, existingPlayers) => dispatch => {\n  let newRoster = _.sortBy([...existingPlayers, newPlayer], \"name\");\n  API.editGame(game, { players: newRoster }).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      dispatch({\n        type: ADD_NON_MEMBER,\n        payload: { players: res.data, player: newPlayer }\n      });\n    }\n  });\n};\n\nexport const lockGameInfo = game => dispatch => {\n  let lock = { lock_status: true };\n  API.editGame(game, lock).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      dispatch({\n        type: LOCK_GAME_INFO,\n        payload: res.data.lock_status\n      });\n    }\n  });\n};\n\nexport const unlockGameInfo = game => dispatch => {\n  let lock = { lock_status: false };\n  API.editGame(game, lock).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      dispatch({\n        type: UNLOCK_GAME_INFO,\n        payload: res.data.lock_status\n      });\n    }\n  });\n};\n\nexport const triggerPickMode = team => dispatch => {\n  // console.log(\"team in triggerPickMode from gameActions.js: \", team)\n  switch (team) {\n    case \"Dark\":\n      dispatch({\n        type: TRIGGER_PICK_MODE,\n        payload: {\n          team: team,\n          buttons: {\n            left: \"Exit\",\n            right: \"Set White Picks\"\n          }\n        }\n      });\n      break;\n\n    case \"White\":\n      dispatch({\n        type: TRIGGER_PICK_MODE,\n        payload: {\n          team: team,\n          buttons: {\n            right: \"Exit\",\n            left: \"Set Dark Picks\"\n          }\n          // set: \"player.gameInfo.whitePickNum\"\n        }\n      });\n      break;\n    default:\n      console.log(\"There was an error in the dispatcher\");\n  }\n};\n\nexport const triggerDraftMode = () => dispatch => {\n  dispatch({\n    type: TRIGGER_DRAFT_MODE\n  });\n};\n\nexport const setPick = (team, game, data) => dispatch => {\n  API.editGame(game, data).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      // console.log(\"res.data.players: \", res.data.players)\n      let available = res.data.players.filter(\n        player => player.gameInfo.available === true\n      );\n      switch (team) {\n        case \"Dark\":\n          dispatch({\n            type: SET_PICK,\n            payload: {\n              game: res.data,\n              picked: _.sortBy(\n                available.filter(player => player.gameInfo.darkPickNum !== 0),\n                obj => obj.gameInfo.darkPickNum\n              ),\n              unpicked: _.sortBy(\n                available.filter(player => player.gameInfo.darkPickNum === 0),\n                \"name\"\n              )\n            }\n          });\n          break;\n\n        case \"White\":\n          dispatch({\n            type: SET_PICK,\n            payload: {\n              game: res.data,\n              picked: _.sortBy(\n                available.filter(player => player.gameInfo.whitePickNum !== 0),\n                obj => obj.gameInfo.whitePickNum\n              ),\n              unpicked: _.sortBy(\n                available.filter(player => player.gameInfo.whitePickNum === 0),\n                \"name\"\n              )\n            }\n          });\n          break;\n\n        default:\n          return;\n      }\n    }\n  });\n};\n\nexport const reset = (game, data) => dispatch => {\n  // console.log('Data received in reset gameActions.js: ', data)\n  API.editGame(game, data).then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      // console.log(\"res.data in the reset gameAction.js function: \", res.data)\n      dispatch({\n        type: RESET,\n        payload: res.data\n      });\n    }\n  });\n};\n","export const FETCH_GAMES = \"FETCH_GAMES\";\nexport const NEW_GAME = \"NEW_GAME\";\nexport const GET_GAME = \"GET_GAME\";\nexport const DELETE_GAME = \"DELETE_GAME\";\n\nexport const GET_GAMES_IN_TIMESPAN = \"GET_GAMES_IN_TIMESPAN\";\n\nexport const EDIT_GAME_INFO = \"EDIT_GAME_INFO\";\nexport const LOCK_GAME_INFO = \"LOCK_GAME_INFO\";\nexport const UNLOCK_GAME_INFO = \"UNLOCK_GAME_INFO\";\nexport const RESET = \"RESET\";\n\nexport const SHOW_UNAVAILABLE_MEMBERS = \"SHOW_UNAVAILABLE_MEMBERS\";\nexport const HIDE_UNAVAILABLE_MEMBERS = \"HIDE_UNAVAILABLE_MEMBERS\";\nexport const MAKE_MEMBER_AVAILABLE = \"MAKE_MEMBER_AVAILABLE\";\nexport const ADD_NON_MEMBER = \"ADD_NON_MEMBER\";\nexport const MAKE_MEMBER_UNAVAILABLE = \"MAKE_MEMBER_UNAVAILABLE\";\nexport const MAKE_TEN_BUCKER_UNAVAILABLE = \"MAKE_TEN_BUCKER_UNAVAILABLE\";\nexport const SHOW_NON_MEMBERS = \"SHOW_NON_MEMBERS\";\nexport const HIDE_NON_MEMBERS = \"HIDE_NON_MEMBERS\";\n\nexport const SHOW_FUTURE = \"SHOW_FUTURE\";\nexport const SHOW_PAST = \"SHOW_PAST\";\n\nexport const SHOW_TAB = \"SHOW_TAB\";\nexport const RESET_TABS = \"RESET_TABS\";\n\nexport const EDIT_FORM = \"EDIT_FORM\";\nexport const UPDATE_FIELD = \"UPDATE_FIELD\";\n\nexport const FETCH_PLAYERS = \"FETCH_PLAYERS\";\nexport const DELETE_PLAYER = \"DELETE_PLAYER\";\nexport const ADD_PLAYER = \"ADD_PLAYER\";\nexport const EDIT_PLAYER = \"EDIT_PLAYER\";\n\nexport const CREATE_GAME_ROSTER = \"CREATE_GAME_ROSTER\";\n\nexport const TRIGGER_PICK_MODE = \"TRIGGER_PICK_MODE\";\nexport const TRIGGER_DRAFT_MODE = \"TRIGGER_DRAFT_MODE\";\nexport const SET_PICK = \"SET_PICK\";\n\nexport const SET_DATE_RANGE = \"SET_DATE_RANGE\";\n\nexport const SHOW_GAMES_TO_STATS = \"SHOW_GAMES_TO_STATS\";\nexport const SET_YEARS_VISIBILITIES = \"SET_YEARS_VISIBILITIES\";\nexport const ADD_GAME_TO_SELECTED = \"ADD_GAME_TO_SELECTED\";\nexport const REMOVE_GAME_FROM_SELECTED = \"REMOVE_GAME_FROM_SELECTED\";\nexport const ADD_PLAYER_TO_SELECTED = \"ADD_PLAYER_TO_SELECTED\";\nexport const REMOVE_PLAYER_FROM_SELECTED = \"REMOVE_PLAYER_FROM_SELECTED\";\nexport const TOGGLE_RECORDS_VIEWS = \"TOGGLE_RECORDS_VIEWS\";\n\nexport const ADD_PLAYER_RECORDS = \"ADD_PLAYER_RECORDS\";\nexport const REMOVE_PLAYER_RECORDS = \"REMOVE_PLAYER_RECORDS\";\nexport const REPLACE_PLAYERS_RECORDS = \"REPLACE_PLAYERS_RECORDS\";\n\nexport const SORT_AZ_ASC = \"SORT_AZ_ASC\";\nexport const SORT_AZ_DESC = \"SORT_AZ_DESC\";\nexport const SORT_GAMES_ASC = \"SORT_GAMES_ASC\";\nexport const SORT_GAMES_DESC = \"SORT_GAMES_DESC\";\nexport const SORT_WINS_ASC = \"SORT_WINS_ASC\";\nexport const SORT_WINS_DESC = \"SORT_WINS_DESC\";\nexport const SORT_LOSSES_ASC = \"SORT_LOSSES_ASC\";\nexport const SORT_LOSSES_DESC = \"SORT_LOSSES_DESC\";\nexport const SORT_TIES_ASC = \"SORT_TIES_ASC\";\nexport const SORT_TIES_DESC = \"SORT_TIES_DESC\";\nexport const SORT_GOALS_ASC = \"SORT_GOALS_ASC\";\nexport const SORT_GOALS_DESC = \"SORT_GOALS_DESC\";\nexport const SORT_GPG_ASC = \"SORT_GPG_ASC\";\nexport const SORT_GPG_DESC = \"SORT_GPG_DESC\";\nexport const SORT_ASSISTS_ASC = \"SORT_ASSISTS_ASC\";\nexport const SORT_ASSISTS_DESC = \"SORT_ASSISTS_DESC\";\nexport const SORT_APG_ASC = \"SORT_APG_ASC\";\nexport const SORT_APG_DESC = \"SORT_APG_DESC\";\n\n// export const SET_CHART_DATA = \"SET_CHART_DATA\"\nexport const TOGGLE_SELECT_ALL = \"TOGGLE_SELECT_ALL\";\n// export const TOGGLE_POSITIONS = \"TOGGLE_POSITIONS\"\n\nexport const BATCH_CARD_UPDATE = \"BATCH_CARD_UPDATE\";\nexport const BATCH_CHART_UPDATE = \"BATCH_CHART_UPDATE\";\nexport const BATCH_UNSELECT = \"BATCH_UNSELECT\";\nexport const BATCH_GAMES = \"BATCH_GAMES\";\nexport const UNSELECT_ALL_GAMES = \"UNSELECT_ALL_GAMES\";\n\nexport const TOGGLE_PLAYER_MODAL = \"TOGGLE_PLAYER_MODAL\";\nexport const FILTER_PLAYER_RECORDS_BY_TYPE = \"FILTER_PLAYER_RECORDS_BY_TYPE\";\nexport const FILTER_PLAYER_RECORDS_BY_GAMES = \"FILTER_PLAYER_RECORDS_BY_GAMES\";\n\n// USERS\nexport const UPDATE_USER_FORM = \"UPDATE_USER_FORM\";\nexport const ADD_NEW_USER = \"ADD_NEW_USER\";\nexport const SIGN_MODE = \"SIGN_MODE\";\nexport const AUTHENTICATE = \"AUTHENTICATE\";\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchGames } from '../../js/actions/gameActions'\nimport { getGame } from '../../js/actions/gameActions'\nimport { deleteGame } from '../../js/actions/gameActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass GameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleteGame: true\n        }\n    }\n    componentDidMount() {\n        this.props.fetchGames();\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    /* \n    componentDidUpdate() {\n        console.log(this.state)\n    } \n    */\n    \n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n    }\n\n    deleteGameFunc = (gameId) => {\n        this.props.deleteGame(gameId);\n    }\n\n    render() {\n        return (\n            <div className=\"show_games\">\n            <h2 className=\"h2_main\">{this.props.dateHeader} Games</h2>\n                <div className=\"list-management\">\n                    {/* showing the upcoming games when mode has been  */}\n                    {this.props.dateHeader === \"Upcoming\" ? (\n                        // need case for when there is no game scheduled\n                        this.props.upcomingGames.length > 0 ?\n                        this.props.upcomingGames\n                            .map(game =>\n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color \" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n                    ) : \n                    (\n                        this.props.pastGames.length > 0 ?\n                        this.props.pastGames\n                            .map(game => \n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color\" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n\n                    )}\n\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    games: state.games.games,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    upcoming_visibility: state.display.upcoming_visibility,\n    past_visibility: state.display.past_visibility,\n    lockStatus: state.games.lockStatus,\n    upcomingGames: state.games.upcomingGames,\n    pastGames: state.games.pastGames\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { fetchGames, getGame, deleteGame }) (GameList)\n","import { FETCH_PLAYERS, EDIT_PLAYER, DELETE_PLAYER, ADD_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from './types';\nimport API from \"../../utils/API\"\n\nexport const fetchPlayers = () => dispatch => {\n    API.getPlayers()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_PLAYERS,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deletePlayer = (id) => dispatch => {\n    API.deletePlayer(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addPlayer = (data) => dispatch => {\n    console.log(\"data received: \", data)\n    API.addPlayer(data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n                }\n            else if (res.data.errors) {\n                console.log(res.data.message)\n            }\n            else {\n                let newPlayer = res.data\n                if(newPlayer.name !== \"MongoError\")\n                    {\n                    console.log(\"Player successfully added to db\")\n                    dispatch({\n                        type: ADD_PLAYER,\n                        payload: res.data\n                    })\n\n                    }\n                else {\n                    console.log(\"Error Message: the app encounted an error creating this player in the database\")\n                    }\n                }\n            })\n        }\n\nexport const editPlayer = (id, data) => dispatch => {\n    API.editPlayer(id, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: EDIT_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n        dispatch({\n            type: SHOW_TAB,\n            payload: id\n        })\n    }\n\nexport const resetTabs = (id) => dispatch => {\n    dispatch({\n        type: RESET_TABS\n    })\n}\n\nexport const editForm = (player) => dispatch => {\n    dispatch({\n        type: EDIT_FORM,\n        payload: player\n        })\n    }\n    \nexport const updateField = (player) => dispatch => {\n    dispatch({\n        type: UPDATE_FIELD,\n        payload: player \n        })\n    }\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { addGame } from \"../../js/actions/gameActions\";\nimport { fetchPlayers } from \"../../js/actions/playerActions\";\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { loadState } from \"../sessionStorage\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst moment = require(\"moment\");\n// for each game created, we add a \"fake\" player that allows to adjust the stats in case players are traded\nconst zombiePlayers = [\n  {\n    _id: \"Dark\",\n    name: \"– Dark Team\",\n    playerLevel: \"N/A\",\n    preferredPosition: \"N/A\",\n    membershipStatus: \"variable\",\n    gameInfo: {\n      goals: 0,\n      assists: 0,\n      available: true,\n      team: \"Dark\"\n    }\n  },\n  {\n    _id: \"White\",\n    name: \"– White Team\",\n    playerLevel: \"N/A\",\n    preferredPosition: \"N/A\",\n    membershipStatus: \"variable\",\n    gameInfo: {\n      goals: 0,\n      assists: 0,\n      available: true,\n      team: \"White\"\n    }\n  }\n];\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: \"\",\n      createGame: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchPlayers();\n    const privileges = loadState();\n    console.log(\"Data from SessionStorage: \", privileges);\n    this.setState(...this.state.date, privileges);\n  }\n\n  handleChange(date) {\n    this.setState({\n      dateSelected: date\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let members = this.props.players.filter(\n      player => player.membershipStatus === \"Member\"\n    );\n    let membersWithGameInfo = members.map(member => {\n      return {\n        membershipStatus: member.membershipStatus,\n        _id: member._id,\n        name: member.name,\n        playerLevel: member.playerLevel,\n        preferredPosition: member.preferredPosition,\n        gameInfo: this.props.gameInfo\n      };\n    });\n    let dateOfGame = moment(this.state.dateSelected).format(\"YYYY-MM-DD\");\n    this.props.addGame(dateOfGame, membersWithGameInfo.concat(zombiePlayers));\n  }\n\n  render() {\n    return (\n      <div id=\"schedule_game\">\n        <div>\n          <h2 className=\"h2_main\">Schedule a game</h2>\n        </div>\n\n        <div>\n          {this.state.createGame === true ? (\n            <form className=\"game_form\" onSubmit={this.handleSubmit}>\n              <div id=\"in-line\">\n                <div className=\"calendar_component\">\n                  <DatePicker\n                    placeholderText=\"MM DD YYYY\"\n                    selected={this.state.dateSelected}\n                    onChange={this.handleChange}\n                    value={this.state.value}\n                  />\n                </div>\n\n                <div className=\"submit_button\">\n                  <button\n                    id=\"date_submit\"\n                    className=\"contrast_color content_button\"\n                    name=\"submit\"\n                    type=\"submit\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </form>\n          ) : (\n            <p className=\"no_game\">\n              Login as an admin to schedule games and create team line-ups!\n            </p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  game: state.games.game,\n  players: state.players.players,\n  gameInfo: state.games.gameInfo\n});\n\nexport default connect(\n  mapStateToProps,\n  { addGame, fetchPlayers }\n)(Calendar);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { editGameInfo } from \"../../js/actions/gameActions\";\nimport { addNonMember } from \"../../js/actions/gameActions\";\nimport { setMemberUnavailable } from \"../../js/actions/gameActions\";\nimport { setTenBuckerUnavailable } from \"../../js/actions/gameActions\";\nimport { setAvailable } from \"../../js/actions/gameActions\";\nimport { setPick } from \"../../js/actions/gameActions\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleRight } from \"@fortawesome/free-regular-svg-icons\";\nimport { loadState } from \"../sessionStorage\";\n\nclass Drafter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      draftTeams: true,\n      changeAvailability: true\n    };\n  }\n  componentDidMount() {\n    const privileges = loadState();\n    console.log(\"Data from SessionStorage: \", privileges);\n    this.setState(privileges);\n  }\n\n  setUnavailable(playerID, playerStatus) {\n    let gameId = this.props.draft._id;\n    if (this.props.lockStatus === \"hidden\") {\n      console.log(\"Error message: game is locked\");\n    } else {\n      if (playerStatus === \"Member\") {\n        this.props.setMemberUnavailable(gameId, {\n          player: playerID,\n          gameInfo: { available: false, team: \"N/A\" }\n        });\n      } else {\n        let gameId = this.props.draft._id;\n        let gameData = {\n          ...this.props.draft,\n          players: this.props.draft.players.filter(\n            player => player._id !== playerID\n          )\n        };\n        this.props.setTenBuckerUnavailable(gameId, gameData, playerID);\n      }\n    }\n  }\n\n  makeAvailable(playerID) {\n    let gameId = this.props.draft._id;\n    if (this.props.lockStatus === \"hidden\") {\n      console.log(\"Error message: game is locked\");\n    } else {\n      this.props.setAvailable(gameId, {\n        player: playerID,\n        gameInfo: { available: true, team: \"N/A\" }\n      });\n    }\n  }\n\n  assignTeam(playerID, team) {\n    if (this.props.lockStatus === \"hidden\") {\n      console.log(\"Error message: game is locked\");\n    } else {\n      let gameId = this.props.draft._id;\n      this.props.editGameInfo(gameId, {\n        player: playerID,\n        gameInfo: { team: team }\n      });\n    }\n  }\n\n  addTenBuckerToDraft(player) {\n    if (this.props.lockStatus === \"hidden\") {\n      console.log(\"Error message: game is locked\");\n    } else {\n      let gameId = this.props.draft._id;\n      let tenBuckerToAdd = {\n        membershipStatus: player.membershipStatus,\n        _id: player._id,\n        name: player.name,\n        playerLevel: player.playerLevel,\n        preferredPosition: player.preferredPosition,\n        gameInfo: this.props.gameInfo\n      };\n      this.props.addNonMember(gameId, tenBuckerToAdd, this.props.draft.players);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"universal_drafter\">\n        <div className=\"col_no_bootstrap dark_drafted_players\">\n          {this.props.draftedDark || this.props.draftedWhite !== 0 ? (\n            <h1 className=\"col_header\">\n              <br />\n              Dark\n            </h1>\n          ) : null}\n\n          {this.props.draft.players ? (\n            this.props.draft.players\n              .filter(\n                player =>\n                  player.gameInfo.available === true &&\n                  player.gameInfo.team === \"Dark\" &&\n                  player.membershipStatus !== \"variable\"\n              )\n              .map(player => {\n                return (\n                  <div className=\"player_div\" key={player._id}>\n                    <button className=\"player_button\">{player.name}</button>\n                    {this.state.changeAvailability === true ? (\n                      <FontAwesomeIcon\n                        icon=\"times-circle\"\n                        className={\n                          \"remove remove_player \" + this.props.lockStatus\n                        }\n                        onClick={() =>\n                          this.setUnavailable(\n                            player._id,\n                            player.membershipStatus\n                          )\n                        }\n                      />\n                    ) : null}\n                    {this.state.draftTeams === true ? (\n                      <FontAwesomeIcon\n                        icon={faArrowAltCircleRight}\n                        className={\"arrows \" + this.props.lockStatus}\n                        onClick={() => this.assignTeam(player._id, \"N/A\")}\n                      />\n                    ) : null}\n                  </div>\n                );\n              })\n          ) : (\n            <p>Data has not loaded yet</p>\n          )}\n        </div>\n        <div className=\"col_no_bootstrap undrafted_players\">\n          <h1 className=\"game_date\">\n            {this.props.gameDate}\n            <br />\n            <br />\n          </h1>\n          {this.props.undrafted !== 0 ? (\n            <div className=\"small_screen_team_names_header\">\n              <div className=\"sstnh sstnhd\">\n                <h1 className=\"h1_main\">\n                  {\" \"}\n                  <FontAwesomeIcon\n                    icon=\"arrow-circle-left\"\n                    className=\"arrows \"\n                  />{\" \"}\n                  Dark\n                </h1>\n              </div>\n              <div className=\"sstnh sstnhw\">\n                <h1 className=\"h1_main\">\n                  White{\" \"}\n                  <FontAwesomeIcon\n                    icon={faArrowAltCircleRight}\n                    className=\"arrows \"\n                  />\n                </h1>\n              </div>\n            </div>\n          ) : null}\n          {this.props.draft.players ? (\n            this.props.draft.players\n              .filter(\n                player =>\n                  player.gameInfo.available === true &&\n                  player.gameInfo.team === \"N/A\"\n              )\n              .map(player => {\n                return (\n                  <div\n                    className=\"player_div leaning_center_div\"\n                    key={player._id}\n                  >\n                    {this.state.draftTeams === true ? (\n                      <FontAwesomeIcon\n                        icon=\"arrow-circle-left\"\n                        className={\"arrows \" + this.props.lockStatus}\n                        onClick={() => this.assignTeam(player._id, \"Dark\")}\n                      />\n                    ) : null}\n                    <button className=\"player_button plain_color\">\n                      {player.name}\n                    </button>\n                    {this.state.changeAvailability === true ? (\n                      <FontAwesomeIcon\n                        icon=\"times-circle\"\n                        className={\n                          \"remove remove_player \" + this.props.lockStatus\n                        }\n                        onClick={() =>\n                          this.setUnavailable(\n                            player._id,\n                            player.membershipStatus\n                          )\n                        }\n                      />\n                    ) : null}\n                    {this.state.draftTeams === true ? (\n                      <FontAwesomeIcon\n                        icon={faArrowAltCircleRight}\n                        className={\"arrows \" + this.props.lockStatus}\n                        onClick={() => this.assignTeam(player._id, \"White\")}\n                      />\n                    ) : null}\n                  </div>\n                );\n              })\n          ) : (\n            <p>Data has not loaded yet</p>\n          )}\n\n          {this.props.unavailableMembers ? (\n            this.props.unavailableMembers.map(player => {\n              return (\n                <div className=\"player_div\" key={player._id}>\n                  <button\n                    className=\"player_button unavailable\"\n                    onClick={() =>\n                      this.state.changeAvailability === true\n                        ? this.makeAvailable(player._id)\n                        : null\n                    }\n                  >\n                    {player.name}\n                  </button>\n                </div>\n              );\n            })\n          ) : (\n            <p>Unable to retrieve unavailable Members</p>\n          )}\n\n          {this.props.notPlayingNonMembers ? (\n            this.props.notPlayingNonMembers.map(player => {\n              return (\n                <div className=\"player_div\" key={player._id}>\n                  <button\n                    className=\"player_button negative_color\"\n                    onClick={() =>\n                      this.state.changeAvailability === true\n                        ? this.addTenBuckerToDraft(player)\n                        : null\n                    }\n                  >\n                    {player.name}\n                  </button>\n                </div>\n              );\n            })\n          ) : (\n            <p>Unable to retrieve Ten Buckers</p>\n          )}\n        </div>\n        <div className=\"col_no_bootstrap white_drafted_players\">\n          {this.props.draftedDark || this.props.draftedWhite !== 0 ? (\n            <h1 className=\"col_header\">\n              <br />\n              White\n            </h1>\n          ) : null}\n          {this.props.draft.players ? (\n            this.props.draft.players\n              .filter(\n                player =>\n                  player.gameInfo.available === true &&\n                  player.gameInfo.team === \"White\" &&\n                  player.membershipStatus !== \"variable\"\n              )\n              .map(player => {\n                return (\n                  <div className=\"player_div\" key={player._id}>\n                    {this.state.draftTeams === true ? (\n                      <FontAwesomeIcon\n                        icon=\"arrow-circle-left\"\n                        className={\"arrows \" + this.props.lockStatus}\n                        size=\"2x\"\n                        onClick={() => this.assignTeam(player._id, \"N/A\")}\n                      />\n                    ) : null}\n                    <button className={\"player_button\"}>{player.name}</button>\n                    {this.state.changeAvailability === true ? (\n                      <FontAwesomeIcon\n                        icon=\"times-circle\"\n                        className={\n                          \"remove remove_player \" + this.props.lockStatus\n                        }\n                        onClick={() =>\n                          this.setUnavailable(\n                            player._id,\n                            player.membershipStatus\n                          )\n                        }\n                      />\n                    ) : null}\n                  </div>\n                );\n              })\n          ) : (\n            <p>Data has not loaded yet</p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n  draft: state.games.draft,\n  gameDate: state.games.gameDate,\n  unavailableMembers: state.games.unavailableMembers,\n  notPlayingNonMembers: state.games.notPlayingNonMembers,\n  draftedDark: state.games.draft.players\n    ? state.games.draft.players.filter(\n        player => player.gameInfo.team === \"Dark\"\n      ).length\n    : 0,\n  draftedWhite: state.games.draft.players\n    ? state.games.draft.players.filter(\n        player => player.gameInfo.team === \"White\"\n      ).length\n    : 0,\n  undrafted: state.games.draft.players\n    ? state.games.draft.players.filter(\n        player =>\n          player.gameInfo.team === \"N/A\" && player.gameInfo.available === true\n      ).length\n    : 0,\n  gameInfo: state.games.gameInfo,\n  lockStatus: state.games.lockStatus,\n  draftMode: state.games.draftMode,\n  picked: state.games.picked,\n  unpicked: state.games.unpicked\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    editGameInfo,\n    addNonMember,\n    setMemberUnavailable,\n    setTenBuckerUnavailable,\n    setAvailable,\n    setPick\n  }\n)(Drafter);\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    addPick(team, playerID){\n        let gameId = this.props.draft._id\n        switch (team){\n            case \"Dark\":\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {player: playerID, gameInfo: {darkPickNum: this.props.picked.length + 1}})\n            break;\n\n            case \"White\":\n            this.props.setPick(\"White\", gameId, {player: playerID, gameInfo: {whitePickNum: this.props.picked.length + 1}})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    removePick(team, player) {\n        let gameId = this.props.draft._id\n        // we remove the player from the array of ranked players\n        let indexOfPlayerToRemove = this.props.picked.indexOf(player)\n        this.props.picked.splice(indexOfPlayerToRemove,1)\n        // we will also need to send the unavailable players, otherwise their availability cannot be reset later on\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        switch (team){\n            case \"Dark\":\n            // after removing the player from the array of ranked players, we reset their rank via their index in the array\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.darkPickNum = index + 1 }\n            })\n            // the rank of the player initially selected is reset to 0\n            player.gameInfo.darkPickNum = 0\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            case \"White\":\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.whitePickNum = index + 1 }\n            })\n            player.gameInfo.whitePickNum = 0\n            this.props.setPick(\"White\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    rankOneUp(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit > 0) {\n            switch (this.props.draftMode) {\n                case \"Dark\": \n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n            }\n        }\n    }\n\n    rankOneDown(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit < this.props.picked.length - 1) {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <main className=\"universal_picker\">\n                <div className=\"col_no_bootstrap set_picks_col\">\n                    {this.props.unpicked.length > 0 ? <h1 className=\"h1_main pick_col_header unpicked_list_header\">Set {this.props.draftMode} Picks</h1> : null}\n                    <div className=\"list_of_unpicked_players\">\n                    {/* Mapping the unranked Players */}\n                    {this.props.unpicked ? (this.props.unpicked\n                        .map(player => {\n                            return (\n                                <div className=\"player_picking_div\" key={player._id}>\n                                    <button className=\"content_button player_picking lighter_color\"  onClick={() => this.addPick(this.props.draftMode, player._id)} >{player.name}</button>\n                                    <FontAwesomeIcon icon=\"angle-right\" className=\"pick_arrow arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                    <FontAwesomeIcon icon=\"plus-circle\" className=\"pick_arrow_plus arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                </div>\n                            )\n                        } )\n                    ) : null}\n                    </div>\n                </div>\n                <div className=\"col_no_bootstrap ranks_col\">\n                    {this.props.picked.length > 0 ? <h1 className=\"h1_main pick_col_header picked_list_header\">Ranks</h1> : null}\n                    {/* mapping the ranked available players */}\n                    <div className=\"list_of_picked_players\">\n                    {this.props.picked ? (this.props.picked\n                        .map(player => {\n                            return (    \n                                <div className=\"player_picking_div\" key={player._id}>\n                                    {/* Actual # */}\n                                    <div className=\"pick_number\">\n                                        {this.props.draftMode === \"Dark\" ? player.gameInfo.darkPickNum : player.gameInfo.whitePickNum}\n                                    </div>\n                                    <button className=\"content_button player_button darker_color\">{player.name}</button>\n                                    <FontAwesomeIcon icon=\"minus-circle\" className=\"remove remove_pick\" onClick={() => this.removePick(this.props.draftMode, player)} />\n                                    {/* <div className=\"sorter\">  */}\n                                        <FontAwesomeIcon icon=\"chevron-up\" className=\"up_arrow\" onClick={() => this.rankOneUp(player)}/>\n                                        <FontAwesomeIcon icon=\"chevron-down\" className=\"down_arrow\" onClick={() => this.rankOneDown(player)}/>\n                                    {/* </div> */}\n                                </div>\n                            )\n                        } )\n                    ) : ( <p>Bogus data</p> )\n                    }\n                    </div>\n                </div> \n            </main>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport _ from \"underscore\"\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { reset } from '../../js/actions/gameActions'\nimport { triggerPickMode } from '../../js/actions/gameActions'\nimport { triggerDraftMode } from '../../js/actions/gameActions'\n\nclass GameOptionsBottom extends Component {\n\n    resetTeams(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                    let resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for Dark team\n                            gameInfo: {...member.gameInfo, darkPickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                break;\n\n                case \"White\":\n                    resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for White team\n                            gameInfo: {...member.gameInfo, whitePickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                return;\n\n                case \"Draft\":\n                // we filter the members (but should be done from the player db, not the games.draft)\n                    resetPlayers = this.props.players\n                    .filter((player) => player.membershipStatus === \"Member\")\n                    .map((member) => {return {\n                        membershipStatus: member.membershipStatus,\n                        _id: member._id,\n                        name: member.name,\n                        playerLevel: member.playerLevel,\n                        preferredPosition: member.preferredPosition,\n                        // Resetting teams only\n                        gameInfo: {...member.gameInfo, team: \"N/A\"}\n                        }})\n                this.props.reset(game, {players: _.sortBy(resetPlayers, \"name\")})\n                break;\n                \n                default:\n                return;\n                }\n            }\n        }\n\n    autodraft(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (this.props.draftMode === \"Draft\") {\n                // Autodraft feature: separates all players by level, randomly assigns them to dark or white team\n                let mixedRosters = [];\n                let arrayOfAvailablePlayers = this.props.players.filter(player => player.gameInfo.available === true)\n                // recreating our array by assigning each player to its level\n                let output = arrayOfAvailablePlayers.reduce((levels,player) => {\n                    levels[player.playerLevel] = levels[player.playerLevel] || [];\n                    levels[player.playerLevel].push({\n                        player\n                    });\n                    return levels;\n                },[])\n                \n                let numOutput = Object.keys(output).length;\n                \n                for (let i = 0; i < numOutput; i++) {\n                    // running the randomize function for each level\n                    let playersByLevel = Object.entries(output)[i]\n                    // the \"level\" is the first argument in the array, the next one is the players: that's how we access them\n                    let playersArray = playersByLevel[1]\n                    // we randomize via a custom recursive function (could also try underscore, but on such a small array, it\n                    // I doubt it makes any difference)\n                    this.randomize(playersArray, mixedRosters)\n                    }\n                    \n                for (let i = 0; i < mixedRosters.length; i++) {\n                    // assigning different team to every other player\n                    if (i%2 === 0) {mixedRosters[i].player.gameInfo.team = \"Dark\";}\n                    else {mixedRosters[i].player.gameInfo.team = \"White\"}\n                    }\n                    \n                    let arrayOfUnavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    // For a reason I haven't been able to figure out, each player information is nested \n                    // under \"{player: }\" which we then need to remove\n                    let remappedAvailablePlayers = mixedRosters.map((player) => player.player)\n                    // Once this is done, we add the unavailable players since they need to be sent to the API as well (otherwise, they just can't be added back in the draft)\n                    let allPlayers = remappedAvailablePlayers.concat(arrayOfUnavailablePlayers)\n                    allPlayers = _.sortBy(allPlayers, \"name\") \n                    \n                this.props.editGameInfo(game, {players: allPlayers})\n                // the only purpose of calling this function is to verify that teams are balanced (level wise)\n                this.filterTeams(allPlayers, \"level\")\n                }\n                else {\n                    console.log(\"Error message: go to draft mode to draft teams\")\n                    }\n            }\n        }\n\n    // helper function to randomize an array (pushes/deletes to another array recursively, until it's empty) \n    randomize = (inputArray, outputArray) => {\n        if(inputArray.length > 0) {\n            let randomPlayer = inputArray[Math.floor(Math.random()*inputArray.length)];\n            let index = inputArray.indexOf(randomPlayer);\n            outputArray.push(randomPlayer);\n            inputArray.splice(index,1)\n            this.randomize(inputArray, outputArray);\n            }\n        }\n        \n    // function to filter array of player objects into teams used for quick control. \n    filterTeams = (arrayOfPlayerObjects, mode) => {\n        if (mode === \"level\") {\n            // filter player objects according to name of the team #1\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, \"playerLevel\")\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, \"playerLevel\")\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"playerLevel\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}`);\n                })\n            }\n        else {\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, (obj) => obj.gameInfo.darkPickNum)\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (picked for Dark: #${e.gameInfo.darkPickNum})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, (obj) => obj.gameInfo.whitePickNum)\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (picked for White: #${e.gameInfo.whitePickNum})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"name\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}\\nPicked for Dark: #${e.gameInfo.darkPickNum})\\nPicked for White: #${e.gameInfo.whitePickNum})`)//.\\nPicked in position: ${e.gameInfo.captain2Pick})`);\n                })\n            }\n        }\n    \n    toggleMode(currentMode, team){\n        if (currentMode === team) {\n            this.props.triggerDraftMode()\n        }\n        else {\n            this.props.triggerPickMode(team)\n        }\n    }\n    // helper function to test if a pick is eligible to be pushed to the ranked array. If not, moves on to the next pick. \n    testPick = (inputObject, rankedPlayers) => {\n        let index = 0;\n        let picks = inputObject.picks;\n        if (rankedPlayers.indexOf(picks[index]) !== -1) {\n            picks.splice(index,1);\n            this.testPick(inputObject, rankedPlayers);\n            }\n        else {\n            let nameOfTeam = inputObject.team;\n            // assigns the name of the team to the drafted player (to filter later on)\n            picks[index].gameInfo.team = nameOfTeam;\n            // takes the pick, pushes it to the output array\n            rankedPlayers.push(picks[index]);\n            // removes the pick from the array of picks\n            picks.splice(index,1);\n            }\n        }\n\n    // function to create a \"serpentine\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 has the next 2 picks, etc. until everyone is drafted\n    serpentineDraft = (game) => {\n        // Serpentine draft sends an object to \"testPick\" to figure if a player has already been drafted. \n        // If not, the player in question gets stored in the array of drafter players (and so on, recursively). \n        // For this to happen, we need to format our objects\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        // the function will error if we try to run it more times than players have been picked. \n        // Therefore, we need a pattern to determine how many times it should be ran\n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n            // there are 4 turns to complete a round\n            let turns = 4;\n            let modulo = num % turns;\n            let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                    // and complete the rosters one player at a time\n                    switch (modulo !== 0) {\n                        case modulo === 1:\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        case modulo === 2:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        break;\n                        case modulo === 3:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        default:\n                        return;\n                        }\n                    }\n                this.filterTeams(rankedPlayers, \"pick\")\n                // we re-add the unavailable players, otherwise they cannot be reset later on\n                let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    \n                let allPlayers = rankedPlayers.concat(unavailablePlayers)\n                this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n    \n    // function to create an \"alternate\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 drafts, etc. until everyone is drafted\n    alternateDraft = (game) => {\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        \n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n        // there are 2 turns to complete a round\n        let turns = 2;\n        let modulo = num % turns;\n        let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                // and complete the rosters with one more pick\n                this.testPick(darkPicks, rankedPlayers);\n                }\n            this.filterTeams(rankedPlayers, \"pick\")\n            // we re-add the unavailable players, otherwise they cannot be reset later on\n            let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                        \n            let allPlayers = rankedPlayers.concat(unavailablePlayers)\n            this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom + \" game_options_bottom\"}>\n                <div className={this.props.visibility.bottom + \" reduced_container\"}>\n                        <div className=\"game_options_container\">\n                            <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"Dark\")}>{this.props.pickButtons.left}</button> \n                            <button className=\"content_button contrast_color pick_option\" onClick={() => this.resetTeams(this.props.gameDate)}>Reset</button> \n                            <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"White\")}>{this.props.pickButtons.right}</button> \n                        </div>\n                        <br />\n                        <div className={this.props.visibility.top + \" game_options_container\"}>\n                            <button className=\"content_button darker_color draft_option\" onClick={()=> this.autodraft(this.props.gameDate)} >Autodraft</button>\n                            <button className=\"content_button darker_color draft_option\" onClick={()=> this.alternateDraft(this.props.gameDate)}>Alternate Draft</button> \n                            <button className=\"content_button darker_color draft_option\" onClick={() => this.serpentineDraft(this.props.gameDate)}>Serpentine Draft</button> \n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    players: state.games.draft.players,\n    lockStatus: state.games.lockStatus,\n    gameInfo: state.games.gameInfo,\n    draftMode: state.games.draftMode,\n    pickButtons: state.games.pickButtons\n})\n\nexport default connect(mapStateToProps, { editGameInfo, reset, triggerPickMode, triggerDraftMode }) (GameOptionsBottom)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { showUnavailable } from '../../js/actions/gameActions'\nimport { hideUnavailable } from '../../js/actions/gameActions'\nimport { showNonMembers } from '../../js/actions/gameActions'\nimport { hideNonMembers } from '../../js/actions/gameActions'\n\nclass GameOptionsTop extends Component {\n    \n    unavailable(action){\n        if (action === \"Show\") {\n            /*let members = this.props.players.filter(player => player.membershipStatus === \"Member\")\n            let playingMembers = this.props.gameParticipants.map(player => player._id)\n            let notPlayingMembers = members.filter(player => playingMembers.indexOf(player._id) === -1)\n            console.log(\"notPlayingMembers: \", notPlayingMembers)\n            // this.props.showUnavailable(notPlayingMembers)*/\n            this.props.showUnavailable()\n        }\n        else {\n            this.props.hideUnavailable()\n        }\n    }\n    tenBuckers(action){\n        /* This filters all players in the DB according to their membershipStatus\n        It then gets the id of all ten_buckers already playing (that we set when we fetch the game data in GameList.js\n        via the reducer). We check the former against the latter to see who's left to potentially add */\n        if (action === \"Show\") {\n            let tenBuckers = this.props.players.filter((player) => player.membershipStatus !== \"Member\")\n            let arrayOfIds = this.props.playingNonMembers.map(player => player._id)    \n            let newTenBuckers = tenBuckers.filter((player) => arrayOfIds.indexOf(player._id) === -1)\n            this.props.showNonMembers(tenBuckers, newTenBuckers)\n        }\n        else {\n            this.props.hideNonMembers()\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"container button_container\">\n                <button className=\"content_button darker_color game_options\" onClick={()=> this.unavailable(this.props.showingUnavailableMembers)}>{this.props.showingUnavailableMembers} Unavailable</button> \n                <button className=\"content_button darker_color game_options\" onClick={()=> this.tenBuckers(this.props.showingNonPlayingTenBuckers)}>{this.props.showingNonPlayingTenBuckers} Non-Members</button> \n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    players: state.players.players,\n    gameParticipants: state.games.draft.players,\n    playingNonMembers: state.games.playingNonMembers,\n    showingNonPlayingTenBuckers: state.games.showingNonPlayingTenBuckers,\n    showingUnavailableMembers: state.games.showingUnavailableMembers\n})\n\nexport default connect(mapStateToProps, { showUnavailable, hideUnavailable, showNonMembers, hideNonMembers }) (GameOptionsTop)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { lockGameInfo } from \"../js/actions/gameActions\"\nimport { unlockGameInfo } from \"../js/actions/gameActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Locker extends Component {\n\n    lockGame(game) {\n        this.props.lockGameInfo(game)\n    }\n\n    unlockGame(game){\n        this.props.unlockGameInfo(game)\n    }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom === \"visible\" ? \"visible\" : \"hidden\"}>\n                <div className=\"text-center lock_icons_container\">\n                    <div className=\"left_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"locked content_button lock\" : \"unlocked content_button lock\"} onClick={() => this.unlockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"unlock-alt\" /></button> \n                    </div>\n                    <div className=\"right_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"unlocked content_button lock\" : \"locked content_button lock\"} onClick={() => this.lockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"lock\"/></button> \n                    </div>\n                </div>\n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    // noStatsMessage: state.stats.visibility,\n})\n\nexport default connect(mapStateToProps, { lockGameInfo, unlockGameInfo }) (Locker)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { toggleGames } from \"../js/actions/displayActions\";\n\nimport NavBar from \"../components/NavBar.js\";\nimport GameList from \"../components/DraftPageComp/GameList.js\";\nimport Calendar from \"../components/DraftPageComp/Calendar.js\";\nimport Drafter from \"../components/DraftPageComp/Drafter.js\";\nimport Picker from \"../components/DraftPageComp/Picker.js\";\nimport GameOptionsBottom from \"../components/DraftPageComp/GameOptionsBottom.js\";\nimport GameOptionsTop from \"../components/DraftPageComp/GameOptionsTop.js\";\nimport Locker from \"../components/Locker.js\";\nimport { loadState } from \"../components/sessionStorage\";\n\nconst screenSize = window.innerWidth;\nclass Draft extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      changeLock: true\n    };\n  }\n\n  componentDidMount() {\n    const privileges = loadState();\n    this.setState(privileges);\n    console.log(screenSize);\n  }\n\n  toggleGamesFunc(currentlyShowing) {\n    this.props.toggleGames(currentlyShowing);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <main className=\"main_main\">\n          <h1 className=\"h1_main\">Draft Teams</h1>\n          <div className=\"organizer\">\n            <div>\n              <Calendar />\n            </div>\n            <div>\n              <GameList />\n            </div>\n          </div>\n          <div className=\"game_toggle_container\">\n            <button\n              className=\"contrast_color change_list_display\"\n              onClick={() => this.toggleGamesFunc(this.props.showing)}\n            >\n              {\" \"}\n              {this.props.buttonMsg} Games\n            </button>\n          </div>\n        </main>\n        <div className={\"main_main \" + this.props.visibility.top}>\n          <GameOptionsTop />\n        </div>\n        <main className={\"main_main \" + this.props.visibility.main}>\n          {this.props.draftMode === \"Draft\" ? <Drafter /> : <Picker />}\n        </main>\n        <footer className={\"main_main \" + this.props.visibility.bottom}>\n          <GameOptionsBottom />\n          {this.state.changeLock === true ? <Locker /> : null}\n        </footer>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showing: state.display.showing,\n  dateHeader: state.display.dateHeader,\n  today: state.display.today,\n  buttonMsg: state.display.buttonMsg,\n  visibility: state.games.visibility,\n  draftMode: state.games.draftMode\n});\n\n// export default Draft;\nexport default connect(\n  mapStateToProps,\n  { toggleGames }\n)(Draft);\n","import { SHOW_FUTURE, SHOW_PAST } from './types';\n\nexport const toggleGames = (currentState) => dispatch => {\n    if (currentState === \"past\") {\n        dispatch({\n            type: SHOW_FUTURE\n        })\n    }\n    else {\n        dispatch({\n            type: SHOW_PAST\n        })\n    }\n    }","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addPlayer } from '../../js/actions/playerActions'\nimport { editPlayer } from '../../js/actions/playerActions'\nimport { resetTabs } from '../../js/actions/playerActions'\nimport { updateField } from '../../js/actions/playerActions'\n\nimport { loadState } from \"../sessionStorage\"\n\nclass Form extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            createPlayer: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    componentDidMount() {\n        const privileges = loadState()\n        this.setState(privileges)\n    }\n    handleCancel(event) {\n        event.preventDefault()\n        this.props.resetTabs()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedPlayer = {...this.props.player, [name]: value}\n        this.props.updateField(editedPlayer)\n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        /* If a player is a goalie, their level needs to be set as \"Goalie\" */\n        let assignedLevel;\n        if ( this.props.player.preferredPosition === \"Goalie\") {assignedLevel = \"Goalie\"}\n        else {assignedLevel = this.props.player.playerLevel}\n        let newPlayer = {\n            name: this.props.player.name,\n            fullName: this.props.player.fullName,\n            playerLevel: assignedLevel,\n            preferredPosition: this.props.player.preferredPosition,\n            membershipStatus: this.props.player.membershipStatus,\n            email: this.props.player.email\n            }\n        \n        if (this.props.formMode === \"Add\") {\n            this.props.addPlayer(newPlayer)\n            }\n        else {\n            let id = this.props.player._id\n            this.props.editPlayer(id, newPlayer)\n        }\n\n        // go back to tab#1\n        this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n            {this.state.createPlayer === true ? \n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"name\"\n                                value= {this.props.player.name}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Full Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"fullName\"\n                                value= {this.props.player.fullName}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Preferred Position: </label>\n                            <select name=\"preferredPosition\" onChange={(event) => this.handleChange(event)} value={this.props.player.preferredPosition}>\n                                <option defaultValue=\"Forward\">Forward</option>\n                                <option value=\"Defense\">Defense</option>\n                                <option value=\"Goalie\">Goalie</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Membership Status:</label>\n                            <select name=\"membershipStatus\" onChange={(event) => this.handleChange(event)} value= {this.props.player.membershipStatus}>\n                                <option defaultValue=\"Member\">Member</option>\n                                <option value=\"Ten Bucker\">Ten Bucker</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\"> \n                            <label>Level: </label>\n                            <select name=\"playerLevel\" onChange={(event) => this.handleChange(event)} value= {this.props.player.playerLevel}>\n                                <option value=\"A+\">A+</option>\n                                <option value=\"A\">A</option>\n                                <option value=\"A-\">A-</option>\n                                <option defaultValue=\"B+\">B+</option>\n                                <option value=\"B\">B</option>\n                                <option value=\"B-\">B-</option>\n                                <option value=\"C+\">C+</option>\n                                <option value=\"C\">C</option>\n                                <option value=\"C-\">C-</option>\n                                <option value=\"D+\">D+</option>\n                                <option value=\"D\">D</option>\n                                <option value=\"D-\">D-</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Email: </label>\n                            <input \n                                type=\"text\" \n                                name=\"email\"\n                                value= {this.props.player.email}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        <div className=\"button_container\">\n                            <button type=\"submit\" value=\"Submit\" className=\"contrast_color\"> Submit </button>\n                            <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                        </div>\n                    </form>\n                </div> : \n            <div className=\"unfortunately\">\n                <p className=\"no_game\">Login as an admin to add players!</p>\n            </div> }\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tab1,\n    tab2: state.players.tab2,\n    panel1: state.players.panel1,\n    panel2: state.players.panel2,\n    player: state.players.player,\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { addPlayer, editPlayer, resetTabs, updateField }) (Form)","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\nimport { loadState } from '../sessionStorage'\n\nclass MemberList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editMember: true,\n            deleteMember: false,\n        }\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        console.log(\"Need a warning that deleting is permanent...\")\n        console.log(\"Active/Inactive?\")\n        // this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"player_table\">\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus === \"Member\").map(player => {\n                            return (\n                                <tr key={player._id} className=\"player_table_row\"> \n                                    <td className=\"player_table_data player_table_name\">{player.name}</td>\n                                    <td className=\"player_table_data player_manage_buttons\"> \n                                        {this.state.editMember === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button>}\n                                        {this.state.deleteMember === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (MemberList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\n\nimport { loadState } from '../sessionStorage'\n\nclass TenBuckerList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editTenBucker: true,\n            deleteTenBucker: false\n        }\n    }\n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"player_table\">\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus !== \"Member\").map(player => {\n                            return (\n                                <tr key={player._id} className=\"player_table_row\"> \n                                    <td className=\"player_table_data player_table_name\">{player.name}</td>\n                                    <td className=\"player_table_data player_manage_buttons\"> \n                                        {this.state.editTenBucker === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button> }\n                                        {this.state.deleteTenBucker === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>)\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (TenBuckerList)\n","\nimport React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from '../js/actions/playerActions';\n\nimport NavBar from \"../components/NavBar.js\";\nimport Form from \"../components/PlayerPageComp/Form.js\";\nimport MemberList from \"../components/PlayerPageComp/MemberList.js\"\nimport TenBuckerList from \"../components/PlayerPageComp/TenBuckerList.js\"\n\nclass Player extends Component {\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide_tab\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n        \nrender() {\n    return (\n    <div>\n        <NavBar />\n        <main className=\"main_alternate\">\n            <h1 className=\"h1_alternate\">Players</h1>\n            <div className=\"player_table_head\">\n                    <div className=\"tab_centering\">\n                        <span id=\"1\" className={\"tab \" + this.props.tab1} onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Members </span>\n                        <span id=\"2\" className={\"tab \" + this.props.tab2} onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Buckers </span>\n                        <span id=\"3\" className={\"tab \" + this.props.tab3} onClick={() => this.toggleStatus(\"3\", this.props.tab3) }> {this.props.formMode} </span>\n                    </div>\n            </div>\n                <section className= \"main_for_tab\">\n                    <span className={this.props.panel1 + \" full_tab_size\"}> <MemberList /> </span> \n                    <span className={this.props.panel2 + \" full_tab_size\"}> <TenBuckerList /> </span> \n                    <span className={this.props.panel3 + \" full_tab_size\"}> <Form /> </span> \n                </section>\n        </main>\n    </div>\n    \n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tabs[0],\n    tab2: state.players.tabs[1],\n    tab3: state.players.tabs[2],\n    panel1: state.players.panels[0],\n    panel2: state.players.panels[1],\n    panel3: state.players.panels[2],\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { toggleTabStatus }) (Player)\n","export const monthify = string => {\n  switch (string) {\n    case \"01\":\n      return (string = \"January\");\n\n    case \"02\":\n      return (string = \"February\");\n\n    case \"03\":\n      return (string = \"March\");\n\n    case \"04\":\n      return (string = \"April\");\n\n    case \"05\":\n      return (string = \"May\");\n\n    case \"06\":\n      return (string = \"June\");\n\n    case \"07\":\n      return (string = \"July\");\n\n    case \"08\":\n      return (string = \"August\");\n\n    case \"09\":\n      return (string = \"September\");\n\n    case \"10\":\n      return (string = \"October\");\n\n    case \"11\":\n      return (string = \"November\");\n\n    case \"12\":\n      return (string = \"December\");\n\n    default:\n      return;\n  }\n};\n// Extract the \"year\" and \"month\" substrings in the YYYY-MM-DD formatted dates\nconst yearString = game => game.substring(0, 4);\nconst monthString = game => game.substring(5, 7);\n\nexport const beautifyGames = array => {\n  let object = array.reduce((difYears, game) => {\n    difYears[yearString(game._id)] = difYears[yearString(game._id)] || [];\n    difYears[yearString(game._id)].push(game);\n    return difYears;\n  }, {});\n  let arrayOfObjects = [];\n  for (let i = 0; i < Object.values(object).length; i++) {\n    // for each array of games of the object created by the first reduce\n    let remapped = Object.values(object)[i].reduce((difMonths, game) => {\n      // each game is pushed to a different array under the \"month\"\n      difMonths[monthify(monthString(game._id))] =\n        difMonths[monthify(monthString(game._id))] || [];\n      difMonths[monthify(monthString(game._id))].push(game);\n      return difMonths;\n    }, {});\n    // This separates the months into distinct arrays. We push them in a separate array,\n    // otherwise another year's games might overwrite the data\n    arrayOfObjects.push({ [Object.keys(object)[i]]: remapped });\n  }\n  return arrayOfObjects;\n};\n","import {\n  SHOW_GAMES_TO_STATS,\n  GET_GAMES_IN_TIMESPAN,\n  SET_YEARS_VISIBILITIES,\n  ADD_GAME_TO_SELECTED,\n  REMOVE_GAME_FROM_SELECTED,\n  ADD_PLAYER_TO_SELECTED,\n  REMOVE_PLAYER_FROM_SELECTED,\n  TOGGLE_RECORDS_VIEWS,\n  ADD_PLAYER_RECORDS,\n  REMOVE_PLAYER_RECORDS,\n  REPLACE_PLAYERS_RECORDS,\n  SORT_AZ_ASC,\n  SORT_AZ_DESC,\n  SORT_GAMES_ASC,\n  SORT_GAMES_DESC,\n  SORT_WINS_ASC,\n  SORT_WINS_DESC,\n  SORT_LOSSES_ASC,\n  SORT_LOSSES_DESC,\n  SORT_TIES_ASC,\n  SORT_TIES_DESC,\n  SORT_GOALS_ASC,\n  SORT_GOALS_DESC,\n  SORT_GPG_ASC,\n  SORT_GPG_DESC,\n  SORT_ASSISTS_ASC,\n  SORT_ASSISTS_DESC,\n  SORT_APG_ASC,\n  SORT_APG_DESC,\n  SET_DATE_RANGE,\n  // SET_CHART_DATA,\n  TOGGLE_SELECT_ALL,\n  BATCH_CARD_UPDATE,\n  BATCH_CHART_UPDATE,\n  BATCH_UNSELECT,\n  // TOGGLE_POSITIONS,\n  TOGGLE_PLAYER_MODAL,\n  BATCH_GAMES,\n  UNSELECT_ALL_GAMES,\n  FILTER_PLAYER_RECORDS_BY_TYPE,\n  FILTER_PLAYER_RECORDS_BY_GAMES\n} from \"./types\";\n\nimport API from \"../../utils/API\";\nimport { beautifyGames } from \"../../components/GameDisplayUtils.js\";\n\nconst moment = require(\"moment\");\n// need a separate function to fetch games within a time span\nexport const getGamesForRecords = () => dispatch => {\n  API.getGames().then(res => {\n    if (res.status !== 200) {\n      throw new Error(res.statusText);\n    } else {\n      let arrayOfTenBuckerIDs = [];\n      let allTenBuckers = res.data.map(game =>\n        game.players.filter(player => player.membershipStatus !== \"Member\")\n      );\n      allTenBuckers.forEach(array =>\n        array.map(player => arrayOfTenBuckerIDs.push(player._id))\n      );\n      let pastGames = res.data.filter(\n        game => game._id <= moment().format(\"YYYY-MM-DD\")\n      );\n      let reducedGames = beautifyGames(pastGames);\n      // setting the visibility of each year's games. We only want the current year's games to be visible\n      // let years = Object.keys(Object.values(reducedGames)).map(year => ([year] = \"visible\"))\n      let years = [];\n      for (let i = 0; i < reducedGames.length; i++) {\n        if (i == 0) {\n          years.push(\"visible\");\n        } else {\n          years.push(\"hidden\");\n        }\n      }\n\n      dispatch({\n        type: GET_GAMES_IN_TIMESPAN,\n        payload: {\n          games: res.data,\n          reducedGames: reducedGames,\n          allTenBuckers: arrayOfTenBuckerIDs,\n          visibility: years\n        }\n      });\n    }\n  });\n};\n\nexport const toggleVisibility = currentState => dispatch => {\n  if (currentState === \"dead\") {\n    dispatch({\n      type: SHOW_GAMES_TO_STATS\n    });\n  }\n};\n\nexport const setVisibility = array => dispatch => {\n  dispatch({\n    type: SET_YEARS_VISIBILITIES,\n    payload: array\n  });\n};\n\nexport const selectGame = id => dispatch => {\n  dispatch({\n    type: ADD_GAME_TO_SELECTED,\n    payload: id\n  });\n};\n\nexport const unselectGame = game => dispatch => {\n  dispatch({\n    type: REMOVE_GAME_FROM_SELECTED,\n    payload: game\n  });\n};\n\nexport const selectPlayer = player => dispatch => {\n  dispatch({\n    type: ADD_PLAYER_TO_SELECTED,\n    payload: { selected: player }\n  });\n};\n\nexport const unselectPlayer = player => dispatch => {\n  dispatch({\n    type: REMOVE_PLAYER_FROM_SELECTED,\n    payload: { selected: player }\n  });\n};\n// There has to be a better way to do this (based on the index, maybe?)\nexport const toggleViews = (currentStatus, element) => dispatch => {\n  if (currentStatus === \"visible\") {\n    dispatch({\n      type: TOGGLE_RECORDS_VIEWS,\n      payload: {\n        dates: \"dead\",\n        games: \"dead\",\n        players: \"dead\",\n        sort: \"dead\",\n        chart: \"dead\"\n      }\n    });\n  } else {\n    switch (element) {\n      case \"dates\":\n        dispatch({\n          type: TOGGLE_RECORDS_VIEWS,\n          payload: {\n            dates: \"visible\",\n            games: \"dead\",\n            players: \"dead\",\n            sort: \"dead\",\n            chart: \"dead\"\n          }\n        });\n\n        break;\n\n      case \"games\":\n        dispatch({\n          type: TOGGLE_RECORDS_VIEWS,\n          payload: {\n            dates: \"dead\",\n            games: \"visible\",\n            players: \"dead\",\n            sort: \"dead\",\n            chart: \"dead\"\n          }\n        });\n        break;\n\n      case \"players\":\n        dispatch({\n          type: TOGGLE_RECORDS_VIEWS,\n          payload: {\n            dates: \"dead\",\n            games: \"dead\",\n            players: \"visible\",\n            sort: \"dead\",\n            chart: \"dead\"\n          }\n        });\n        break;\n\n      case \"sort\":\n        dispatch({\n          type: TOGGLE_RECORDS_VIEWS,\n          payload: {\n            dates: \"dead\",\n            games: \"dead\",\n            players: \"dead\",\n            sort: \"visible\",\n            chart: \"dead\"\n          }\n        });\n        break;\n\n      case \"chart\":\n        dispatch({\n          type: TOGGLE_RECORDS_VIEWS,\n          payload: {\n            dates: \"dead\",\n            games: \"dead\",\n            players: \"dead\",\n            sort: \"dead\",\n            chart: \"visible\"\n          }\n        });\n        break;\n\n      default:\n        return;\n    }\n  }\n};\n\nexport const addPlayerStatObject = player => dispatch => {\n  dispatch({\n    type: ADD_PLAYER_RECORDS,\n    payload: player\n  });\n};\n\nexport const removePlayerStatObject = player => dispatch => {\n  dispatch({\n    type: REMOVE_PLAYER_RECORDS,\n    payload: player\n  });\n};\n\nexport const selectDateRange = (start, end) => dispatch => {\n  if (start === \"Invalid date\") {\n    start = \"2000-01-01\";\n  }\n  if (end === \"Invalid date\") {\n    end = moment().format(\"YYYY-MM-DD\");\n  }\n  dispatch({\n    type: SET_DATE_RANGE,\n    payload: {\n      from: start,\n      to: end\n    }\n  });\n};\n\nexport const toggleSortOptions = (tab, currentStatus, ascArrow) => dispatch => {\n  switch (tab) {\n    case \"az\":\n      if (currentStatus === \"unselected_tab\") {\n        dispatch({\n          type: SORT_AZ_DESC,\n          payload: {\n            alphaDesc: \"active\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"selected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n        dispatch({\n          type: SORT_AZ_DESC,\n          payload: {\n            alphaDesc: \"active\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"selected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else {\n        dispatch({\n          type: SORT_AZ_ASC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"active\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"selected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      }\n      break;\n\n    case \"games\":\n      if (currentStatus === \"unselected_tab\") {\n        dispatch({\n          type: SORT_GAMES_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"active\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"selected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n        dispatch({\n          type: SORT_GAMES_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"active\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"selected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else {\n        dispatch({\n          type: SORT_GAMES_ASC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"active\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"selected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      }\n      break;\n\n    case \"wins\":\n      if (currentStatus === \"unselected_tab\") {\n        dispatch({\n          type: SORT_WINS_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"active\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"selected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n        dispatch({\n          type: SORT_WINS_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"active\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"selected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else {\n        dispatch({\n          type: SORT_WINS_ASC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"active\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"selected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      }\n      break;\n\n    case \"losses\":\n      if (currentStatus === \"unselected_tab\") {\n        dispatch({\n          type: SORT_LOSSES_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"active\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"selected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n        dispatch({\n          type: SORT_LOSSES_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"active\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"selected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else {\n        dispatch({\n          type: SORT_LOSSES_ASC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"active\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"selected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      }\n      break;\n\n    case \"ties\":\n      if (currentStatus === \"unselected_tab\") {\n        dispatch({\n          type: SORT_TIES_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"active\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"selected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n        dispatch({\n          type: SORT_TIES_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"active\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"selected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else {\n        dispatch({\n          type: SORT_TIES_ASC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"active\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"selected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      }\n      break;\n\n    case \"goals\":\n      if (currentStatus === \"unselected_tab\") {\n        dispatch({\n          type: SORT_GOALS_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"active\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"selected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n        dispatch({\n          type: SORT_GOALS_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"active\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"selected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else {\n        dispatch({\n          type: SORT_GOALS_ASC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"active\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"selected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      }\n      break;\n\n    case \"gpg\":\n      if (currentStatus === \"unselected_tab\") {\n        dispatch({\n          type: SORT_GPG_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"active\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"selected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n        dispatch({\n          type: SORT_GPG_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"active\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"selected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else {\n        dispatch({\n          type: SORT_GPG_ASC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"active\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"selected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      }\n      break;\n\n    case \"assists\":\n      if (currentStatus === \"unselected_tab\") {\n        dispatch({\n          type: SORT_ASSISTS_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"active\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"selected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n        dispatch({\n          type: SORT_ASSISTS_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"active\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"selected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      } else {\n        dispatch({\n          type: SORT_ASSISTS_ASC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"active\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"selected_tab\",\n            apgTab: \"unselected_tab\"\n          }\n        });\n      }\n      break;\n\n    case \"apg\":\n      if (currentStatus === \"unselected_tab\") {\n        dispatch({\n          type: SORT_APG_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"active\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"selected_tab\"\n          }\n        });\n      } else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n        dispatch({\n          type: SORT_APG_DESC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"active\",\n            apgAsc: \"inactive\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"selected_tab\"\n          }\n        });\n      } else {\n        dispatch({\n          type: SORT_APG_ASC,\n          payload: {\n            alphaDesc: \"inactive\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"active\",\n            azTab: \"unselected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"selected_tab\"\n          }\n        });\n      }\n      break;\n\n    default:\n      return;\n  }\n};\n\nexport const toggleSelectAll = update => dispatch => {\n  switch (update) {\n    case \"unselected_member\":\n      dispatch({\n        type: TOGGLE_SELECT_ALL,\n        payload: {\n          player: \"member\",\n          memberSelection: \"selected_member\"\n        }\n      });\n      break;\n\n    case \"selected_member\":\n      dispatch({\n        type: TOGGLE_SELECT_ALL,\n        payload: {\n          player: \"member\",\n          memberSelection: \"unselected_member\"\n        }\n      });\n\n      break;\n\n    case \"unselected_non_member\":\n      dispatch({\n        type: TOGGLE_SELECT_ALL,\n        payload: {\n          player: \"tenBucker\",\n          tenBuckerSelection: \"selected_non_member\"\n        }\n      });\n      break;\n\n    case \"selected_non_member\":\n      dispatch({\n        type: TOGGLE_SELECT_ALL,\n        payload: {\n          player: \"tenBucker\",\n          tenBuckerSelection: \"unselected_non_member\"\n        }\n      });\n      break;\n\n    default:\n      return;\n  }\n};\n\nexport const batchCardUpdate = newData => dispatch => {\n  dispatch({\n    type: BATCH_CARD_UPDATE,\n    payload: newData\n  });\n};\n\nexport const batchChartUpdate = newData => dispatch => {\n  dispatch({\n    type: BATCH_CHART_UPDATE,\n    payload: newData\n  });\n};\n\nexport const batchUnselect = type => dispatch => {\n  dispatch({\n    type: BATCH_UNSELECT,\n    payload: type\n  });\n};\n\n// this handles when games are removed after the players. In this case, data needs to be re-initiated\n// we recreate the array of players\nexport const updatePlayers = players => dispatch => {\n  dispatch({\n    type: REPLACE_PLAYERS_RECORDS,\n    payload: players\n  });\n};\n// data is sent to the modal in showcase.js\nexport const togglePlayerModal = (newStatus, data) => dispatch => {\n  dispatch({\n    type: TOGGLE_PLAYER_MODAL,\n    payload: {\n      status: newStatus,\n      data: data\n    }\n  });\n};\n\nexport const selectAllGames = status => dispatch => {\n  dispatch({\n    type: BATCH_GAMES,\n    payload: status\n  });\n};\n\nexport const unselectAllGames = () => dispatch => {\n  dispatch({\n    type: UNSELECT_ALL_GAMES\n  });\n};\n\nexport const filterPlayerRecordsByType = object => dispatch => {\n  let operator;\n  let playerType;\n\n  if (object.offense === \"unselected\") {\n    if (object.defense === \"unselected\") {\n      if (object.goalie === \"unselected\") {\n        operator = \"null\";\n        playerType = \"null\";\n      } else {\n        operator = \"only\";\n        playerType = \"Goalie\";\n      }\n    } else {\n      if (object.goalie === \"unselected\") {\n        operator = \"only\";\n        playerType = \"Defense\";\n      } else {\n        operator = \"but\";\n        playerType = \"Forward\";\n      }\n    }\n  } else {\n    if (object.defense === \"unselected\") {\n      if (object.goalie === \"unselected\") {\n        operator = \"only\";\n        playerType = \"Forward\";\n      } else {\n        operator = \"but\";\n        playerType = \"Defense\";\n      }\n    } else {\n      if (object.goalie === \"unselected\") {\n        operator = \"but\";\n        playerType = \"Goalie\";\n      } else {\n        operator = \"null\";\n        playerType = \"null\";\n      }\n    }\n  }\n  dispatch({\n    type: FILTER_PLAYER_RECORDS_BY_TYPE,\n    payload: {\n      operator: operator,\n      playerType: playerType,\n      playerFilters: object\n    }\n  });\n};\n\nexport const filterPlayerRecordsByGames = object => dispatch => {\n  console.log(\"object received in filterGames statsActions.js: \", object);\n  dispatch({\n    type: FILTER_PLAYER_RECORDS_BY_GAMES,\n    payload: object\n  });\n};\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { getGame } from \"../../js/actions/gameActions\";\nimport { getGamesForRecords } from \"../../js/actions/statsActions\";\nimport { setVisibility } from \"../../js/actions/statsActions\";\n\nimport _ from \"underscore\";\n\nclass PastGameList extends Component {\n  componentDidMount() {\n    this.props.getGamesForRecords();\n  }\n\n  toggleVisibility(currentStatus, num) {\n    let newStatus;\n    if (currentStatus === \"visible\") {\n      newStatus = \"hidden\";\n    } else {\n      newStatus = \"visible\";\n    }\n\n    let visibleBefore = this.props.gameVisibility.slice(0, num);\n    let visibleAfter = this.props.gameVisibility.slice(num + 1);\n    let newArray = [...visibleBefore, newStatus, ...visibleAfter];\n\n    this.props.setVisibility(newArray);\n  }\n\n  getGameInfo = gameId => {\n    this.props.getGame(gameId);\n  };\n\n  renderGames(object) {\n    return Object.values(object).map((game, i) => {\n      return (\n        <button\n          key={game._id}\n          className=\"past_game_button contrast_color\"\n          onClick={() => this.getGameInfo(game._id)}\n        >\n          {\" \"}\n          {game._id}{\" \"}\n        </button>\n      );\n    });\n  }\n\n  renderMonth(object) {\n    return Object.entries(Object.values(object)[0]).map(([key, value], i) => {\n      return (\n        <div key={i}>\n          <h3 className=\"h3_alternate\">{key}:</h3>\n          <div className=\"month_game_played\">{this.renderGames(value)}</div>\n        </div>\n      );\n    });\n  }\n\n  renderYear(object) {\n    let reOrderedArray = _.sortBy(Object.values(object)).reverse();\n    return reOrderedArray.map((year, i) => {\n      return (\n        <div key={i}>\n          <div>\n            <h3 className=\"h3_main\">{Object.keys(year)}</h3>\n            <div\n              className=\"hide_year_button\"\n              onClick={() =>\n                this.toggleVisibility(this.props.gameVisibility[i], i)\n              }\n            >\n              {\" \"}\n              {this.props.gameVisibility[i] === \"visible\" ? \"[hide]\" : \"[show]\"}\n            </div>\n          </div>\n          <div\n            className={\n              this.props.gameVisibility\n                ? this.props.gameVisibility[i]\n                : null + \" games_per_year\"\n            }\n          >\n            {this.renderMonth(year)}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"list_of_games\">\n        <div>{this.renderYear(this.props.reducedGames)}</div>\n      </div>\n    );\n  }\n}\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n  reducedGames: state.stats.reducedGames,\n  gameVisibility: state.stats.gameVisibility\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGamesForRecords, setVisibility, getGame }\n)(PastGameList);\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { editGameInfo } from \"../../js/actions/gameActions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { loadState } from \"../sessionStorage\";\n\nimport Locker from \"../Locker.js\";\n\nclass ScoreBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editScore: true,\n      changeLock: true\n    };\n  }\n  componentDidMount() {\n    const privileges = loadState();\n    console.log(\"Data from SessionStorage: \", privileges);\n    this.setState(privileges);\n  }\n\n  logStat(playerID, type, currentValue) {\n    let gameId = this.props.game._id;\n    switch (type) {\n      case \"add_goal_dark\":\n        let goalUpdate = currentValue + 1;\n        let scoreUpdate = this.props.game.goals_dark + 1;\n        switch (true) {\n          case scoreUpdate > this.props.game.goals_white:\n            this.props.editGameInfo(gameId, {\n              goals_dark: scoreUpdate,\n              win: \"Dark\",\n              playerUpdate: {\n                player: playerID,\n                gameInfo: { goals: goalUpdate }\n              }\n            });\n            break;\n\n          case scoreUpdate < this.props.game.goals_white:\n            this.props.editGameInfo(gameId, {\n              goals_dark: scoreUpdate,\n              win: \"White\",\n              playerUpdate: {\n                player: playerID,\n                gameInfo: { goals: goalUpdate }\n              }\n            });\n            break;\n\n          case scoreUpdate === this.props.game.goals_white:\n            this.props.editGameInfo(gameId, {\n              goals_dark: scoreUpdate,\n              win: \"Tie\",\n              playerUpdate: {\n                player: playerID,\n                gameInfo: { goals: goalUpdate }\n              }\n            });\n            break;\n\n          default:\n            return;\n        }\n        break;\n\n      case \"add_goal_white\":\n        goalUpdate = currentValue + 1;\n        scoreUpdate = this.props.game.goals_white + 1;\n        switch (true) {\n          case scoreUpdate > this.props.game.goals_dark:\n            this.props.editGameInfo(gameId, {\n              goals_white: scoreUpdate,\n              win: \"White\",\n              playerUpdate: {\n                player: playerID,\n                gameInfo: { goals: goalUpdate }\n              }\n            });\n            break;\n\n          case scoreUpdate < this.props.game.goals_dark:\n            this.props.editGameInfo(gameId, {\n              goals_white: scoreUpdate,\n              win: \"Dark\",\n              playerUpdate: {\n                player: playerID,\n                gameInfo: { goals: goalUpdate }\n              }\n            });\n            break;\n\n          case scoreUpdate === this.props.game.goals_dark:\n            this.props.editGameInfo(gameId, {\n              goals_white: scoreUpdate,\n              win: \"Tie\",\n              playerUpdate: {\n                player: playerID,\n                gameInfo: { goals: goalUpdate }\n              }\n            });\n            break;\n\n          default:\n            return;\n        }\n        break;\n\n      case \"substract_goal_dark\":\n        goalUpdate = currentValue - 1;\n        scoreUpdate = this.props.game.goals_dark - 1;\n        // we do not want to see negatives for players, except the team variable\n        if (playerID !== \"variable\" && (goalUpdate >= 0 && scoreUpdate >= 0)) {\n          switch (true) {\n            case scoreUpdate > this.props.game.goals_white:\n              this.props.editGameInfo(gameId, {\n                goals_dark: scoreUpdate,\n                win: \"Dark\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            case scoreUpdate < this.props.game.goals_white:\n              this.props.editGameInfo(gameId, {\n                goals_dark: scoreUpdate,\n                win: \"White\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            case scoreUpdate === this.props.game.goals_white:\n              this.props.editGameInfo(gameId, {\n                goals_dark: scoreUpdate,\n                win: \"Tie\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            default:\n              return;\n          }\n        } else if (scoreUpdate >= 0) {\n          switch (true) {\n            case scoreUpdate > this.props.game.goals_white:\n              this.props.editGameInfo(gameId, {\n                goals_dark: scoreUpdate,\n                win: \"Dark\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            case scoreUpdate < this.props.game.goals_white:\n              this.props.editGameInfo(gameId, {\n                goals_dark: scoreUpdate,\n                win: \"White\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            case scoreUpdate === this.props.game.goals_white:\n              this.props.editGameInfo(gameId, {\n                goals_dark: scoreUpdate,\n                win: \"Tie\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            default:\n              return;\n          }\n        }\n        break;\n\n      case \"substract_goal_white\":\n        goalUpdate = currentValue - 1;\n        scoreUpdate = this.props.game.goals_white - 1;\n        if (playerID !== \"variable\" && (goalUpdate >= 0 && scoreUpdate >= 0)) {\n          switch (true) {\n            case scoreUpdate > this.props.game.goals_dark:\n              this.props.editGameInfo(gameId, {\n                goals_white: scoreUpdate,\n                win: \"White\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            case scoreUpdate < this.props.game.goals_dark:\n              this.props.editGameInfo(gameId, {\n                goals_white: scoreUpdate,\n                win: \"Dark\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            case scoreUpdate === this.props.game.goals_dark:\n              this.props.editGameInfo(gameId, {\n                goals_white: scoreUpdate,\n                win: \"Tie\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            default:\n              return;\n          }\n        } else if (scoreUpdate >= 0) {\n          switch (true) {\n            case scoreUpdate > this.props.game.goals_dark:\n              this.props.editGameInfo(gameId, {\n                goals_white: scoreUpdate,\n                win: \"White\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            case scoreUpdate < this.props.game.goals_dark:\n              this.props.editGameInfo(gameId, {\n                goals_white: scoreUpdate,\n                win: \"Dark\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            case scoreUpdate === this.props.game.goals_dark:\n              this.props.editGameInfo(gameId, {\n                goals_white: scoreUpdate,\n                win: \"Tie\",\n                playerUpdate: {\n                  player: playerID,\n                  gameInfo: { goals: goalUpdate }\n                }\n              });\n              break;\n\n            default:\n              return;\n          }\n        }\n        break;\n\n      case \"add_assist\":\n        let assistUpdate = currentValue + 1;\n        this.props.editGameInfo(gameId, {\n          player: playerID,\n          gameInfo: { assists: assistUpdate }\n        });\n        break;\n\n      case \"substract_assist\":\n        assistUpdate = currentValue - 1;\n        if (assistUpdate >= 0) {\n          this.props.editGameInfo(gameId, {\n            player: playerID,\n            gameInfo: { assists: assistUpdate }\n          });\n        }\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  render() {\n    return (\n      <span className=\"full\">\n        <div>\n          <h1 className=\"h1_main\">{this.props.game._id}</h1>\n          <div className=\"tables_container\">\n            <div className=\"table_container\">\n              <h1 className=\"h1_alternate\">\n                Dark\n                <br />\n                {this.props.game.goals_dark}\n              </h1>\n              <table>\n                <thead>\n                  <tr className=\"score_header_tr\">\n                    <th className=\"table_col_name\">Player</th>\n                    <th className=\"table_col_name\">Goals</th>\n                    <th className=\"table_col_name\">Assists</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.props.players\n                    ? this.props.players\n                        .filter(\n                          player =>\n                            player.gameInfo.available === true &&\n                            player.gameInfo.team === \"Dark\"\n                        )\n                        .map(player => {\n                          return (\n                            <tr className=\"stats_row\" key={player._id}>\n                              <td className=\"player_stats stats_name\">\n                                {player.name}\n                              </td>\n                              <td className=\"player_stats stats_data\">\n                                <div className=\"stats\">\n                                  {this.state.editScore === true ? (\n                                    <FontAwesomeIcon\n                                      icon=\"plus-circle\"\n                                      className={\n                                        \"darker_icon stats_icon \" +\n                                        this.props.lockStatus\n                                      }\n                                      onClick={() =>\n                                        this.logStat(\n                                          player._id,\n                                          \"add_goal_dark\",\n                                          player.gameInfo.goals\n                                        )\n                                      }\n                                    />\n                                  ) : null}\n                                  <div\n                                    className={\n                                      player.gameInfo.goals > 0\n                                        ? \"nice data\"\n                                        : null + \" data\"\n                                    }\n                                  >\n                                    {player.gameInfo.goals}\n                                  </div>\n                                  {this.state.editScore === true ? (\n                                    <FontAwesomeIcon\n                                      icon=\"minus-circle\"\n                                      className={\n                                        \"darker_icon stats_icon \" +\n                                        this.props.lockStatus\n                                      }\n                                      onClick={() =>\n                                        this.logStat(\n                                          player._id,\n                                          \"substract_goal_dark\",\n                                          player.gameInfo.goals\n                                        )\n                                      }\n                                    />\n                                  ) : null}\n                                </div>\n                              </td>\n\n                              <td className=\"player_stats stats_data\">\n                                <div className=\"stats\">\n                                  {this.state.editScore === true ? (\n                                    <FontAwesomeIcon\n                                      icon=\"plus-circle\"\n                                      className={\n                                        \"lighter_icon stats_icon \" +\n                                        this.props.lockStatus\n                                      }\n                                      onClick={() =>\n                                        this.logStat(\n                                          player._id,\n                                          \"add_assist\",\n                                          player.gameInfo.assists\n                                        )\n                                      }\n                                    />\n                                  ) : null}\n                                  <div\n                                    className={\n                                      player.gameInfo.assists > 0\n                                        ? \"good data\"\n                                        : null + \" data\"\n                                    }\n                                  >\n                                    {player.gameInfo.assists}\n                                  </div>\n                                  {this.state.editScore === true ? (\n                                    <FontAwesomeIcon\n                                      icon=\"minus-circle\"\n                                      className={\n                                        \"lighter_icon stats_icon \" +\n                                        this.props.lockStatus\n                                      }\n                                      onClick={() =>\n                                        this.logStat(\n                                          player._id,\n                                          \"substract_assist\",\n                                          player.gameInfo.assists\n                                        )\n                                      }\n                                    />\n                                  ) : null}\n                                </div>\n                              </td>\n                            </tr>\n                          );\n                        })\n                    : null}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"table_container\">\n              <h1 className=\"h1_alternate\">\n                White\n                <br />\n                {this.props.game.goals_white}\n              </h1>\n              <table className=\"score_table\">\n                <thead>\n                  <tr className=\"score_header_tr\">\n                    <th className=\"table_col_name\">Player</th>\n                    <th className=\"table_col_name\">Goals</th>\n                    <th className=\"table_col_name\">Assists</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.props.players\n                    ? this.props.players\n                        .filter(\n                          player =>\n                            player.gameInfo.available === true &&\n                            player.gameInfo.team === \"White\"\n                        )\n                        .map(player => {\n                          return (\n                            <tr className=\"stats_row\" key={player._id}>\n                              <td className=\"player_stats stats_name\">\n                                {player.name}\n                              </td>\n                              <td className=\"player_stats stats_data\">\n                                <div className=\"stats\">\n                                  {this.state.editScore === true ? (\n                                    <FontAwesomeIcon\n                                      icon=\"plus-circle\"\n                                      size=\"2x\"\n                                      className={\n                                        \"darker_icon \" + this.props.lockStatus\n                                      }\n                                      onClick={() =>\n                                        this.logStat(\n                                          player._id,\n                                          \"add_goal_white\",\n                                          player.gameInfo.goals\n                                        )\n                                      }\n                                    />\n                                  ) : null}\n                                  <div\n                                    className={\n                                      player.gameInfo.goals > 0\n                                        ? \"nice data\"\n                                        : null + \" data\"\n                                    }\n                                  >\n                                    {player.gameInfo.goals}\n                                  </div>\n                                  {this.state.editScore === true ? (\n                                    <FontAwesomeIcon\n                                      icon=\"minus-circle\"\n                                      size=\"2x\"\n                                      className={\n                                        \"darker_icon \" + this.props.lockStatus\n                                      }\n                                      onClick={() =>\n                                        this.logStat(\n                                          player._id,\n                                          \"substract_goal_white\",\n                                          player.gameInfo.goals\n                                        )\n                                      }\n                                    />\n                                  ) : null}\n                                </div>\n                              </td>\n\n                              <td className=\"player_stats stats_data\">\n                                <div className=\"stats\">\n                                  {this.state.editScore === true ? (\n                                    <FontAwesomeIcon\n                                      icon=\"plus-circle\"\n                                      size=\"2x\"\n                                      className={\n                                        \"lighter_icon \" + this.props.lockStatus\n                                      }\n                                      onClick={() =>\n                                        this.logStat(\n                                          player._id,\n                                          \"add_assist\",\n                                          player.gameInfo.assists\n                                        )\n                                      }\n                                    />\n                                  ) : null}\n                                  <div\n                                    className={\n                                      player.gameInfo.assists > 0\n                                        ? \"good data\"\n                                        : null + \" data\"\n                                    }\n                                  >\n                                    {player.gameInfo.assists}\n                                  </div>\n                                  {this.state.editScore === true ? (\n                                    <FontAwesomeIcon\n                                      icon=\"minus-circle\"\n                                      size=\"2x\"\n                                      className={\n                                        \"lighter_icon \" + this.props.lockStatus\n                                      }\n                                      onClick={() =>\n                                        this.logStat(\n                                          player._id,\n                                          \"substract_assist\",\n                                          player.gameInfo.assists\n                                        )\n                                      }\n                                    />\n                                  ) : null}\n                                </div>\n                              </td>\n                            </tr>\n                          );\n                        })\n                    : null}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        {this.state.changeLock === true ? <Locker /> : null}\n      </span>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  game: state.games.draft,\n  players: state.games.draft.players,\n  lockStatus: state.games.lockStatus\n});\n\nexport default connect(\n  mapStateToProps,\n  { editGameInfo }\n)(ScoreBoard);\n","import React, { Component } from 'react';\n\nclass NoStatsBoard extends Component {\n    render(){\n        return (\n            <div className=\"no_stats_message\">\n                <p className=\"no_game\">The teams for this game have not been drafted yet. Please come back later!\n                </p>    \n            </div>\n        )\n    }\n}\n\nexport default NoStatsBoard;\n","import React, { Component } from \"react\";\n\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleVisibility } from \"../js/actions/statsActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport PastGameList from \"../components/StatsPageComp/PastGamesList.js\"\nimport ScoreBoard from \"../components/StatsPageComp/ScoreBoard.js\"\nimport NoStatsBoard from \"../components/StatsPageComp/NoStatsBoard.js\"\n\nclass Stats extends Component {         \nrender() {\n    return (\n        <div>\n            <NavBar />\n            <main>\n                <section className=\"main_main\">\n                    <h1 className=\"h1_main\">Enter Stats</h1>\n                    <PastGameList />\n                </section>\n                {this.props.visibility.noStatsMessage === \"visible\" ? \n                (<section className={\"main_main \" + this.props.visibility.noStatsMessage}>\n                    <NoStatsBoard />\n                </section>) : \n                (<section className={\"main_main \" + this.props.visibility.gameStats}>\n                    <ScoreBoard />\n                </section>)}\n            </main>\n        </div>\n        )\n    }\n}\n\n// export default Stats\nconst mapStateToProps = state => ({\n    visibility: state.games.visibility,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleVisibility } ) (Stats)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { selectDateRange } from \"../../js/actions/statsActions\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nconst moment = require(\"moment\");\nclass DateRange extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChangeStart(date) {\n        this.setState({\n            startDate: date\n        })\n    }\n\n    handleChangeEnd(date) {\n        this.setState({\n            endDate: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let startDate = moment(this.state.startDate).format(\"YYYY-MM-DD\")\n        let endDate = moment(this.state.endDate).format(\"YYYY-MM-DD\")\n        this.props.selectDateRange(startDate, endDate)\n    }\n\n\n    render() {\n        return (\n            <div className={\"records_calendar \" + this.props.datePickers}>\n                <div className=\"calendar_alignment\">\n                    <form onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                        <DatePicker\n                            placeholderText=\"From: MM DD YYYY\"\n                            selected={this.state.startDate}\n                            selectsStart\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeStart}\n                            isClearable={true}\n                        />\n\n                        <DatePicker\n                            placeholderText=\"To:     MM DD YYYY\"\n                            selected={this.state.endDate}\n                            selectsEnd\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeEnd}\n                            isClearable={true}\n                        />\n                            <div className=\"date_range_options\">\n                                <button id=\"range_submit\" className=\"content_button btn contrast_color\" name=\"submit\" type=\"submit\" >Submit</button>\n                            </div>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    datePickers: state.stats.datePickers\n    })\n\n\nexport default connect(mapStateToProps, { selectDateRange }) (DateRange)\n    ","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport DateRange from \"./DateRange\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass DateSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"dates\")\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.datePickers)}> {this.props.datePickers === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Dates</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className={\"date_pickers \" + this.props.datePickers}>\n                            <div className={\"calendar_container \" + this.props.datePickers}>\n                                <DateRange />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    allGames: state.stats.gamesForRecords,\n    datePickers: state.stats.datePickers,\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, toggleViews }) (DateSelector)\n","export const createCardsArray = (arrayOfPlayers, arrayOfGames) => {\n    // we do not want to fire the function if either array is empty\n    if (arrayOfGames.length > 0 && arrayOfPlayers.length > 0) {\n        // array to store the info\n        let transformedArrayForCards = [];\n        // for each player in the array\n        arrayOfPlayers.forEach((broomballer) => {\n            // we map/filter all games selected to create record for each game played.\n    \n            // if the player didn't play any game, we create an empty \"N/A\" record instead (otherwise misleading)\n            let gamesPlayed = arrayOfGames.filter(game => game.players.filter(player => player._id === broomballer._id)[0])\n            // if the broomballer played any game\n            if (gamesPlayed.length > 0) {\n                let playerReduced = gamesPlayed.reduce((players, game) => {\n                    // variable to access \"game info\" of each player for each game\n                    let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                    let win;\n                    let available;\n    \n                    players.name = broomballer.name\n                    players._id = broomballer._id\n                    players.membershipStatus = broomballer.membershipStatus\n                    players.preferredPosition = broomballer.preferredPosition\n                    \n                    players.gamesPlayed = players.gamesPlayed || []\n                    if(gameInfo[0].available === true){\n                        available = 1\n                        players.gamesPlayed.push(available)\n                    }\n                    \n                    players.goals = players.goals || []\n                    if(gameInfo[0].available === true) {\n                        players.goals.push(gameInfo[0].goals)\n                    }\n                    \n                    players.assists = players.assists || []\n                    if (gameInfo[0].available === true) {\n                        players.assists.push(gameInfo[0].assists)\n                    }\n                    \n                    players.wins = players.wins || []\n                    if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                        win= \"Win\"\n                        players.wins.push(win)\n                    }\n    \n                    players.losses = players.losses || []\n                    if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                        let loss= \"Loss\"\n                        players.losses.push(loss)\n                    }\n    \n                    players.ties = players.ties || []\n                    if(gameInfo[0].available === true && game.win === \"Tie\"){\n                        let tie= \"Tie\"\n                        players.ties.push(tie)\n                    }\n                \n                    return players\n                    }, {});\n                    \n                let gamePlayedFromArray = playerReduced.gamesPlayed ? playerReduced.gamesPlayed.length : 0 \n                let winsFromArray = playerReduced.wins.length\n                let lossesFromArray = playerReduced.losses.length\n                let tiesFromArray = playerReduced.ties.length\n                let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let goalsFromArray = playerReduced.goals ? playerReduced.goals.reduce((a,b) => a + b, 0) : 0\n                let assistsFromArray = playerReduced.assists ? playerReduced.assists.reduce((a, b) => a + b, 0) : 0\n                let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n    \n                playerReduced.gamesPlayed = gamePlayedFromArray\n                playerReduced.wins = winsFromArray\n                playerReduced.losses = lossesFromArray\n                playerReduced.ties = tiesFromArray\n                playerReduced.winPercent = winPercent\n                playerReduced.lossPercent = lossPercent\n                playerReduced.tiePercent = tiePercent\n                playerReduced.goals = goalsFromArray \n                playerReduced.assists = assistsFromArray\n                if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n                \n                transformedArrayForCards.push(playerReduced)\n            } else {\n                let playerWithoutRecord = {\n                    name: broomballer.name,\n                    gamesPlayed: 0,\n                    goals: \"N/A\",\n                    assists: \"N/A\",\n                    membershipStatus: broomballer.membershipStatus,\n                    winPercent: \"N/A\",\n                    lossPercent: \"N/A\",\n                    tiePercent: \"N/A\",\n                    win: \"N/A\",\n                    loss: \"N/A\",\n                    tie: \"N/A\",\n                    gpg: \"N/A\",\n                    apg: \"N/A\",\n                    _id: broomballer._id\n                }\n                transformedArrayForCards.push(playerWithoutRecord)\n            }\n        })\n        return transformedArrayForCards;\n    }\n};\n\nexport const createChartData = (arrayOfCards) => {\n    let labels = []\n    let goalsArray = []\n    let assistsArray = []\n    let gamesPlayedArray = []\n    let winPercentArray = []\n    let lossPercentArray = []\n    let tiePercentArray = []\n    let gpgArray = []\n    let apgArray = []\n    arrayOfCards.forEach(e => {\n        labels.push(e.name);\n        goalsArray.push(e.goals);\n        assistsArray.push(e.assists);\n        gamesPlayedArray.push(e.gamesPlayed);\n        winPercentArray.push(e.winPercent);\n        lossPercentArray.push(e.lossPercent);\n        tiePercentArray.push(e.tiePercent);\n        gpgArray.push(e.gpg);\n        apgArray.push(e.apg);\n    })\n    \n    let chartObject = {\n        labels: labels,\n        // For performance reason, it is better to re-initiate the data than to use the ... operator to merge new with existing\n        datasets: [\n            {\n                label: \"Goals\",\n                data: goalsArray,\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: \"Assists\",\n                data: assistsArray,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Games\",\n                data: gamesPlayedArray,\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Wins (%)\",\n                data: winPercentArray,\n                backgroundColor: 'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                hoverBorderColor: 'rgba(75,192,192,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Losses (%)\",\n                data: lossPercentArray,\n                backgroundColor: '#d3b8ae',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#d3b8ae',\n                hoverBorderColor: '#d3b8ae',\n                barThickness: 15,\n            },\n            {\n                label: \"Ties (%)\",\n                data: tiePercentArray,\n                backgroundColor: '#ff8a65',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#ff8a65',\n                hoverBorderColor: '#ff8a65',\n                barThickness: 15,\n            },\n            {\n                label: \"GPG\",\n                data: gpgArray,\n                backgroundColor: 'rgba(153,102,255,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                hoverBorderColor: 'rgba(153,102,255,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"APG\",\n                data: apgArray,\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                options: {barThickness: 100},\n            },\n            ]\n        }\n        return chartObject;\n    }","import React, { Component } from \"react\";\nimport _ from \"underscore\";\n\nimport { connect } from \"react-redux\";\nimport { getGamesForRecords } from \"../../js/actions/statsActions\";\n// import { getGamesAndTransform } from \"../../js/actions/statsActions\";\n\nimport { selectGame } from \"../../js/actions/statsActions\";\nimport { unselectGame } from \"../../js/actions/statsActions\";\nimport { selectAllGames } from \"../../js/actions/statsActions\";\nimport { unselectAllGames } from \"../../js/actions/statsActions\";\nimport { toggleViews } from \"../../js/actions/statsActions\";\n\nimport { updatePlayers } from \"../../js/actions/statsActions\";\nimport { batchChartUpdate } from \"../../js/actions/statsActions\";\n\nimport { setVisibility } from \"../../js/actions/statsActions\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { createCardsArray } from \"./curateData\";\nimport { createChartData } from \"./curateData\";\n\n// import { beautifyGames } from \"../GameDisplayUtils.js\";\nclass GameSelector extends Component {\n  componentDidMount() {\n    this.props.getGamesForRecords();\n  }\n\n  unselectGame(game) {\n    // marks the game as unselected\n    this.props.unselectGame(game);\n    let arrayOfGames = this.props.selectedGames.filter(\n      match => match._id !== game._id\n    );\n    let cardsArray = createCardsArray(this.props.selectedPlayers, arrayOfGames);\n    this.props.updatePlayers(cardsArray);\n\n    if (arrayOfGames.length > 0) {\n      // createChartData( cardsArray )\n\n      let newObject = createChartData(cardsArray);\n      this.props.batchChartUpdate(newObject);\n    } else {\n      console.log(\"All games have been unselected\");\n    }\n  }\n\n  gameSelection(arrayOfGames) {\n    // marks the selected games as such\n    arrayOfGames.forEach(game => this.markAsSelected(game));\n    let cardsArray = createCardsArray(this.props.selectedPlayers, arrayOfGames);\n    this.props.updatePlayers(cardsArray);\n\n    if (this.props.selectedPlayersNum > 0) {\n      let newObject = createChartData(cardsArray);\n      this.props.batchChartUpdate(newObject);\n    } else {\n      // if no game is selected, have to wipe the chartData\n      console.log(\"No player selected\");\n    }\n  }\n\n  toggleViews(currentStatus) {\n    this.props.toggleViews(currentStatus, \"games\");\n  }\n\n  selectAllGames(status) {\n    this.props.selectAllGames(status);\n    // we send the whole array of games in the time span to the gameSelection function\n    this.gameSelection(this.props.gamesForRecords);\n  }\n  unselectAllGames() {\n    this.props.unselectAllGames();\n    this.props.gamesForRecords.forEach(game => this.props.unselectGame(game));\n    this.gameSelection([]);\n  }\n  // When we hit the \"Select All Games\", we need to make sure the game has not already been selected\n  // otherwise it might be sent twice\n  markAsSelected(game) {\n    let arrayOfIds = this.props.selectedGames.map(\n      gamesSelected => gamesSelected._id\n    );\n    if (!arrayOfIds.includes(game._id)) {\n      this.props.selectGame(game);\n    }\n  }\n\n  markAsUnselected(game) {\n    let arrayOfIds = this.props.unselectedGames.map(\n      gamesUnselected => gamesUnselected._id\n    );\n    console.log(\"ids of games already unselected: \", arrayOfIds);\n    if (!arrayOfIds.includes(game._id)) {\n      this.props.unselectGame(game);\n    }\n  }\n  /* Visibility of the years' games */\n  toggleVisibility(currentStatus, num) {\n    let newStatus;\n    if (currentStatus === \"visible\") {\n      newStatus = \"hidden\";\n    } else {\n      newStatus = \"visible\";\n    }\n\n    let visibleBefore = this.props.gameVisibility.slice(0, num);\n    let visibleAfter = this.props.gameVisibility.slice(num + 1);\n    let newArray = [...visibleBefore, newStatus, ...visibleAfter];\n    console.log(\"new visibilities: \", newArray);\n    this.props.setVisibility(newArray);\n  }\n  /* Object mapping functions */\n  renderGames(object) {\n    return Object.values(object).map((game, i) => {\n      return this.props.selectedGames.indexOf(game) === -1 ? (\n        <button\n          key={game._id}\n          className=\"unselected_game record_game_button\"\n          onClick={() =>\n            this.gameSelection([game, ...this.props.selectedGames])\n          }\n        >\n          {\" \"}\n          {game._id}{\" \"}\n          <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\" />{\" \"}\n        </button>\n      ) : (\n        <button\n          key={game._id}\n          className=\"selected_game record_game_button\"\n          onClick={() => this.unselectGame(game)}\n        >\n          {\" \"}\n          {game._id}{\" \"}\n          <FontAwesomeIcon icon=\"times\" className=\"game_action_icon\" />{\" \"}\n        </button>\n      );\n    });\n  }\n\n  renderMonth(object) {\n    return Object.entries(Object.values(object)[0]).map(([key, value], i) => {\n      return (\n        <div className=\"games_per_month\" key={i}>\n          <h4 className=\"h1_alternate\">{key}:</h4>\n          <div className=\"month_game_played\">{this.renderGames(value)}</div>\n        </div>\n      );\n    });\n  }\n\n  renderYear(object) {\n    let reOrderedArray = _.sortBy(Object.values(object)).reverse();\n    return reOrderedArray.map((year, i) => {\n      return (\n        <div className=\"games_per_year\" key={i}>\n          <h4 className=\"h1_main\">{Object.keys(year)}</h4>\n          <div\n            className=\"hide_year_button\"\n            onClick={() =>\n              this.toggleVisibility(this.props.gameVisibility[i], i)\n            }\n          >\n            {\" \"}\n            {this.props.gameVisibility[i] === \"visible\" ? \"[hide]\" : \"[show]\"}\n          </div>\n          <div className={this.props.gameVisibility[i]}>\n            {this.renderMonth(year)}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"full\">\n        <div className=\"header\">\n          <div>\n            <h3\n              className=\"header_h3\"\n              onClick={() => this.toggleViews(this.props.listOfGames)}\n            >\n              {\" \"}\n              {this.props.listOfGames === \"dead\" ? (\n                <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\" />\n              ) : (\n                <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />\n              )}\n              Select Games\n            </h3>\n          </div>\n        </div>\n        <div className={this.props.listOfGames + \" content \"}>\n          {/* <div className={this.props.listOfGames + \" select_all\"}>\n            <div className=\"button_options_third_set\">\n              {this.props.allGamesSelection === \"unselected_game\" ? (\n                <button\n                  className={\n                    \"record_game_button all_button \" +\n                    this.props.allGamesSelection\n                  }\n                  onClick={() =>\n                    this.selectAllGames(this.props.allGamesSelection)\n                  }\n                >\n                  {\" \"}\n                  Games{\" \"}\n                  <FontAwesomeIcon\n                    icon=\"plus\"\n                    className=\"game_action_icon\"\n                  />{\" \"}\n                </button>\n              ) : (\n                <button\n                  className={\n                    \"record_game_button all_button \" +\n                    this.props.allGamesSelection\n                  }\n                  onClick={() => this.unselectAllGames()}\n                >\n                  {\" \"}\n                  Games{\" \"}\n                  <FontAwesomeIcon\n                    icon=\"times\"\n                    className=\"game_action_icon\"\n                  />{\" \"}\n                </button>\n              )}\n            </div>\n          </div> */}\n\n          <div className={\"record_list_of_games \" + this.props.listOfGames}>\n            <div>\n              {this.props.reducedGames.length > 0\n                ? this.renderYear(this.props.reducedGames)\n                : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n  selectedGames: state.stats.selectedGames,\n  selectedPlayers: state.stats.selectedPlayers,\n  selectedPlayersNum: state.stats.selectedPlayers\n    ? state.stats.selectedPlayers.length\n    : 0,\n  unselectedGames: state.stats.unselectedGames,\n  gamesForRecords: state.stats.gamesForRecords,\n  reducedGames: state.stats.reducedGames,\n  gameVisibility: state.stats.gameVisibility, // visibility of each year's games\n  listOfGames: state.stats.listOfGames, // to toggle the visibility\n  chartData: state.stats.chartData,\n  allGamesSelection: state.stats.allGamesSelection\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getGamesForRecords,\n    selectGame,\n    unselectGame,\n    selectAllGames,\n    unselectAllGames,\n    toggleViews,\n    updatePlayers,\n    batchChartUpdate,\n    setVisibility\n  }\n)(GameSelector);\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { selectPlayer } from '../../js/actions/statsActions'\nimport { unselectPlayer } from '../../js/actions/statsActions'\n// This adds a player to the playerRecords array\nimport { addPlayerStatObject } from \"../../js/actions/statsActions\"\nimport { removePlayerStatObject } from \"../../js/actions/statsActions\"\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { toggleSelectAll } from '../../js/actions/statsActions'\n// this replaces all the records in the playerRecords array\nimport { updatePlayers } from '../../js/actions/statsActions'\n// this merges newly created records with already existing records in the playerRecords array\nimport { batchCardUpdate } from '../../js/actions/statsActions'\n// this is used to send data to the chartData object from which data is pulled to create the chart\nimport { batchChartUpdate } from '../../js/actions/statsActions'\nimport { batchUnselect } from '../../js/actions/statsActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { createCardsArray } from \"./curateData\"\nimport { createChartData } from \"./curateData\"\n\nclass PlayerSelector extends Component {\n\n    componentDidMount() {\n        this.props.fetchPlayers();\n    }\n    // unselect individual players (by way of slicing the existing arrays of data)\n    unselectPlayer(player) {\n        this.props.unselectPlayer(player)\n        this.props.removePlayerStatObject(player)\n        if ( this.props.selectedGamesNum > 0 ) {\n            let newObject = createChartData(this.props.selectedPlayers.filter(broomballer => broomballer._id !== player._id ))\n            this.props.batchChartUpdate(newObject)\n        } else {\n            console.log(\"Handle case: \\nPlayer is removed, no game selected\")\n        }\n    }\n    \n    selectPlayer(broomballer) {\n        this.markAsSelected(broomballer)\n        let cardsArray = createCardsArray(this.props.selectedPlayers.concat(broomballer), this.props.selectedGames)\n        this.props.updatePlayers( cardsArray )\n        this.addBatchChartData( cardsArray )\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"players\")\n    }\n    // calling the \"individual\" functions repeatedly makes redux (and redux devtool) fail & Chrome lag. For this reason, we create separate functions that will handle updates on the whole array. \n    // This dispatcher sends data to the function that will handle it.\n    selectAllPlayers(playerUpdate){\n        switch (playerUpdate) {\n            case \"unselected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // we need to add both all members + non-members already selected for we are going to replace all existing records\n            let allMembersAndSelectedTenBuckers = this.props.allPlayers.filter(player => player.membershipStatus === \"Member\").concat(this.props.selectedPlayers.filter(player => player.membershipStatus !== \"Member\"))\n            this.selectAndTransform(allMembersAndSelectedTenBuckers, \"select\")\n            break;\n\n            case \"selected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Member\")\n            break;\n\n            case \"unselected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // Adding both all ten buckers (who have played one of possible games) + non-members already selected\n            let allTenBuckersAndSelectedMembers = this.props.allPlayers.filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id)).concat(this.props.selectedPlayers.filter(player => player.membershipStatus === \"Member\"))\n            this.selectAndTransform(allTenBuckersAndSelectedMembers, \"select\")\n            break;\n\n            case \"selected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Ten Bucker\")\n            break;\n\n            default:\n            return;\n        }\n    }\n    // this function marks all players in the array as selected (via this.markAsSelected), creates an array of objects in the playerRecords reducer, \n    // and sends data to be handled by setChartData accordingly (=> selected players are created properly for Chartjs package)\n    selectAndTransform(arrayOfPlayers, type) {\n        if (type === \"select\") {\n            arrayOfPlayers.forEach(broomballer => this.markAsSelected(broomballer))\n        }\n        let cardsArray = createCardsArray(arrayOfPlayers, this.props.selectedGames)\n        if (type === \"select\") {\n            this.props.updatePlayers( cardsArray )\n            this.addBatchChartData( cardsArray )\n            }\n        else if (type === \"unselect\") {\n            this.addBatchChartData( cardsArray )\n        }\n    }\n\n    // this handles unselecting players depending on the membership type sent\n    batchUnselect(type){\n        this.props.batchUnselect(type);\n        this.props.selectedPlayers.filter(player => player.membershipStatus === type).forEach(broomballer => this.unselectPlayer(broomballer));\n        this.selectAndTransform(this.props.selectedPlayers.filter(player => player.membershipStatus !== type), \"unselect\")\n    }\n\n    addBatchChartData(arrayOfPlayers) {\n        if ( this.props.selectedGamesNum > 0 ) {\n            let newObject = createChartData(arrayOfPlayers)\n            this.props.batchChartUpdate(newObject)\n        }\n    }\n\n    // Before sending the player to the selectPlayer action that will add it to the selectedPlayers array, we need to make sure the record does not already exist\n    // in that array (we might accidentally send twice via the batch select that consolidates before re-sending to playerRecords array). Otherwise, it creates \n    // problems with duplicate keys in React\n    markAsSelected(player) {\n        let arrayOfIds = this.props.selectedPlayers.map(broomballer => broomballer._id)\n        if ( !arrayOfIds.includes(player._id) ){\n            this.props.selectPlayer(player)\n        }\n    }\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfPlayers)}> {this.props.listOfPlayers === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Players</h3>\n                        </div>\n                    </div>\n                    <div className=\"content \">\n                    {/* <div className={this.props.listOfPlayers + \" content \"}> */}\n                        <div className={this.props.listOfPlayers + \" select_all\"}>\n                            <div className=\"button_options_first_set\">\n                                <button className={\"record_player_button all_button \" + this.props.memberSelection} onClick={() => this.selectAllPlayers(this.props.memberSelection)}> Members {this.props.memberSelection === \"unselected_member\" ? <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> : <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/>}</button>\n                                <button className={\"record_player_button all_button \" + this.props.tenBuckerSelection} onClick={() => this.selectAllPlayers(this.props.tenBuckerSelection)}> Ten Buckers {this.props.tenBuckerSelection === \"unselected_non_member\" ? <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> : <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/>}</button>\n                            </div>\n                            \n                        </div>\n                        <div className={\"list_of_players \" + this.props.listOfPlayers}>\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus === \"Member\")\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"unselected_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"selected_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id))\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"unselected_non_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"selected_non_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    selectedGamesNum: state.stats.selectedGames ? state.stats.selectedGames.length : 0,\n    selectedPlayers: state.stats.selectedPlayers,\n    selectedPlayersNum: state.stats.selectedPlayers ? state.stats.selectedPlayers.length : 0,\n    unselectedPlayers: state.stats.unselectedPlayers,\n    memberSelection: state.stats.memberSelection,\n    tenBuckerSelection: state.stats.tenBuckerSelection,\n    allPlayers: state.players.players,\n    arrayOfTenBuckersID: state.stats.arrayOfTenBuckersID,\n    listOfPlayers: state.stats.listOfPlayers,\n    chartData: state.stats.chartData,\n})\n\nexport default connect(mapStateToProps, {   \n        fetchPlayers, \n        selectPlayer, \n        unselectPlayer, \n        toggleViews, \n        addPlayerStatObject, \n        removePlayerStatObject, \n        // sendDataToChart, \n        toggleSelectAll, \n        batchCardUpdate, \n        batchChartUpdate, \n        batchUnselect, \n        updatePlayers \n    }) (PlayerSelector)\n","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nimport { Line } from \"react-chartjs-2\";\n\nimport { connect } from 'react-redux';\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\n\nclass PlayerStatsModal extends Component {\n    \n    render() {\n        return (\n            <div className=\"player_modal\">\n                <Modal isOpen={this.props.playerModal} toggle={this.toggle} centered={true} size={\"lg\"}>\n                    <ModalHeader className=\"modal_header\"> {this.props.playerModalData.name} </ModalHeader>\n                    <ModalBody>\n                        <Line\n                            data={this.props.playerModalData.data}\n                            options={{\n                                    responsive: true,\n                                    maintainAspectRatio: false,\n                                    }}\n                            />\n                    </ModalBody>\n                    <ModalFooter>\n                        <button className=\"contrast_color content_button\" onClick={()=> this.props.togglePlayerModal(false, {name: \"\", data:{}})}> Close </button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    playerModal: state.stats.playerModal,\n    playerModalData: state.stats.playerModalData\n})\n\nexport default connect(mapStateToProps, { togglePlayerModal }) (PlayerStatsModal)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { toggleViews } from \"../../js/actions/statsActions\"\nimport { toggleSortOptions } from \"../../js/actions/statsActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\nimport PlayerStatsModal from \"./PlayerStatsModal\"\n\nimport _ from \"underscore\"\n\n\nclass Showcase extends Component {\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    toggleSort(tab, currentStatus, ascArrow){\n        this.props.toggleSortOptions(tab, currentStatus, ascArrow)\n    }\n    // Stats in Modal\n    showPlayerStats(playerName, playerID){\n        // we need to filter games that the player has played to show relevant stats\n        // we have sorted the gamesSelected array chronologically for convenience\n        let playerStats = this.props.gamesInChronoOrder.reduce((broomballer, game) => {\n            broomballer.name = playerName\n            broomballer.gamesPlayed = broomballer.gamesPlayed || []\n            broomballer.goals = broomballer.goals || []\n            broomballer.assists = broomballer.assists || []\n            if (game.players.filter(player => player._id === playerID && player.gameInfo.available === true).length !== 0) {\n                broomballer.gamesPlayed.push(game._id)\n                // we filter the array of players with the matching ID (it creates a remapped array of one element if applicable, \n                // gameInfo, therefore the data we want is at index 0 of gameInfo)\n                let gameInfo = game.players.filter(player => player._id === playerID).map(player => player.gameInfo)\n                broomballer.goals.push( gameInfo[0].goals )\n                broomballer.assists.push( gameInfo[0].assists )\n            }            \n            return broomballer\n            }, {});\n        // creating the ChartJS object:    \n        let playerInfo = {\n            name: playerName,\n            data: {\n                labels: playerStats.gamesPlayed,\n                datasets: [\n                    {\n                        label: \"Goals\",\n                        data: playerStats.goals,\n                        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        borderColor: 'rgba(255, 99, 132, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                        lineTension: 0,\n                    },\n                    {\n                        label: \"Assists\",\n                        data: playerStats.assists,\n                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        borderColor: 'rgba(54, 162, 235, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                        lineTension: 0,\n                    }\n                ]\n            }\n        };\n        // sending the data to the modal\n        this.props.togglePlayerModal(true, playerInfo)\n    }\n    \n    render() {\n        return (\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Sorting Options</h3>\n                    </div>\n                </div>\n                <div className={this.props.sortOptionsDisplay !== \"dead\" && this.props.numOfRecords > 0  ? \"content visible\" : \"content dead\"}>\n                    <div className={\"list_of_options \" + this.props.sortOptionsDisplay}>\n                        \n                            <button className={this.props.sortingOptions.azTab + \" tab_button\"} onClick={()=> this.toggleSort(\"az\", this.props.sortingOptions.azTab, this.props.sortingOptions.alphaAsc)}>A-Z <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.alphaDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.alphaAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gamesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"games\", this.props.sortingOptions.gamesTab, this.props.sortingOptions.gamesAsc)}>Games Played  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gamesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gamesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.winsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"wins\", this.props.sortingOptions.winsTab, this.props.sortingOptions.winsAsc)}>Games Won  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.winsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.winsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.lossesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"losses\", this.props.sortingOptions.lossesTab, this.props.sortingOptions.lossesAsc)}>Games Lost  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.lossesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.lossesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.tiesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"ties\", this.props.sortingOptions.tiesTab, this.props.sortingOptions.tiesAsc)}>Games Tied  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.tiesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.tiesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.goalsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"goals\", this.props.sortingOptions.goalsTab, this.props.sortingOptions.goalsAsc)}>Goals  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.goalsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.goalsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gpgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"gpg\", this.props.sortingOptions.gpgTab, this.props.sortingOptions.gpgAsc)}>GPG  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gpgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gpgAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.assistsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"assists\", this.props.sortingOptions.assistsTab, this.props.sortingOptions.assistsAsc)}>Assists  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.assistsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.assistsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.apgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"apg\", this.props.sortingOptions.apgTab, this.props.sortingOptions.apgAsc)}>APG <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.apgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.apgAsc + \" sorting_arrow\"} /> </span> </button>\n                    \n                    </div>\n                </div>\n                <div className=\"records \">\n                \n                {this.props.playerRecords ? this.props.playerRecords.map(object => {\n                    return (\n                        <div key={object._id} className={object.preferredPosition === this.props.positionVisibility ? \"hidden_card wrapping_card_div\" : \"visible wrapping_card_div\" } onClick={()=> this.showPlayerStats(object.name, object._id)}>\n                            <div className={object.membershipStatus === \"Member\" ? \"member_record player_card \" : \"non_member_record player_card\"}>\n                            \n                                <div className=\"player_name\">{object.name} <span className=\"position_dot\"> <FontAwesomeIcon icon=\"circle\" className={object.preferredPosition} /> </span></div>\n                                <div className=\"player_data\">\n                                    <p><span className=\"entry\">Games Played:</span> <span className=\"value\">{object.gamesPlayed}</span>/{this.props.selectedGames.length}</p>\n                                    <p><span className=\"entry\">W/L/T:</span> <span className=\"value\">{ object.winPercent !== \"N/A\" ? object.winPercent + \"%\" : object.winPercent } - { object.lossPercent !== \"N/A\" ? object.lossPercent + \"%\" : object.lossPercent } - { object.tiePercent !== \"N/A\" ? object.tiePercent + \"%\" : object.tiePercent } </span> </p>\n                                    <p><span className=\"entry\">Goals:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.goals : \"N/A\"}</span>\n                                    <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.gpg : \"N/A\"}</span></span></p>\n                                    <p><span className=\"entry\">Assists:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.assists : \"N/A\"}</span>\n                                    <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.apg : \"N/A\"}</span></span></p>\n                                </div>\n                            </div>\n                        </div>\n                        )}\n                        ) : null }\n                </div>\n                {/* </div> */}\n                <PlayerStatsModal isOpen={this.props.playerModal} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    gamesInChronoOrder: _.sortBy(state.stats.selectedGames,\"_id\"),\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    playerRecords: state.stats.filteredPlayerRecords,\n    numOfRecords: state.stats.filteredPlayerRecords ? state.stats.filteredPlayerRecords.length : 0,\n    sortingOptions: state.stats.sortingOptions,\n    forwardSelection: state.stats.selectors.forwardSelection,\n    defenseSelection: state.stats.selectors.defenseSelection,\n    goalieSelection: state.stats.selectors.goalieSelection,\n    positionVisibility: state.stats.selectors.positionVisibility,\n    playerModal: state.stats.playerModal,\n})\n\nexport default connect(mapStateToProps, { toggleViews, toggleSortOptions, togglePlayerModal, }) (Showcase)\n\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSquare } from '@fortawesome/free-regular-svg-icons'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByType } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByGames } from '../../js/actions/statsActions'\n\nclass Filters extends Component {\n\n    playerSelection(setting, status){\n        switch (setting) {\n            case \"offense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({offense: \"unselected\", defense: this.props.defense, goalie: this.props.goalie})\n            }\n            else {\n                this.props.filterPlayerRecordsByType({offense: \"selected\", defense: this.props.defense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"defense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({defense: \"unselected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({defense: \"selected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"goalie\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({goalie: \"unselected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({goalie: \"selected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            break;\n\n            default:\n            return;\n        }\n    }\n\n\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    gameSelection(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        switch (name) {\n            case \"operator\":\n            this.props.filterPlayerRecordsByGames({[name]: value, gamePercent: this.props.gamePercent})\n            break;\n            \n            case \"gamePercent\":\n            this.props.filterPlayerRecordsByGames({operator: this.props.operator, [name]: value})\n            break;\n\n            default: \n            return;\n        }\n    }\n    render() {\n        return(\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Filters</h3>\n                    </div>\n                </div>\n            <div className={\"content \" + this.props.sortOptionsDisplay}>\n                <div className=\"list_of_options\">\n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Players</h3>\n                        <ul className=\"check_list\">\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"offense\",  this.props.offense)}>{ this.props.offense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\"/> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\"/>}  Offense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"defense\",  this.props.defense)}>{ this.props.defense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Defense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"goalie\",  this.props.goalie)}>{ this.props.goalie === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Goalies</li>        \n                        </ul> \n                    </div>\n                    \n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Attendance</h3>\n                            <ul className=\"check_list\">\n                                <li className=\"filter_item\">Played \n                                <select className=\"custom-select\" name=\"operator\" onChange={(event) => this.gameSelection(event)} value= {this.props.operator}>\n                                    <option value=\"+\"> more than </option>\n                                    <option value=\"-\"> less than </option>\n                                </select>\n                                <select className=\"custom-select\" name=\"gamePercent\" onChange={(event) => this.gameSelection(event)} value= {this.props.gamePercent}>\n                                    <option value=\"100\"> 100% </option>\n                                    <option value=\"90\"> 90% </option>\n                                    <option value=\"80\"> 80% </option>\n                                    <option value=\"70\"> 70% </option>\n                                    <option value=\"60\"> 60% </option>\n                                    <option value=\"50\"> 50% </option>\n                                    <option value=\"40\"> 40% </option>\n                                    <option value=\"30\"> 30% </option>\n                                    <option value=\"20\"> 20% </option>\n                                    <option value=\"10\"> 10% </option>\n                                    <option value=\"0\"> 0% </option>\n                                </select>\n                                    of the games </li>\n                            </ul> \n                    </div>\n\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    datePickers: state.stats.datePickers,\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    offense: state.stats.playerFilters.offense,\n    defense: state.stats.playerFilters.defense,\n    goalie: state.stats.playerFilters.goalie,\n    operator: state.stats.gameFilters.operator,\n    gamePercent: state.stats.gameFilters.gamePercent,\n})\n\nexport default connect(mapStateToProps, { toggleViews, filterPlayerRecordsByType, filterPlayerRecordsByGames }) (Filters)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {HorizontalBar} from \"react-chartjs-2\";\n// see https://www.npmjs.com/package/react-chartjs-2 for documentation\n\n// defaults.global.barThickness = 20;\nclass DataChart extends Component {\n    \n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"chart\")\n    }\n\n    render(){\n        \n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.chartDisplay)}> {this.props.chartDisplay === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Show Chart</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        \n                        <div className={\"chart \" }>\n                            {this.props.chartData && this.props.chartDisplay !== \"dead\" ?  \n                            <div className=\"chartAreaWrapper\">\n                                <HorizontalBar\n                                    data={this.props.curatedChartData}\n                                    height= { this.props.chartData.labels.length * 50 }\n                                    className= { this.props.chartDisplay }\n                                    options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false,\n                                            barThickness: 100\n                                            }}\n                                    />\n                            </div> : null }  \n                        </div>\n                    </div>\n                </div>\n                )\n\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    chartData: state.stats.chartData,\n    curatedChartData: state.stats.curatedChartData,\n    chartDisplay: state.stats.chartDisplay,\n    chartingOptions: state.stats.chartingOptions,\n})\n\nexport default connect(mapStateToProps, { toggleViews }) (DataChart)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\n\nimport NavBar from \"../components/NavBar.js\"\nimport DateSelector from \"../components/RecordsPageComp/DateSelector.js\"\nimport GameSelector from \"../components/RecordsPageComp/GameSelector.js\"\nimport PlayerSelector from \"../components/RecordsPageComp/PlayerSelector.js\"\nimport Showcase from \"../components/RecordsPageComp/Showcase.js\"\nimport Filters from \"../components/RecordsPageComp/Filters.js\"\nimport DataChart from \"../components/RecordsPageComp/DataChart.js\"\nclass Records extends Component { \n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <main className=\"main_main main_padded\"> \n            <h1 className=\"h1_main\">League Records</h1>\n            \n            <section>\n                < DateSelector />\n            </section>\n            \n            <section>\n                < GameSelector />\n            </section>\n            \n            <section>\n                < PlayerSelector />\n            </section>\n            \n            <section>\n                < DataChart />\n            </section>\n\n            <section>\n                < Showcase />\n            </section>\n\n            <section>\n                < Filters />\n            </section>\n        </main>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    games: state.games.games\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps) (Records)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n\nimport { updateUserForm } from '../js/actions/authenticateActions';\nimport { createNewUser } from '../js/actions/authenticateActions';\nimport { authenticateUser } from '../js/actions/authenticateActions';\n\nclass LoginForm extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n    handleCancel(event) {\n        event.preventDefault()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedUser = {...this.props.user, [name]: value}\n        this.props.updateUserForm(editedUser)\n        // this.setState({...this.state, [name]: value})\n        \n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.props.in === \"show_tab\") {\n            console.log(\"Sign-in mode activated\")\n            let user = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                }\n            this.props.authenticateUser(\"local\", user)\n            }\n        else {\n            let newUser = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                email: this.props.user.email,\n                privilege: \"user\"\n                }\n            // let id = this.props.player._id\n            this.props.createNewUser(newUser)\n        }\n\n        // go back to tab#1\n        // this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Username: </label>\n                            <input \n                                type=\"text\" \n                                name=\"username\"\n                                value= {this.props.user.username}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Password: </label>\n                            <input \n                                type=\"text\" \n                                name=\"password\"\n                                value= {this.props.user.password}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        {this.props.up === \"show\" ? (\n                            <div className=\"field\">\n                                <label>Email: </label>\n                                <input \n                                    type=\"text\" \n                                    name=\"email\"\n                                    value= {this.props.user.email}\n                                    onChange={(event) => this.handleChange(event)}\n                                    />\n                            </div>\n                        ) : null}\n                        <div className=\"button_container\">\n                            {this.props.in === \"show_tab\" ? \n                                <button type=\"submit\" value=\"Log In\" className=\"contrast_color\"> Sign in </button> \n                                :\n                                <button type=\"submit\" value=\"submit\" className=\"contrast_color\"> Sign up </button>\n                            } \n                            <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    user: state.authenticate.user,\n    in: state.authenticate.tabs[0],\n    up: state.authenticate.tabs[1]\n})\n\nexport default connect(mapStateToProps, { updateUserForm, createNewUser, authenticateUser }) (LoginForm)","import {\n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE,\n    AUTHENTICATE\n} from \"./types\"\n\n\nimport API from \"../../utils/API\"\n\nexport const updateUserForm = (data) => dispatch => {\n    dispatch({\n        type: UPDATE_USER_FORM,\n        payload: data\n    })\n}\n\nexport const createNewUser = ( newUser ) => dispatch => {\n    API.addNewUser( newUser).then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NEW_USER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n    dispatch({\n        type: SIGN_MODE,\n        payload: id\n    })\n}\n\nexport const authenticateUser = (method, user) => dispatch => {\n    console.log(\"data in authenticateUser authenticateActions.js: \", user)\n    if (method === \"local\") {\n        API.authenticateUser(\"local\", user).then(res => {\n            if (!res.data.errmsg) {\n                console.log(\"Response from authentication API: \", res.data)\n                window.location = res.data.redirectURI;\n                dispatch({\n                    type: AUTHENTICATE,\n                    payload: res.data\n                })\n                /*switch (res.data.privilege) {\n                    case \"SuperAdmin\":\n                    saveState({\n                        SuperAdmin: true,\n                        draftTeams: true,\n                        changeAvailability: true,\n                        createGame: true,\n                        deleteGame: true,\n                        editScore: true,\n                        changeLock: true,\n                        createPlayer: true,\n                        editMember: true,\n                        deleteMember: true,\n                        editTenBucker: true,\n                        deleteTenBucker: true\n                    })\n\n                    break;\n\n                    default:\n                    return;\n                }*/\n            }\n        })\n    }\n}\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from \"react-redux\";\nimport { toggleTabStatus } from \"../js/actions/authenticateActions\";\n\nimport NavBar from \"../components/NavBar.js\";\nimport LoginForm from \"../components/LoginForm.js\";\n\nclass Login extends Component {\n  toggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1;\n    if (currentStatus === \"hide_tab\") {\n      this.props.toggleTabStatus(tabIndex);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <div className=\"main_alternate\">\n          <h1 className=\"h1_alternate\">Login</h1>\n          <div className=\"two_tab_centering\">\n            <span\n              id=\"1\"\n              className={\"auth_tab \" + this.props.tab1}\n              onClick={() => this.toggleStatus(\"1\", this.props.tab1)}\n            >\n              {\" \"}\n              Sign-in{\" \"}\n            </span>\n            <span\n              id=\"2\"\n              className={\"auth_tab \" + this.props.tab2}\n              onClick={() => this.toggleStatus(\"2\", this.props.tab2)}\n            >\n              {\" \"}\n              Sign-up{\" \"}\n            </span>\n          </div>\n          <div className=\"main_for_tab\">\n            <LoginForm />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n  tab1: state.authenticate.tabs[0],\n  tab2: state.authenticate.tabs[1]\n});\n\n// export default Draft;\nexport default connect(\n  mapStateToProps,\n  { toggleTabStatus }\n)(Login);\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    DELETE_GAME, \n    GET_GAME, \n    EDIT_GAME_INFO, \n    RESET,\n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE,\n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS,\n    HIDE_NON_MEMBERS, \n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO,\n    UNLOCK_GAME_INFO,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n} from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    games: [],\n    upcomingGames: [],\n    pastGames: [], // games showing in the \"Past Games\" list of Draft.js. Sorted from recent to old\n    gameInfo: {\n        goals: 0,\n        assists: 0,\n        darkPickNum: 0,\n        whitePickNum: 0,\n        available: true,\n        team: \"N/A\"\n    },\n    visibility: {\n        top: \"dead\",\n        main: \"dead\",\n        bottom: \"dead\",\n        gameStats: \"dead\",\n        noStatsMessage: \"dead\",\n    },\n    gameDate: \"\",\n    draft: {},\n    unavailableMembers: [],\n    allTenBuckers: [],\n    notPlayingNonMembers: [],\n    playingNonMembers: [],\n    lockStatus: \"visible\", // this hides the arrows + delete icons if the game is locked\n    showingNonPlayingTenBuckers: \"Show\",    // which means this section is hidden\n    showingUnavailableMembers: \"Show\",      // which means this section is hidden\n    draftMode: \"Draft\",\n    pickButtons: {\n        left: \"Set Dark Picks\",\n        right: \"Set White Picks\"\n    },\n    picked: [],\n    unpicked: [],\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_GAMES:\n        return {\n            ...state,\n            games: action.payload,\n            upcomingGames: action.payload.filter(game => game._id >= moment().format(\"YYYY-MM-DD\")),\n            pastGames: _.sortBy(action.payload.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n        }\n        \n        case DELETE_GAME:\n        return {\n            ...state,\n            visibility: initialState.visibility,\n            games: state.games.filter(game => game._id !== action.payload._id),\n            upcomingGames: state.upcomingGames.filter(game => game._id !== action.payload._id),\n            pastGames: _.sortBy(state.pastGames.filter(game => game._id !== action.payload._id),\"_id\").reverse(),\n            lockStatus: \"hidden\",\n            draftMode: initialState.draftMode,\n            pickButtons: initialState.pickButtons,\n            }\n\n\n        case NEW_GAME:\n        return {\n            ...state,\n            games: _.sortBy([...state.games, action.payload], \"game_date\"),\n            upcomingGames: action.payload._id >= moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.upcomingGames], \"game_date\") : state.upcomingGames,\n            pastGames: action.payload._id < moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.pastGames], \"game_date\").reverse() : state.pastGames \n        }\n\n        case GET_GAME:\n        return {\n            ...state,\n            draftMode: initialState.draftMode,\n            gameDate: action.payload.game._id,\n            draft: action.payload.game,\n            // This hides the locker if \n            lockStatus: action.payload.game.lock_status === true ? \"hidden\" : \"visible\",\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.game.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            // We initiate the array of playing ten-buckers here (for them to not get added twice, this array will be check against when clicking on add non-member)\n            playingNonMembers: action.payload.game.players.filter(player => player.membershipStatus !== \"Member\"),\n            visibility: {\n                top: \"visible\", \n                main: \"visible\", \n                bottom: \"visible\",\n                gameStats: action.payload.gameStats,\n                noStatsMessage: action.payload.noStatsMessage\n            }\n        }\n\n        case EDIT_GAME_INFO:\n        return {\n            ...state,\n            draft: action.payload.game,\n        }\n        \n        case RESET:\n        return {\n            ...state,\n            draft: action.payload,\n            unavailableMembers: initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            playingNonMembers: initialState.playingNonMembers,\n            picked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case MAKE_MEMBER_UNAVAILABLE:\n        return {\n            ...state,\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            draft: action.payload\n        }\n\n        case MAKE_TEN_BUCKER_UNAVAILABLE:\n        return {\n            /* The Ten Buckers are managed outside of the \"game\" object. If they would just be set as \"Unavailable\" like Members, duplicates may be created.\n            They need to be removed from the game object altogether. Therefore, their status is handled in the reducer once sent to the state.\n            The allTenBuckers array that populates after a click is making this easier: when a Ten Bucker is set as unavailable, it is filtered \n            out of the array of playingNonMembers. It is also added to the array of notPlayingNonMembers: their data is checked agains the array of allTenBuckers\n            via a filter. It creates an array of 1 element, that we add to the notPlayingNonMembers array by extracting its index 0 */\n            ...state,\n            draft: action.payload.gameData,\n            notPlayingNonMembers: state.showingNonPlayingTenBuckers === \"Hide\" ? _.sortBy([...state.notPlayingNonMembers, state.allTenBuckers.filter(player => player._id === action.payload.player)[0]],\"name\") : initialState.notPlayingNonMembers,\n            playingNonMembers: state.playingNonMembers.filter(player => player._id !== action.payload.player),\n        }\n        // this case only deals with Members as Ten Buckers are handled separately through ADD_NON_MEMBER\n        case MAKE_MEMBER_AVAILABLE:\n        return {\n            ...state,\n            // removing properly from the array of unavailable players\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? (state.draft.players.filter(player => player.gameInfo.available === false && player.membershipStatus === \"Member\" && player._id !== action.payload.player)) : initialState.unavailableMembers,\n            draft: action.payload.game,\n        }\n\n        case SHOW_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: state.draft.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false),\n            showingUnavailableMembers: \"Hide\"\n        }\n        \n        case HIDE_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: initialState.unavailableMembers,\n            showingUnavailableMembers: \"Show\"\n        }\n\n        case SHOW_NON_MEMBERS:\n        return {\n            ...state,\n            allTenBuckers: action.payload.all,\n            notPlayingNonMembers: action.payload.new,\n            showingNonPlayingTenBuckers: \"Hide\"\n        }\n\n        case HIDE_NON_MEMBERS:\n        return {\n            ...state,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            showingNonPlayingTenBuckers: \"Show\"\n        }\n        \n        case ADD_NON_MEMBER:\n        return {\n            ...state,\n            draft: action.payload.players,\n            notPlayingNonMembers: state.notPlayingNonMembers.filter(player => player._id !== action.payload.player._id),\n            playingNonMembers: [action.payload.player, ...state.playingNonMembers]\n        }\n\n        case LOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n        \n        case UNLOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n\n        case TRIGGER_PICK_MODE:\n        return {\n            ...state,\n            draftMode: action.payload.team,\n            pickButtons: action.payload.buttons,\n            visibility: {top: \"hidden\", main: \"visible\", bottom: \"visible\"},\n            // as opposed to the \"SET_PICK\" case, the filtering needs to happen in the reducer, as it is based on data already stored in the state (not coming from API)\n            picked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case TRIGGER_DRAFT_MODE:\n        return {\n            ...state,\n            draftMode: \"Draft\",\n            visibility: {top: \"visible\", main: \"visible\", bottom: \"visible\"},\n            pickButtons: initialState.pickButtons\n        }\n\n        case SET_PICK:\n        return {\n            ...state,\n            draft: action.payload.game,\n            picked: action.payload.picked,\n            unpicked: action.payload.unpicked\n            \n        }\n\n        default: \n        return state;\n    }\n}","import { SHOW_FUTURE, SHOW_PAST } from '../actions/types';\nconst moment = require(\"moment\");\n\nconst initialState = {\n    showing: \"future\",\n    upcoming_visibility: \"visible\",\n    past_visibility: \"hidden\",\n    dateHeader: \"Upcoming\",\n    buttonMsg: \"Past\",\n    today: moment().format(\"YYYY-MM-DD\")    \n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_FUTURE:\n        return {\n            ...state,\n            upcoming_visibility: \"visible\",\n            past_visibility: \"hidden\",\n            dateHeader: \"Upcoming\",\n            buttonMsg: \"Past\",\n            showing: \"future\",\n        }\n        \n        case SHOW_PAST:\n        return {\n            ...state,\n            upcoming_visibility: \"hidden\",\n            past_visibility: \"visible\",\n            dateHeader: \"Past\",\n            buttonMsg: \"Upcoming\",\n            showing: \"past\"\n        }\n        \n        default:\n        return state;\n    }\n}","import { FETCH_PLAYERS, EDIT_PLAYER, ADD_PLAYER, DELETE_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from '../actions/types';\nimport _ from \"underscore\"\n\nconst initialState = {\n    players: [],\n    player: {\n        name: \"\",\n        fullName: \"\",\n        preferredPosition: \"Forward\",\n        membershipStatus: \"Member\",\n        email: \"\",\n        playerLevel: \"A+\"\n        },\n\n    tabs: [\"show_tab\",\"hide_tab\",\"hide_tab\"],\n    panels: [\"visible\", \"hidden\", \"hidden\"],\n    \n    formMode: \"Add\"\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_PLAYERS:\n        return {\n            ...state,\n            players: action.payload\n        }\n\n        case ADD_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([...state.players, action.payload], \"name\")\n        }\n\n        case DELETE_PLAYER:\n        return {\n            ...state,\n            deletedPlayer: action.payload,\n            players: state.players.filter(player => player._id !== action.payload._id)\n        }\n        \n        case EDIT_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([action.payload, ...state.players.filter(player => player._id !== action.payload._id)], \"name\")\n        }\n        \n        case SHOW_TAB:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide_tab\"} else {return tab = \"show_tab\"}}),\n            panels: state.panels.map((panel, index) => {if(index !== action.payload) {return panel = \"hidden\"} else {return panel = \"visible\"}})\n        }\n\n        case RESET_TABS:\n        return {\n            ...state,\n            player: initialState.player,\n            formMode: \"Add\",\n            tabs: initialState.tabs,\n            panels: initialState.panels,\n        }\n\n        case EDIT_FORM:\n        return {\n            ...state,\n            formMode: \"Edit\",\n            tabs: [\"hide_tab\",\"hide_tab\",\"show_tab\"],\n            panels: [\"hidden\", \"hidden\", \"visible\"],\n            player: action.payload\n        }\n\n        case UPDATE_FIELD:\n        return {\n            ...state,\n            player: action.payload\n        }        \n\n        default: \n        return state;\n    }\n}","import {\n  SHOW_GAMES_TO_STATS,\n  GET_GAMES_IN_TIMESPAN,\n  SET_YEARS_VISIBILITIES,\n  ADD_GAME_TO_SELECTED,\n  REMOVE_GAME_FROM_SELECTED,\n  ADD_PLAYER_TO_SELECTED,\n  REMOVE_PLAYER_FROM_SELECTED,\n  TOGGLE_RECORDS_VIEWS,\n  ADD_PLAYER_RECORDS,\n  REMOVE_PLAYER_RECORDS,\n  REPLACE_PLAYERS_RECORDS,\n  SORT_AZ_ASC,\n  SORT_AZ_DESC,\n  SORT_GAMES_ASC,\n  SORT_GAMES_DESC,\n  SORT_WINS_ASC,\n  SORT_WINS_DESC,\n  SORT_LOSSES_ASC,\n  SORT_LOSSES_DESC,\n  SORT_TIES_ASC,\n  SORT_TIES_DESC,\n  SORT_GOALS_ASC,\n  SORT_GOALS_DESC,\n  SORT_GPG_ASC,\n  SORT_GPG_DESC,\n  SORT_ASSISTS_ASC,\n  SORT_ASSISTS_DESC,\n  SORT_APG_ASC,\n  SORT_APG_DESC,\n  SET_DATE_RANGE,\n  // SET_CHART_DATA,\n  TOGGLE_SELECT_ALL,\n  BATCH_CARD_UPDATE,\n  BATCH_CHART_UPDATE,\n  BATCH_UNSELECT,\n  // TOGGLE_POSITIONS,\n  TOGGLE_PLAYER_MODAL,\n  BATCH_GAMES,\n  UNSELECT_ALL_GAMES,\n  FILTER_PLAYER_RECORDS_BY_TYPE,\n  FILTER_PLAYER_RECORDS_BY_GAMES\n} from \"../actions/types\";\n\nimport _ from \"underscore\";\nconst moment = require(\"moment\");\n\nconst initialState = {\n  visibility: \"dead\",\n  message:\n    \"Teams have not been drafted for this team yet. Please come back later!\",\n  gamesForRecords: [],\n  pastGamesFromAPI: [],\n  reducedGames: [],\n  gameVisibility: [],\n  selectedGames: [],\n  unselectedGames: [],\n  selectedPlayers: [],\n  unselectedPlayers: [],\n  datePickers: \"visible\",\n  listOfGames: \"dead\",\n  listOfPlayers: \"dead\",\n  sortOptionsDisplay: \"dead\",\n  chartDisplay: \"dead\",\n  playerRecords: [],\n  arrayOfTenBuckersID: [],\n  sortingOptions: {\n    alphaDesc: \"active\",\n    alphaAsc: \"inactive\",\n    gamesDesc: \"inactive\",\n    gamesAsc: \"inactive\",\n    goalsDesc: \"inactive\",\n    goalsAsc: \"inactive\",\n    gpgDesc: \"inactive\",\n    gpgAsc: \"inactive\",\n    winsDesc: \"inactive\",\n    winsAsc: \"inactive\",\n    lossesDesc: \"inactive\",\n    lossesAsc: \"inactive\",\n    tiesDesc: \"inactive\",\n    tiesAsc: \"inactive\",\n    assistsDesc: \"inactive\",\n    assistsAsc: \"inactive\",\n    apgDesc: \"inactive\",\n    apgAsc: \"inactive\",\n    azTab: \"selected_tab\",\n    gamesTab: \"unselected_tab\",\n    winsTab: \"unselected_tab\",\n    lossesTab: \"unselected_tab\",\n    tiesTab: \"unselected_tab\",\n    goalsTab: \"unselected_tab\",\n    gpgTab: \"unselected_tab\",\n    assistsTab: \"unselected_tab\",\n    apgTab: \"unselected_tab\"\n  },\n  chartingOptions: {\n    gamesTab: \"selected_chart_games\",\n    winsTab: \"selected_chart_wins\",\n    goalsTab: \"selected_chart_goals\",\n    gpgTab: \"selected_chart_gpg\",\n    assistsTab: \"selected_chart_assists\",\n    apgTab: \"selected_chart_apg\"\n  },\n  chartData: {\n    labels: [],\n    datasets: [\n      {\n        label: \"Goals\",\n        data: [],\n        backgroundColor: \"rgba(255, 99, 132, 0.6)\",\n        borderColor: \"rgba(172,173,178,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255, 99, 132, 0.6)\",\n        hoverBorderColor: \"rgba(255, 99, 132, 0.6)\"\n      },\n      {\n        label: \"Assists\",\n        data: [],\n        backgroundColor: \"rgba(54, 162, 235, 0.6)\",\n        borderColor: \"rgba(172,173,178,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(54, 162, 235, 0.6)\",\n        hoverBorderColor: \"rgba(54, 162, 235, 0.6)\",\n        barThickness: 15\n      },\n      {\n        label: \"Games\",\n        data: [],\n        backgroundColor: \"rgba(255, 206, 86, 0.6)\",\n        borderColor: \"rgba(172,173,178,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255, 206, 86, 0.6)\",\n        hoverBorderColor: \"rgba(255, 206, 86, 0.6)\",\n        barThickness: 15\n      },\n      {\n        label: \"Wins (%)\",\n        data: [],\n        backgroundColor: \"rgba(75,192,192,0.6)\",\n        borderColor: \"rgba(172,173,178,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(75,192,192,0.6)\",\n        hoverBorderColor: \"rgba(75,192,192,0.6)\",\n        barThickness: 15\n      },\n      {\n        label: \"Losses (%)\",\n        data: [],\n        backgroundColor: \"#d3b8ae\",\n        borderColor: \"rgba(172,173,178,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"#d3b8ae\",\n        hoverBorderColor: \"#d3b8ae\",\n        barThickness: 15\n      },\n      {\n        label: \"Ties (%)\",\n        data: [],\n        backgroundColor: \"#ff8a65\",\n        borderColor: \"rgba(172,173,178,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"#ff8a65\",\n        hoverBorderColor: \"#ff8a65\",\n        barThickness: 15\n      },\n      {\n        label: \"GPG\",\n        data: [],\n        backgroundColor: \"rgba(153,102,255,0.6)\",\n        borderColor: \"rgba(172,173,178,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(153,102,255,0.6)\",\n        hoverBorderColor: \"rgba(153,102,255,0.6)\",\n        barThickness: 15\n      },\n      {\n        label: \"APG\",\n        data: [],\n        backgroundColor: \"rgba(255, 159, 64, 0.6)\",\n        borderColor: \"rgba(172,173,178,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255, 159, 64, 0.6)\",\n        hoverBorderColor: \"rgba(255, 159, 64, 0.6)\",\n        options: { barThickness: 100 }\n      }\n    ]\n  },\n  memberSelection: \"unselected_member\",\n  tenBuckerSelection: \"unselected_non_member\",\n  selectors: {\n    forwardSelection: \"unselected_forward\",\n    goalieSelection: \"unselected_goalie\",\n    defenseSelection: \"unselected_defense\",\n    positionVisibility: \"all\"\n  },\n  playerModal: false,\n  playerModalData: {},\n  allGamesSelection: \"unselected_game\",\n  playerFilters: {\n    offense: \"selected\",\n    defense: \"selected\",\n    goalie: \"selected\"\n  },\n  gameFilters: {\n    operator: \"+\",\n    gamePercent: \"0\"\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_GAMES_TO_STATS:\n      return {\n        ...state,\n        visibility: \"visible\"\n      };\n\n    case GET_GAMES_IN_TIMESPAN:\n      return {\n        ...state,\n        pastGamesFromAPI: _.sortBy(\n          action.payload.games.filter(\n            game => game._id < moment().format(\"YYYY-MM-DD\")\n          ),\n          \"_id\"\n        ).reverse(),\n        gamesForRecords: _.sortBy(\n          action.payload.games.filter(\n            game => game._id < moment().format(\"YYYY-MM-DD\")\n          ),\n          \"_id\"\n        ).reverse(),\n        reducedGames: action.payload.reducedGames,\n        gameVisibility: action.payload.visibility,\n        arrayOfTenBuckersID: action.payload.allTenBuckers\n      };\n\n    case SET_YEARS_VISIBILITIES:\n      return {\n        ...state,\n        gameVisibility: action.payload\n      };\n\n    case ADD_GAME_TO_SELECTED:\n      return {\n        ...state,\n        selectedGames: [...state.selectedGames, action.payload],\n        unselectedGames: state.unselectedGames.filter(\n          game => game._id !== action.payload._id\n        ),\n        sortingOptions: initialState.sortingOptions,\n        playerFilters: initialState.playerFilters,\n        gameFilters: initialState.playerFilters\n      };\n\n    case REMOVE_GAME_FROM_SELECTED:\n      return {\n        ...state,\n        selectedGames: state.selectedGames.filter(\n          game => game._id !== action.payload._id\n        ),\n        unselectedGames: [...state.unselectedGames, action.payload],\n        sortingOptions: initialState.sortingOptions,\n        playerFilters: initialState.playerFilters,\n        gameFilters: initialState.gameFilters\n      };\n\n    case ADD_PLAYER_TO_SELECTED:\n      return {\n        ...state,\n        selectedPlayers: [...state.selectedPlayers, action.payload.selected],\n        unselectedPlayers: state.unselectedPlayers.filter(\n          player => player._id !== action.payload.selected._id\n        ),\n        sortingOptions: initialState.sortingOptions,\n        playerFilters: initialState.playerFilters,\n        gameFilters: initialState.gameFilters\n      };\n\n    case REMOVE_PLAYER_FROM_SELECTED:\n      return {\n        ...state,\n        selectedPlayers: state.selectedPlayers.filter(\n          player => player._id !== action.payload.selected._id\n        ),\n        unselectedPlayers: [\n          ...state.unselectedPlayers,\n          action.payload.selected\n        ],\n        sortingOptions: initialState.sortingOptions,\n        playerFilters: initialState.playerFilters,\n        gameFilters: initialState.gameFilters\n      };\n\n    case TOGGLE_RECORDS_VIEWS:\n      return {\n        ...state,\n        datePickers: action.payload.dates,\n        listOfGames: action.payload.games,\n        listOfPlayers: action.payload.players,\n        sortOptionsDisplay: action.payload.sort,\n        chartDisplay: action.payload.chart\n      };\n\n    case ADD_PLAYER_RECORDS:\n      return {\n        ...state,\n        playerRecords: _.sortBy(\n          [...state.playerRecords, action.payload],\n          \"name\"\n        ),\n        filteredPlayerRecords: _.sortBy(\n          [...state.playerRecords, action.payload],\n          \"name\"\n        )\n      };\n\n    case REMOVE_PLAYER_RECORDS:\n      return {\n        ...state,\n        playerRecords: _.sortBy(\n          state.playerRecords.filter(\n            player => player._id !== action.payload._id\n          ),\n          \"name\"\n        ),\n        filteredPlayerRecords: _.sortBy(\n          state.playerRecords.filter(\n            player => player._id !== action.payload._id\n          ),\n          \"name\"\n        )\n      };\n\n    case REPLACE_PLAYERS_RECORDS:\n      return {\n        ...state,\n        playerRecords: _.sortBy(action.payload, \"name\"),\n        filteredPlayerRecords: _.sortBy(action.payload, \"name\")\n      };\n\n    case SORT_AZ_ASC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords,\n          \"name\"\n        ).reverse()\n      };\n\n    case SORT_AZ_DESC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\")\n      };\n\n    case SORT_GAMES_ASC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.gamesPlayed !== \"N/A\"\n          ),\n          \"gamesPlayed\"\n        )\n      };\n\n    case SORT_GAMES_DESC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.gamesPlayed !== \"N/A\"\n          ),\n          \"gamesPlayed\"\n        ).reverse()\n      };\n\n    case SORT_WINS_ASC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.winPercent !== \"N/A\"\n          ),\n          \"winPercent\"\n        )\n      };\n\n    case SORT_WINS_DESC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.winPercent !== \"N/A\"\n          ),\n          \"winPercent\"\n        ).reverse()\n      };\n\n    case SORT_LOSSES_ASC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.lossPercent !== \"N/A\"\n          ),\n          \"lossPercent\"\n        )\n      };\n\n    case SORT_LOSSES_DESC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.lossPercent !== \"N/A\"\n          ),\n          \"lossPercent\"\n        ).reverse()\n      };\n\n    case SORT_TIES_ASC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.tiePercent !== \"N/A\"\n          ),\n          \"tiePercent\"\n        )\n      };\n\n    case SORT_TIES_DESC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.tiePercent !== \"N/A\"\n          ),\n          \"tiePercent\"\n        ).reverse()\n      };\n\n    case SORT_GOALS_ASC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"),\n          \"goals\"\n        )\n      };\n\n    case SORT_GOALS_DESC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"),\n          \"goals\"\n        ).reverse()\n      };\n\n    case SORT_ASSISTS_ASC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.assists !== \"N/A\"\n          ),\n          \"assists\"\n        )\n      };\n\n    case SORT_ASSISTS_DESC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(\n            player => player.assists !== \"N/A\"\n          ),\n          \"assists\"\n        ).reverse()\n      };\n\n    case SORT_GPG_ASC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"),\n          \"gpg\"\n        )\n      };\n\n    case SORT_GPG_DESC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"),\n          \"gpg\"\n        ).reverse()\n      };\n\n    case SORT_APG_ASC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"),\n          \"apg\"\n        )\n      };\n\n    case SORT_APG_DESC:\n      return {\n        ...state,\n        sortingOptions: action.payload,\n        filteredPlayerRecords: _.sortBy(\n          state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"),\n          \"apg\"\n        ).reverse()\n      };\n\n    case SET_DATE_RANGE:\n      return {\n        ...state,\n        dateRange: action.payload,\n        gamesForRecords: state.pastGamesFromAPI.filter(\n          game =>\n            game._id >= action.payload.from && game._id <= action.payload.to\n        )\n      };\n\n    case TOGGLE_SELECT_ALL:\n      return {\n        ...state,\n        memberSelection:\n          action.payload.player === \"member\"\n            ? action.payload.memberSelection\n            : state.memberSelection,\n        tenBuckerSelection:\n          action.payload.player !== \"member\"\n            ? action.payload.tenBuckerSelection\n            : state.tenBuckerSelection\n      };\n\n    case BATCH_CARD_UPDATE:\n      return {\n        ...state,\n        // playerRecords: _.sortBy(action.payload.concat(state.playerRecords), \"name\"),\n        playerRecords: action.payload.concat(\n          state.playerRecords.filter(\n            player => player._id !== action.payload._id\n          )\n        )\n      };\n\n    case BATCH_CHART_UPDATE:\n      return {\n        ...state,\n        chartData: action.payload,\n        curatedChartData: action.payload\n      };\n\n    case BATCH_UNSELECT:\n      return {\n        ...state,\n        playerRecords: _.sortBy(\n          state.playerRecords.filter(\n            player => player.membershipStatus !== action.payload\n          ),\n          \"name\"\n        )\n      };\n\n    case TOGGLE_PLAYER_MODAL:\n      return {\n        ...state,\n        playerModal: action.payload.status,\n        playerModalData: action.payload.data\n      };\n    case BATCH_GAMES:\n      return {\n        ...state,\n        allGamesSelection:\n          action.payload === \"unselected_game\"\n            ? \"selected_game\"\n            : \"unselected_game\"\n      };\n\n    case UNSELECT_ALL_GAMES:\n      return {\n        ...state,\n        selectedGames: initialState.selectedGames,\n        unselectedGames: state.pastGamesFromAPI,\n        allGamesSelection: \"unselected_game\"\n      };\n    // Currently, the gameFilters and playerFilters cannot operate simultaneously. Therefore, playing with one should reset the other (to avoid confusion)\n    case FILTER_PLAYER_RECORDS_BY_TYPE:\n      return {\n        ...state,\n        gameFilters: initialState.gameFilters,\n        sortingOptions: initialState.sortingOptions,\n        playerFilters: action.payload.playerFilters,\n        // \"only\", means that the players have to match a certain condition (hence: \"===\"), \"but\", means that matching players should be filtered out (\"!==\")\n        filteredPlayerRecords:\n          action.payload.operator === \"only\"\n            ? _.sortBy(\n                state.playerRecords.filter(\n                  player =>\n                    player.preferredPosition === action.payload.playerType\n                ),\n                \"name\"\n              )\n            : _.sortBy(\n                state.playerRecords.filter(\n                  player =>\n                    player.preferredPosition !== action.payload.playerType\n                ),\n                \"name\"\n              )\n      };\n\n    case FILTER_PLAYER_RECORDS_BY_GAMES:\n      return {\n        ...state,\n        playerFilters: initialState.playerFilters,\n        sortingOptions: initialState.sortingOptions,\n        gameFilters: action.payload,\n        filteredPlayerRecords:\n          action.payload.operator === \"-\"\n            ? _.sortBy(\n                state.playerRecords.filter(\n                  player =>\n                    player.gamesPlayed <\n                    (state.selectedGames.length * action.payload.gamePercent) /\n                      100\n                ),\n                \"name\"\n              )\n            : _.sortBy(\n                state.playerRecords.filter(\n                  player =>\n                    player.gamesPlayed >\n                    (state.selectedGames.length * action.payload.gamePercent) /\n                      100\n                ),\n                \"name\"\n              )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { \n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE,\n    AUTHENTICATE\n} from \"../actions/types\"\n\nconst initialState = {\n    connectionState: \"Login\",\n    user: \n        {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n        },\n    tabs: [\"show_tab\",\"hide_tab\"], // this is used in the sign-in/sign-up user form\n    // superAdminPrivileges: false,\n    // adminPrivileges: false,\n    // draftPrivileges: false,\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_USER_FORM:\n        return {\n            ...state,\n            user: action.payload,\n        }\n\n        case ADD_NEW_USER:\n        return {\n            ...state,\n            user: initialState.user\n        }\n\n        case SIGN_MODE:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide_tab\"} else {return tab = \"show_tab\"}})\n        }\n\n        case AUTHENTICATE:\n        return {\n            ...state,\n            connectionState: action.payload.data.logged === true ? \"Logout\" : \"Login\"\n        }\n        \n        default: \n        return state;\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./gameReducer\"\nimport displayReducer from \"./displayReducer\"\nimport playerReducer from \"./playerReducer\"\nimport statsReducer from \"./statsReducer\"\nimport authenticateReducer from \"./authenticateReducer\"\n\nexport default combineReducers({\n    games: gameReducer,\n    display: displayReducer,\n    players: playerReducer,\n    stats: statsReducer,\n    authenticate: authenticateReducer,\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {}\nconst middleware = [thunk]\n\n// createStore is the function for creating the Redux store\n\n// since it crashes on Safari, and Chrome in incognito mode, we only install Redux DevTools on Chrome in Dev Mode\nif (window.navigator.userAgent.includes('Chrome') && window.location.origin === \"http://localhost:3000\") {\n    var store = createStore(\n        rootReducer, \n        initialState, \n        compose(\n            applyMiddleware(...middleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n            )\n        );\n} else {\n    store = createStore(\n        rootReducer, \n        initialState,\n        compose(\n            applyMiddleware(...middleware)\n            )\n        )\n}\n\n\nexport default store;","import React from \"react\";\n// React router\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// const Home = React.lazy(() => import(\"./pages/Home\"));\nimport Home from \"./pages/HomePage.js\";\nimport Draft from \"./pages/DraftPage.js\";\nimport Player from \"./pages/PlayerPage.js\";\nimport Stats from \"./pages/StatsPage.js\";\nimport Records from \"./pages/RecordsPage.js\";\nimport Login from \"./pages/LoginPage.js\";\nimport \"./styles/css/App.css\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store\";\n// Font-Awesome\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowAltCircleRight } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  faChevronUp,\n  faChevronDown,\n  faMinusCircle,\n  faTimesCircle,\n  faArrowCircleLeft,\n  faAngleRight,\n  faPlusCircle,\n  faTimes,\n  faPlus,\n  faCaretDown,\n  faCaretRight,\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n  faCircle,\n  faLock,\n  faUnlockAlt,\n  // faSquare,\n  faCheckSquare\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faChevronUp,\n  faChevronDown,\n  faMinusCircle,\n  faTimesCircle,\n  faArrowAltCircleRight,\n  faArrowCircleLeft,\n  faAngleRight,\n  faPlusCircle,\n  faMinusCircle,\n  faTimes,\n  faPlus,\n  faCaretDown,\n  faCaretRight,\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n  faCircle,\n  faLock,\n  faUnlockAlt,\n  /* faSquare,*/ faCheckSquare\n);\n// const Records = React.lazy(() => import('./pages/Records'));\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={Home} />\n          <Route path=\"/Draft\" component={Draft} />\n          <Route path=\"/Player\" component={Player} />\n          <Route path=\"/Stats\" component={Stats} />\n          <Route path=\"/Records\" component={Records} />\n          {/* <Route path=\"/Records\" render={() => (<Suspense fallback={<div>Loading...</div>}> <Records /></Suspense>)}/> */}\n          <Route path=\"/Login\" component={Login} />\n          <Route path=\"*\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/logo_sm.afca9f0c.jpeg\";"],"sourceRoot":""}