{"version":3,"sources":["components/NavBar.js","pages/HomePage.js","utils/API.js","js/actions/gameActions.js","js/actions/types.js","components/sessionStorage.js","components/DraftPageComp/GameList.js","js/actions/playerActions.js","components/DraftPageComp/Calendar.js","components/DraftPageComp/Drafter.js","components/DraftPageComp/SmallScreenDrafter.js","components/DraftPageComp/Picker.js","components/DraftPageComp/SmallScreenPicker.js","components/DraftPageComp/GameOptionsBottom.js","components/DraftPageComp/GameOptionsTop.js","components/Locker.js","pages/DraftPage.js","js/actions/displayActions.js","components/PlayerPageComp/Form.js","components/PlayerPageComp/MemberList.js","components/PlayerPageComp/TenBuckerList.js","pages/PlayerPage.js","js/actions/statsActions.js","components/StatsPageComp/PastGamesList.js","components/StatsPageComp/ScoreBoard.js","components/StatsPageComp/NoStatsBoard.js","pages/StatsPage.js","components/RecordsPageComp/DateRange.js","components/RecordsPageComp/DateSelector.js","components/RecordsPageComp/curateData.js","components/RecordsPageComp/GameSelector.js","components/RecordsPageComp/PlayerSelector.js","components/RecordsPageComp/PlayerStatsModal.js","components/RecordsPageComp/Showcase.js","components/RecordsPageComp/Filters.js","components/RecordsPageComp/DataChart.js","pages/RecordsPage.js","components/LoginForm.js","js/actions/authenticateActions.js","pages/LoginPage.js","js/reducers/gameReducer.js","js/reducers/displayReducer.js","js/reducers/playerReducer.js","js/reducers/statsReducer.js","js/reducers/authenticateReducer.js","js/reducers/index.js","js/store/index.js","App.js","registerServiceWorker.js","index.js","components/images/logo_sm.jpeg"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navDisplay","navItemsVisibility","handleScroll","bind","assertThisInitialized","setState","scroll","window","scrollY","navbar","document","querySelector","objectSpread","top","offsetTop","height","offsetHeight","addEventListener","status","_this2","react_default","a","createElement","className","href","onClick","changeStatus","src","SmallLogo","alt","type","Component","Home","components_NavBar","currentURL","location","origin","API","url","axios","get","id","date","players","post","game_date","delete","gameId","data","put","player","userData","mode","getGame","game","dispatch","then","res","Error","statusText","gameStats","noStatsMessage","darkPlayers","filter","gameInfo","team","whitePlayers","length","payload","editGameInfo","setMemberUnavailable","setTenBuckerUnavailable","gameData","playerID","setAvailable","addNonMember","newPlayer","existingPlayers","newRoster","_","sortBy","toConsumableArray","concat","setPick","available","picked","darkPickNum","obj","unpicked","whitePickNum","loadState","serializedState","sessionStorage","getItem","JSON","parse","err","GameList","getGameInfo","deleteGameFunc","deleteGame","fetchGames","privileges","console","log","dateHeader","upcomingGames","map","key","_id","index_es","icon","pastGames","connect","games","display","today","buttonMsg","upcoming_visibility","past_visibility","lockStatus","fetchPlayers","deletePlayer","editForm","moment","require","Calendar","createGame","handleChange","handleSubmit","apply","dateSelected","event","preventDefault","membersWithGameInfo","membershipStatus","member","name","playerLevel","preferredPosition","dateOfGame","format","addGame","onSubmit","react_datepicker_es","placeholderText","selected","onChange","value","members","Drafter","draftTeams","changeAvailability","playerStatus","draft","tenBuckerToAdd","setUnavailable","faArrowAltCircleRight","assignTeam","gameDate","unavailableMembers","makeAvailable","notPlayingNonMembers","addTenBuckerToDraft","size","draftMode","SmallScreenDrafter","draftedDark","draftedWhite","undrafted","indexOfPlayerToRemove","indexOf","splice","unavailable","forEach","index","indexOfPlayerToEdit","addPick","removePick","rankOneUp","rankOneDown","GameOptionsBottom","randomize","inputArray","outputArray","randomPlayer","Math","floor","random","push","filterTeams","arrayOfPlayerObjects","rosterTeam1","e","rosterTeam2","testPick","inputObject","rankedPlayers","picks","nameOfTeam","serpentineDraft","num","darkPicks","whitePicks","num1","num2","modulo","completeRounds","i","unavailablePlayers","allPlayers","alternateDraft","resetPlayers","reset","mixedRosters","output","reduce","levels","numOutput","keys","playersArray","entries","arrayOfUnavailablePlayers","currentMode","triggerDraftMode","triggerPickMode","visibility","bottom","toggleMode","pickButtons","left","resetTeams","right","autodraft","buttons","GameOptionsTop","action","showUnavailable","hideUnavailable","tenBuckers","arrayOfIds","playingNonMembers","newTenBuckers","showNonMembers","hideNonMembers","showingUnavailableMembers","showingNonPlayingTenBuckers","gameParticipants","allTenBuckers","notPlayingTenBuckers","all","new","Locker","lockGameInfo","unlockGameInfo","unlockGame","lockGame","lock_status","screenSize","innerWidth","Draft","changeLock","currentlyShowing","toggleGames","DraftPageComp_Calendar","DraftPageComp_GameList","toggleGamesFunc","showing","DraftPageComp_GameOptionsTop","main","DraftPageComp_Drafter","DraftPageComp_SmallScreenDrafter","Picker","SmallScreenPicker","DraftPageComp_GameOptionsBottom","components_Locker","currentState","Form","createPlayer","handleCancel","resetTabs","target","editedPlayer","defineProperty","updateField","assignedLevel","fullName","email","formMode","addPlayer","editPlayer","defaultValue","tab1","tab2","panel1","panel2","errors","message","MemberList","editMember","deleteMember","sendPlayerToEditForm","TenBuckerList","editTenBucker","deleteTenBucker","Player","currentStatus","tabIndex","parseInt","toggleTabStatus","toggleStatus","tab3","PlayerPageComp_MemberList","PlayerPageComp_TenBuckerList","panel3","PlayerPageComp_Form","tabs","panels","getGamesForRecords","arrayOfTenBuckerIDs","array","toggleViews","element","dates","sort","chart","batchChartUpdate","newData","updatePlayers","togglePlayerModal","newStatus","PastGameList","getGamesAndTransform","visibleBefore","gameVisibility","slice","visibleAfter","newArray","setVisibility","object","values","_this3","_ref","_ref2","slicedToArray","renderGames","_this4","reverse","year","toggleVisibility","renderMonth","renderYear","reducedGames","stats","monthify","string","yearString","substring","monthString","difYears","arrayOfObjects","remapped","difMonths","beautifyGames","years","ScoreBoard","editScore","currentValue","goalUpdate","scoreUpdate","goals_dark","goals_white","win","playerUpdate","goals","assistUpdate","assists","logStat","NoStatsBoard","Stats","PastGamesList","StatsPageComp_NoStatsBoard","StatsPageComp_ScoreBoard","DateRange","handleChangeStart","handleChangeEnd","startDate","endDate","selectDateRange","datePickers","selectsStart","isClearable","selectsEnd","start","end","from","to","DateSelector","RecordsPageComp_DateRange","allGames","gamesForRecords","createCardsArray","arrayOfPlayers","arrayOfGames","transformedArrayForCards","broomballer","gamesPlayed","playerReduced","wins","losses","ties","gamePlayedFromArray","winsFromArray","lossesFromArray","tiesFromArray","winPercent","lossPercent","tiePercent","goalsFromArray","b","assistsFromArray","gpg","parseFloat","apg","Number","isInteger","toFixed","playerWithoutRecord","loss","tie","createChartData","arrayOfCards","labels","goalsArray","assistsArray","gamesPlayedArray","winPercentArray","lossPercentArray","tiePercentArray","gpgArray","apgArray","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barThickness","options","GameSelector","unselectGame","selectedGames","match","cardsArray","selectedPlayers","newObject","markAsSelected","selectedPlayersNum","selectAllGames","gameSelection","unselectAllGames","gamesSelected","includes","selectGame","unselectedGames","gamesUnselected","listOfGames","allGamesSelection","chartData","PlayerSelector","unselectPlayer","removePlayerStatObject","selectedGamesNum","addBatchChartData","toggleSelectAll","allMembersAndSelectedTenBuckers","selectAndTransform","batchUnselect","allTenBuckersAndSelectedMembers","arrayOfTenBuckersID","selectPlayer","listOfPlayers","memberSelection","selectAllPlayers","tenBuckerSelection","unselectedPlayers","addPlayerStatObject","update","batchCardUpdate","PlayerStatsModal","reactstrap_es","isOpen","playerModal","toggle","centered","playerModalData","react_chartjs_2_es","responsive","maintainAspectRatio","Showcase","tab","ascArrow","toggleSortOptions","playerName","playerStats","gamesInChronoOrder","playerInfo","fill","lineTension","sortOptionsDisplay","numOfRecords","sortingOptions","azTab","toggleSort","alphaAsc","alphaDesc","gamesTab","gamesAsc","gamesDesc","winsTab","winsAsc","winsDesc","lossesTab","lossesAsc","lossesDesc","tiesTab","tiesAsc","tiesDesc","goalsTab","goalsAsc","goalsDesc","gpgTab","gpgAsc","gpgDesc","assistsTab","assistsAsc","assistsDesc","apgTab","apgAsc","apgDesc","playerRecords","positionVisibility","showPlayerStats","RecordsPageComp_PlayerStatsModal","filteredPlayerRecords","forwardSelection","selectors","defenseSelection","goalieSelection","Filters","setting","filterPlayerRecordsByType","offense","defense","goalie","_this$props$filterPla","filterPlayerRecordsByGames","gamePercent","operator","playerSelection","faSquare","playerFilters","gameFilters","playerType","DataChart","chartDisplay","curatedChartData","chartingOptions","Records","RecordsPageComp_DateSelector","RecordsPageComp_GameSelector","RecordsPageComp_PlayerSelector","RecordsPageComp_DataChart","RecordsPageComp_Showcase","RecordsPageComp_Filters","LoginForm","editedUser","user","updateUserForm","in","username","password","authenticateUser","newUser","privilege","createNewUser","up","authenticate","method","errmsg","stringify","setItem","saveState","SuperAdmin","Login","components_LoginForm","initialState","pastGamesFromAPI","combineReducers","arguments","undefined","deletedPlayer","panel","dateRange","middleware","thunk","navigator","userAgent","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","library","add","faChevronUp","faChevronDown","faMinusCircle","faTimesCircle","faArrowCircleLeft","faAngleRight","faPlusCircle","faTimes","faPlus","faCaretDown","faCaretRight","faLongArrowAltUp","faLongArrowAltDown","faCircle","faLock","faUnlockAlt","faCheckSquare","App","es","BrowserRouter","Switch","Route","exact","path","render","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App","getElementById","URL","process","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3817d956.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport SmallLogo from \"../components/images/logo_sm.jpeg\"\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            navDisplay: \"noShowMenu\",\n            navItemsVisibility: \"hidden\",\n        }\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n    handleScroll() {\n        this.setState({scroll: window.scrollY})\n    }\n    componentDidMount() {\n        const navbar = document.querySelector(\"nav\")\n        this.setState({...this.state, top: navbar.offsetTop, height: navbar.offsetHeight})\n        window.addEventListener('scroll', this.handleScroll)\n    }\n\n    changeStatus(status) {\n        this.setState({ navDisplay: status === \"noShowMenu\" ? \"showMenu\" : \"noShowMenu\", navItemsVisibility: status === \"noShowMenu\" ? \"visible\" : \"hidden\" })\n    }\n\n    render() {\n        return (\n            \n            <nav className={this.state.scroll > (this.state.height + 1)   ? this.state.navDisplay + \" stickyNav\" : this.state.navDisplay + \" nonStickyNav\"}>\n                <div className={this.state.navDisplay + \" darkNavBar\"}>\n                    <h4 className={this.state.navItemsVisibility + \" nav_title\"}>Summit Broomball</h4>\n                    <div className={this.state.navItemsVisibility + \" navbar-nav\"}>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/\">Home</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Player\">Players</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Draft\">Draft</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Stats\">Stats</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Records\">Records</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Login\">Login</a>\n                    </div>\n                </div>\n\n                <div className=\"navbar bg\">\n                    {/* <button className=\"\" > */}\n                        <img onClick={() => this.changeStatus(this.state.navDisplay)} className=\"navbar-toggler toggler_img\" src={SmallLogo} alt=\"logo\" type=\"button\" />\n                    {/* </button> */}\n                </div>\n            </nav>\n            )\n        }\n}\n\n\nexport default NavBar\n","import React from \"react\";\nimport NavBar from \"../components/NavBar.js\";\n\nconst Home = () => (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Summit Broomball</h1>\n            <div className=\"instructions_div\">\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Create, Manage, and Edit Players:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"/Player\"><button className=\"btn contrast_color menu_button\">Players</button></a>\n                    </div>\n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Schedule Games and Draft Teams:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Draft\"><button className=\"btn contrast_color menu_button\">Draft</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Enter Stats for Games:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Stats\"><button className=\"btn contrast_color menu_button\" >Stats</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instruction instructions_text\">Visualize Recorded Stats:</p>\n                    </div> \n                    <div className=\"instruction\">\n                        <a href=\"./Records\"><button className=\"btn contrast_color menu_button\" >Records</button></a>\n                    </div>\n                    \n                </div>\n            </div>\n                \n                \n                <div className=\"container\">\n                    <div className=\"welcome_text\">\n                        <p className=\"text_center\">\n                        Click on the logo at any time to switch page.\n                        </p>\n                    </div>\n                </div>\n            </div>        \n        </div>\n\n)\nexport default Home;\n","import axios from \"axios\";\n// Transforming the current url in order to query the public API locally \n// (Express port 3001 changed to React port 3000 where the API exists).\n// Once deployed, it should reset to the domain name used.\nlet currentURL = window.location.origin\nif (currentURL === \"http://localhost:3000\") {\n    currentURL = \"http://localhost:8080\"\n    } \n// For Passport.js: \n/* Server sends SetCookie header then the browser handle to store it, and then the cookie is sent with requests made to \nthe same server inside a Cookie HTTP header.\nhttps://stackoverflow.com/questions/45536831/node-express-passport-req-user-undefined-but-works-in-postman\n\nconst config = {\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    }\n}\n*/\nexport default {\n    getGames: () => {       \n        const url = currentURL + \"/api/game/\"\n        return axios.get(url)\n        },\n    getGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.get(url)\n    },\n    addGame: (date, players) => {\n        const url = currentURL + \"/api/game/\"\n        return axios.post(url, { game_date: date, players: players})\n        },\n    deleteGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.delete(url)\n        },\n    editGame: (gameId, data) => {\n        const url = currentURL + \"/api/game/\" + gameId\n        return axios.put(url, { data })\n        },\n    getPlayers: () => {\n        const url = currentURL + \"/api/player/\"\n        return axios.get(url)\n        },\n    addPlayer: (player) => {\n        const url = currentURL + \"/api/player/\"\n        return axios.post(url, { player })\n        },\n    editPlayer: (id, data) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.put(url, { data })\n        },\n    deletePlayer: (id) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.delete(url)\n    },\n    addNewUser: (userData) => {\n        const url = currentURL + \"/users\"\n        return axios.post(url, {userData})\n    },\n    authenticateUser: (mode, userData) => {\n        const url = currentURL + \"/login\"\n        if (mode === \"local\") {\n            return axios.post(url, userData)\n        }\n        }\n    }\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    GET_GAME, \n    DELETE_GAME, \n    EDIT_GAME_INFO, \n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE, \n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS, \n    HIDE_NON_MEMBERS,\n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO, \n    UNLOCK_GAME_INFO,\n    RESET,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n    \n} from './types';\n\nimport API from \"../../utils/API\"\nimport _ from \"underscore\"\n\nexport const fetchGames = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_GAMES,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deleteGame = (id) => dispatch => {\n    API.deleteGame(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_GAME,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addGame = (date, players, player, members) => dispatch => {\n    API.addGame(date, players, player, members)\n            .then(res => {\n                if(res.status !== 200) {\n                    throw new Error(res.statusText)\n                    }\n                else {\n                    let newGame = res.data\n                    // console.log(\"res.data: \", res.data)\n                    if(newGame.name){\n                        console.log(\"Error Message: the app encountered an error creating this game in the database\")\n                    }\n                    else {\n                        console.log(\"Game successfully added to db\")\n                        dispatch({\n                            type: NEW_GAME,\n                            payload: res.data\n                        })\n                        }\n                    }\n            })\n        }\n\nexport const getGame = (game) => dispatch => {\n    API.getGame(game)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                /* We need to know if drafting has happened for the Stats page to display properly */\n                let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\")\n                let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\")\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }\n\n                dispatch({\n                    type: GET_GAME,\n                    payload: {\n                        game: res.data,\n                        gameStats: gameStats,\n                        noStatsMessage: noStatsMessage\n                    }\n                })\n            }\n        })\n}\n\nexport const editGameInfo = (game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get full game data from the API's response\n            /*\n            // Then we need to check if the locker can be displayed\n            let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\" && player.gameInfo.available === true)\n            let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\" && player.gameInfo.available === true)\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }*/\n            \n            dispatch({\n                type: EDIT_GAME_INFO,\n                payload: {\n                    game: res.data,\n                    // gameStats: gameStats,\n                    // noStatsMessage: noStatsMessage\n                    }\n            })\n        }\n    })\n}\n\nexport const setMemberUnavailable = (game, data) => dispatch => {\n        API.editGame(game, data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_MEMBER_UNAVAILABLE,\n                    payload: res.data\n                    })\n                }\n            })\n    }\nexport const setTenBuckerUnavailable = (gameId, gameData, playerID) => dispatch => {\n    API.editGame(gameId, gameData)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_TEN_BUCKER_UNAVAILABLE,\n                    payload: {\n                        gameData: res.data,\n                        player: playerID\n                        }\n                    })\n                }\n            })\n        }\nexport const setAvailable = (game, data) => dispatch => {\n    // console.log(\"data.player: \", data.player, \"\\n(is the id of player to add)\")\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get the game info\n            // console.log(\"res.data: \", res.data)\n            dispatch({\n                type: MAKE_MEMBER_AVAILABLE,\n                payload: {\n                    player: data.player,\n                    game: res.data\n                    }\n            })\n        }\n    })\n}\n\n\nexport const showUnavailable = () => dispatch => {\n    dispatch({\n        type: SHOW_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const hideUnavailable = () => dispatch => {\n    dispatch({\n        type: HIDE_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const showNonMembers = (allTenBuckers, notPlayingTenBuckers) => dispatch => {\n    dispatch({\n        type: SHOW_NON_MEMBERS,\n        payload: {\n            all: allTenBuckers,\n            new: notPlayingTenBuckers\n                }\n    })\n}\n\nexport const hideNonMembers = () => dispatch => {\n    dispatch({\n        type: HIDE_NON_MEMBERS\n    })\n}\n// Adds a Ten Bucker to the list of players\nexport const addNonMember = (game, newPlayer, existingPlayers) => dispatch => {\n    let newRoster = _.sortBy([...existingPlayers, newPlayer], \"name\")\n    API.editGame(game, {players: newRoster})\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NON_MEMBER,\n                payload: {players: res.data, player: newPlayer}\n            })\n        }\n    })\n}\n\nexport const lockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: true}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: LOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const unlockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: false}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: UNLOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const triggerPickMode = (team) => dispatch => {\n    // console.log(\"team in triggerPickMode from gameActions.js: \", team)\n    switch (team) {\n        case \"Dark\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        left: \"Exit\",\n                        right: \"Set White Picks\"\n                        }\n                    }\n                })\n                break;\n\n        case \"White\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        right: \"Exit\",\n                        left: \"Set Dark Picks\"\n                        },\n                        // set: \"player.gameInfo.whitePickNum\"\n                    }\n                })\n                break;\n        default:\n            console.log(\"There was an error in the dispatcher\")\n    }\n    }\n\nexport const triggerDraftMode = () => dispatch => {\n    dispatch({\n        type: TRIGGER_DRAFT_MODE\n        })\n}\n\nexport const setPick = (team, game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data.players: \", res.data.players)\n            let available = res.data.players.filter(player => player.gameInfo.available === true)\n            switch (team) {\n                case \"Dark\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                case \"White\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                default:\n                return;\n                }\n            }\n        })\n    } \n\nexport const reset = (game, data) => dispatch => {\n    // console.log('Data received in reset gameActions.js: ', data)\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data in the reset gameAction.js function: \", res.data)\n            dispatch({\n                type: RESET,\n                payload: res.data\n            })\n            }\n    })\n}","export const FETCH_GAMES = 'FETCH_GAMES'\nexport const NEW_GAME = 'NEW_GAME'\nexport const GET_GAME = 'GET_GAME'\nexport const DELETE_GAME = 'DELETE_GAME'\n\nexport const GET_GAMES_AND_TRANSFORM = 'GET_GAMES_AND_TRANSFORM'\nexport const GET_GAMES_IN_TIMESPAN = 'GET_GAMES_IN_TIMESPAN'\n\nexport const EDIT_GAME_INFO = 'EDIT_GAME_INFO'\nexport const LOCK_GAME_INFO = 'LOCK_GAME_INFO'\nexport const UNLOCK_GAME_INFO = 'UNLOCK_GAME_INFO'\nexport const RESET = 'RESET'\n\nexport const SHOW_UNAVAILABLE_MEMBERS = 'SHOW_UNAVAILABLE_MEMBERS'\nexport const HIDE_UNAVAILABLE_MEMBERS = 'HIDE_UNAVAILABLE_MEMBERS'\nexport const MAKE_MEMBER_AVAILABLE = 'MAKE_MEMBER_AVAILABLE'\nexport const ADD_NON_MEMBER = 'ADD_NON_MEMBER'\nexport const MAKE_MEMBER_UNAVAILABLE = 'MAKE_MEMBER_UNAVAILABLE'\nexport const MAKE_TEN_BUCKER_UNAVAILABLE = 'MAKE_TEN_BUCKER_UNAVAILABLE'\nexport const SHOW_NON_MEMBERS = 'SHOW_NON_MEMBERS'\nexport const HIDE_NON_MEMBERS = 'HIDE_NON_MEMBERS'\n\nexport const SHOW_FUTURE = \"SHOW_FUTURE\"\nexport const SHOW_PAST = \"SHOW_PAST\"\n\nexport const SHOW_TAB = \"SHOW_TAB\"\nexport const RESET_TABS = \"RESET_TABS\"\n\nexport const EDIT_FORM = \"EDIT_FORM\"\nexport const UPDATE_FIELD = \"UPDATE_FIELD\"\n\nexport const FETCH_PLAYERS = \"FETCH_PLAYERS\"\nexport const DELETE_PLAYER = \"DELETE_PLAYER\"\nexport const ADD_PLAYER = \"ADD_PLAYER\"\nexport const EDIT_PLAYER = \"EDIT_PLAYER\"\n\nexport const CREATE_GAME_ROSTER = \"CREATE_GAME_ROSTER\"\n\nexport const TRIGGER_PICK_MODE = \"TRIGGER_PICK_MODE\"\nexport const TRIGGER_DRAFT_MODE = \"TRIGGER_DRAFT_MODE\"\nexport const SET_PICK = 'SET_PICK'\n\nexport const SET_DATE_RANGE = \"SET_DATE_RANGE\"\n\nexport const SHOW_GAMES_TO_STATS = \"SHOW_GAMES_TO_STATS\"\nexport const SET_YEARS_VISIBILITIES = \"SET_YEARS_VISIBILITIES\"\nexport const ADD_GAME_TO_SELECTED = \"ADD_GAME_TO_SELECTED\"\nexport const REMOVE_GAME_FROM_SELECTED = \"REMOVE_GAME_FROM_SELECTED\"\nexport const ADD_PLAYER_TO_SELECTED = \"ADD_PLAYER_TO_SELECTED\"\nexport const REMOVE_PLAYER_FROM_SELECTED = \"REMOVE_PLAYER_FROM_SELECTED\"\nexport const TOGGLE_RECORDS_VIEWS = \"TOGGLE_RECORDS_VIEWS\"\n\nexport const ADD_PLAYER_RECORDS = \"ADD_PLAYER_RECORDS\"\nexport const REMOVE_PLAYER_RECORDS = \"REMOVE_PLAYER_RECORDS\"\nexport const REPLACE_PLAYERS_RECORDS = \"REPLACE_PLAYERS_RECORDS\"\n\nexport const SORT_AZ_ASC = \"SORT_AZ_ASC\"\nexport const SORT_AZ_DESC = \"SORT_AZ_DESC\"\nexport const SORT_GAMES_ASC = \"SORT_GAMES_ASC\"\nexport const SORT_GAMES_DESC = \"SORT_GAMES_DESC\"\nexport const SORT_WINS_ASC = \"SORT_WINS_ASC\"\nexport const SORT_WINS_DESC = \"SORT_WINS_DESC\"\nexport const SORT_LOSSES_ASC = \"SORT_LOSSES_ASC\"\nexport const SORT_LOSSES_DESC = \"SORT_LOSSES_DESC\"\nexport const SORT_TIES_ASC = \"SORT_TIES_ASC\"\nexport const SORT_TIES_DESC = \"SORT_TIES_DESC\"\nexport const SORT_GOALS_ASC = \"SORT_GOALS_ASC\"\nexport const SORT_GOALS_DESC = \"SORT_GOALS_DESC\"\nexport const SORT_GPG_ASC = \"SORT_GPG_ASC\"\nexport const SORT_GPG_DESC = \"SORT_GPG_DESC\"\nexport const SORT_ASSISTS_ASC = \"SORT_ASSISTS_ASC\"\nexport const SORT_ASSISTS_DESC = \"SORT_ASSISTS_DESC\"\nexport const SORT_APG_ASC = \"SORT_APG_ASC\"\nexport const SORT_APG_DESC = \"SORT_APG_DESC\"\n\n// export const SET_CHART_DATA = \"SET_CHART_DATA\"\nexport const TOGGLE_SELECT_ALL = \"TOGGLE_SELECT_ALL\"\n// export const TOGGLE_POSITIONS = \"TOGGLE_POSITIONS\"\n\nexport const BATCH_CARD_UPDATE = \"BATCH_CARD_UPDATE\"\nexport const BATCH_CHART_UPDATE = \"BATCH_CHART_UPDATE\"\nexport const BATCH_UNSELECT = \"BATCH_UNSELECT\"\nexport const BATCH_GAMES = \"BATCH_GAMES\"\nexport const UNSELECT_ALL_GAMES = \"UNSELECT_ALL_GAMES\"\n\nexport const TOGGLE_PLAYER_MODAL = \"TOGGLE_PLAYER_MODAL\"\nexport const FILTER_PLAYER_RECORDS_BY_TYPE = \"FILTER_PLAYER_RECORDS_BY_TYPE\"\nexport const FILTER_PLAYER_RECORDS_BY_GAMES = \"FILTER_PLAYER_RECORDS_BY_GAMES\"\n\n// USERS\nexport const UPDATE_USER_FORM = \"UPDATE_USER_FORM\"\nexport const ADD_NEW_USER = \"ADD_NEW_USER\"\nexport const SIGN_MODE = \"SIGN_MODE\"\n// export const SETTING_USER_PRIVILEGES = \"SETTING_USER_PRIVILEGES\"","/* https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage */\n\nexport const loadState = () => {\n    try {\n        const serializedState = sessionStorage.getItem('state');\n        if (serializedState === null ) {\n            return undefined;\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        return undefined\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem(\"state\", serializedState);\n    } catch (err) {\n        console.log(err)\n    }\n}","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchGames } from '../../js/actions/gameActions'\nimport { getGame } from '../../js/actions/gameActions'\nimport { deleteGame } from '../../js/actions/gameActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass GameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleteGame: true\n        }\n    }\n    componentDidMount() {\n        this.props.fetchGames();\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    /* \n    componentDidUpdate() {\n        console.log(this.state)\n    } \n    */\n    \n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n    }\n\n    deleteGameFunc = (gameId) => {\n        this.props.deleteGame(gameId);\n    }\n\n    render() {\n        return (\n            <div className=\"show_games\">\n            <h2 className=\"h2_main\">{this.props.dateHeader} Games</h2>\n                <div className=\"list-management\">\n                    {/* showing the upcoming games when mode has been  */}\n                    {this.props.dateHeader === \"Upcoming\" ? (\n                        // need case for when there is no game scheduled\n                        this.props.upcomingGames.length > 0 ?\n                        this.props.upcomingGames\n                            .map(game =>\n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color \" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n                    ) : \n                    (\n                        this.props.pastGames.length > 0 ?\n                        this.props.pastGames\n                            .map(game => \n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color\" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n\n                    )}\n\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    games: state.games.games,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    upcoming_visibility: state.display.upcoming_visibility,\n    past_visibility: state.display.past_visibility,\n    lockStatus: state.games.lockStatus,\n    upcomingGames: state.games.upcomingGames,\n    pastGames: state.games.pastGames\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { fetchGames, getGame, deleteGame }) (GameList)\n","import { FETCH_PLAYERS, EDIT_PLAYER, DELETE_PLAYER, ADD_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from './types';\nimport API from \"../../utils/API\"\n\nexport const fetchPlayers = () => dispatch => {\n    API.getPlayers()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_PLAYERS,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deletePlayer = (id) => dispatch => {\n    API.deletePlayer(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addPlayer = (data) => dispatch => {\n    console.log(\"data received: \", data)\n    API.addPlayer(data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n                }\n            else if (res.data.errors) {\n                console.log(res.data.message)\n            }\n            else {\n                let newPlayer = res.data\n                if(newPlayer.name !== \"MongoError\")\n                    {\n                    console.log(\"Player successfully added to db\")\n                    dispatch({\n                        type: ADD_PLAYER,\n                        payload: res.data\n                    })\n\n                    }\n                else {\n                    console.log(\"Error Message: the app encounted an error creating this player in the database\")\n                    }\n                }\n            })\n        }\n\nexport const editPlayer = (id, data) => dispatch => {\n    API.editPlayer(id, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: EDIT_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n        dispatch({\n            type: SHOW_TAB,\n            payload: id\n        })\n    }\n\nexport const resetTabs = (id) => dispatch => {\n    dispatch({\n        type: RESET_TABS\n    })\n}\n\nexport const editForm = (player) => dispatch => {\n    dispatch({\n        type: EDIT_FORM,\n        payload: player\n        })\n    }\n    \nexport const updateField = (player) => dispatch => {\n    dispatch({\n        type: UPDATE_FIELD,\n        payload: player \n        })\n    }\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addGame } from '../../js/actions/gameActions'\nimport { fetchPlayers } from '../../js/actions/playerActions'\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { loadState } from \"../sessionStorage\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n\nconst moment = require(\"moment\");\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: \"\",\n            createGame: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        \n            this.setState(...this.state.date, privileges)\n        \n        }\n\n    handleChange(date) {\n        this.setState({\n            dateSelected: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let members = this.props.players.filter((player) => player.membershipStatus === \"Member\")\n        let membersWithGameInfo = members.map((member) => {return {\n            membershipStatus: member.membershipStatus,\n            _id: member._id,\n            name: member.name,\n            playerLevel: member.playerLevel,\n            preferredPosition: member.preferredPosition,\n            gameInfo: this.props.gameInfo\n        }})\n        let dateOfGame = moment(this.state.dateSelected).format(\"YYYY-MM-DD\")\n        this.props.addGame(dateOfGame, membersWithGameInfo)\n    }\n\n\n    render() {\n        return (\n            <div id=\"schedule_game\">\n                <div>\n                    <h2 className=\"h2_main\">Schedule a game</h2>\n                </div>\n\n                <div>\n                {this.state.createGame === true \n                    ? <form className=\"game_form\" onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                            <div className=\"calendar_component\">\n                                <DatePicker \n                                    placeholderText=\"MM DD YYYY\"\n                                    selected={this.state.dateSelected}\n                                    onChange={this.handleChange}\n                                    value={this.state.value}\n                                    />\n                            </div>\n                            \n                                <div className=\"submit_button\">\n                                    <button id=\"date_submit\" className=\"contrast_color content_button\" name=\"submit\" type=\"submit\" >Submit</button>\n                                </div> \n                            \n                        </div>\n                        </form> \n                    : <p className=\"no_game\">Login as an admin to schedule games and create team line-ups!</p> }\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    game: state.games.game,\n    players: state.players.players,\n    gameInfo: state.games.gameInfo\n    })\n\n\nexport default connect(mapStateToProps, { addGame, fetchPlayers }) (Calendar)\n    ","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { addNonMember } from '../../js/actions/gameActions'\nimport { setMemberUnavailable } from '../../js/actions/gameActions'\nimport { setTenBuckerUnavailable } from '../../js/actions/gameActions'\nimport { setAvailable } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    setUnavailable(playerID, playerStatus) {\n        let gameId = this.props.draft._id\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (playerStatus === \"Member\"){\n            this.props.setMemberUnavailable(gameId, {player: playerID, gameInfo: {available: false, team: \"N/A\"}})\n            }\n        else {\n            let gameId = this.props.draft._id\n            let gameData = {...this.props.draft, players: this.props.draft.players.filter(player => player._id !== playerID)}\n            this.props.setTenBuckerUnavailable(gameId, gameData, playerID)\n            }    \n        }\n    }\n\n    makeAvailable(playerID) {\n        let gameId = this.props.draft._id;\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            this.props.setAvailable(gameId, {player: playerID, gameInfo: {available: true, team: \"N/A\"}})    \n            }\n    }\n\n    assignTeam(playerID, team){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {team: team}})\n            }\n    }\n\n    addTenBuckerToDraft(player){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            let tenBuckerToAdd = {\n                membershipStatus: player.membershipStatus,\n                _id: player._id,\n                name: player.name,\n                playerLevel: player.playerLevel,\n                preferredPosition: player.preferredPosition,\n                gameInfo: this.props.gameInfo\n                }   \n            this.props.addNonMember(gameId, tenBuckerToAdd, this.props.draft.players)\n            }\n\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"drafter_mode\">\n                    <div className=\"col_no_bootstrap dark_draft_players\">\n                        <h1 className=\"h1_main col_header\"><br/>Dark</h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                                .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                .map(player => {\n                                    return (\n                                        <div className=\"player_div leaning_right_div\" key={player._id}>\n                                            <button className=\"player_button leaning_right_color\">{player.name}</button>\n                                            {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                        </div>\n                                        )\n                                        })\n                                ) : (<p>Data has not loaded yet</p>)\n                            }\n                    </div>\n                    <div className=\"col_no_bootstrap undraft_players\">\n                    <h1 className=\"h1_alternate col_header game_date\">{this.props.gameDate}<br/><br/></h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"N/A\")\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div leaning_center_div\" key={player._id}>\n                                        {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"Dark\")} /> : null }\n                                        <button className=\"player_button plain_color\">{player.name}</button>\n                                        {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                        {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"White\")} /> : null }\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Data has not loaded yet</p>)\n                        }\n\n                        {this.props.unavailableMembers ? (this.props.unavailableMembers\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div\" key={player._id}>   \n                                        <button className=\"player_button unavailable\" onClick={() => this.state.changeAvailability === true ? this.makeAvailable(player._id) : null } >{player.name}</button>\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Unable to retrieve unavailable Members</p>)\n                        }\n\n                        {this.props.notPlayingNonMembers ? (this.props.notPlayingNonMembers\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div\" key={player._id}>   \n                                        <button className=\"player_button negative_color\" onClick={() => this.state.changeAvailability === true ? this.addTenBuckerToDraft(player) : null }>{player.name}</button>\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Unable to retrieve Ten Buckers</p>)\n                        }\n\n\n                    </div>\n                    <div className=\"col_no_bootstrap white_drafted_players\">\n                    \n                    <h1 className=\"h1_main col_header\"><br/>White</h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                                    .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                    .map(player => {\n                                        return (\n                                            <div className=\"player_div leaning_left_div\" key={player._id}>\n                                                {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} size=\"2x\" onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                                <button className={\"player_button leaning_left_color \"}>{player.name}</button>\n                                                {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            </div>\n                                            )\n                                            })\n                                    ) : (<p>Data has not loaded yet</p>)\n                                }\n                    </div>\n                </div>\n            </main>\n\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, addNonMember, setMemberUnavailable, setTenBuckerUnavailable, setAvailable, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { addNonMember } from '../../js/actions/gameActions'\nimport { setMemberUnavailable } from '../../js/actions/gameActions'\nimport { setTenBuckerUnavailable } from '../../js/actions/gameActions'\nimport { setAvailable } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { loadState } from \"../sessionStorage\"\n\nclass SmallScreenDrafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n            draftedDark: 0,\n            draftedWhite: 0,\n            undrafted: 0\n            \n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    setUnavailable(playerID, playerStatus) {\n        let gameId = this.props.draft._id\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (playerStatus === \"Member\"){\n            this.props.setMemberUnavailable(gameId, {player: playerID, gameInfo: {available: false, team: \"N/A\"}})\n            }\n        else {\n            let gameId = this.props.draft._id\n            let gameData = {...this.props.draft, players: this.props.draft.players.filter(player => player._id !== playerID)}\n            this.props.setTenBuckerUnavailable(gameId, gameData, playerID)\n            }    \n        }\n    }\n\n    makeAvailable(playerID) {\n        let gameId = this.props.draft._id;\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            this.props.setAvailable(gameId, {player: playerID, gameInfo: {available: true, team: \"N/A\"}})    \n            }\n    }\n\n    assignTeam(playerID, team){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {team: team}})\n            }\n    }\n\n    addTenBuckerToDraft(player){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            let tenBuckerToAdd = {\n                membershipStatus: player.membershipStatus,\n                _id: player._id,\n                name: player.name,\n                playerLevel: player.playerLevel,\n                preferredPosition: player.preferredPosition,\n                gameInfo: this.props.gameInfo\n                }   \n            this.props.addNonMember(gameId, tenBuckerToAdd, this.props.draft.players)\n            }\n\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"col_no_bootstrap undraft_players\">\n                    <h1 className=\"h1_alternate col_header game_date\">{this.props.gameDate}</h1>\n                    {this.props.undrafted !== 0 ? \n                    <div className=\"small_screen_team_names_header\">\n                        <div className=\"sstnh sstnhd\">\n                            <h1 className=\"h1_main col_header\"> <FontAwesomeIcon icon=\"arrow-circle-left\" className=\"arrows \"/> Dark</h1>\n                        </div>\n                        <div className=\"sstnh sstnhw\">\n                            <h1 className=\"h1_main col_header\">White <FontAwesomeIcon icon={faArrowAltCircleRight} className=\"arrows \" /></h1> \n                        </div>\n                    </div> : null }\n\n                    {this.props.draft.players ? (this.props.draft.players\n                        .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"N/A\")\n                        .map(player => {\n                            return (\n                                <div className=\"player_div leaning_center_div\" key={player._id}>\n                                    {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"Dark\")} /> : null }\n                                    <button className=\"content_button player_button plain_color\">{player.name}</button>\n                                    {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                    {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"White\")} /> : null }\n                                </div>\n                                )\n                                })\n                        ) : (<p>Data has not loaded yet</p>)\n                    }\n\n                    {this.props.unavailableMembers ? (this.props.unavailableMembers\n                        .map(player => {\n                            return (\n                                <div className=\"player_div\" key={player._id}>   \n                                    <button className=\"content_button player_button unavailable\" onClick={() => this.state.changeAvailability === true ? this.makeAvailable(player._id) : null } >{player.name}</button>\n                                </div>\n                                )\n                                })\n                        ) : (<p>Unable to retrieve unavailable Members</p>)\n                    }\n\n                    {this.props.notPlayingNonMembers ? (this.props.notPlayingNonMembers\n                        .map(player => {\n                            return (\n                                <div className=\"player_div\" key={player._id}>   \n                                    <button className=\"content_button player_button negative_color\" onClick={() => this.state.changeAvailability === true ? this.addTenBuckerToDraft(player) : null }>{player.name}</button>\n                                </div>\n                                )\n                                })\n                        ) : (<p>Unable to retrieve Ten Buckers</p>)\n                    }\n                </div>\n                <div className=\"small_teams\">\n                    <div className=\"col_no_bootstrap dark_draft_players\">\n                    {this.props.draftedDark || this.props.draftedWhite !== 0 ? <h1 className=\"h1_alternate col_header\"><br/>Dark</h1> : null}\n                        <div>\n                            {this.props.draft.players ? (this.props.draft.players\n                                    .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                    .map(player => {\n                                        return (\n                                            <div className=\"player_div\" key={player._id}>\n                                                {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"small_screen_arrows sm_dark \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                                <button className=\"content_button player_button black_small_screen\">{player.name}</button>\n                                                {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            </div>\n                                            )\n                                            })\n                                    ) : (<p>Data has not loaded yet</p>)\n                                }\n                        </div>\n                    </div>\n                    \n                    <div className=\"col_no_bootstrap white_draft_players\">\n                        {this.props.draftedDark || this.props.draftedWhite !== 0 ? <h1 className=\"h1_alternate col_header\"><br/>White</h1> : null}\n                        <div>\n                        {this.props.draft.players ? (this.props.draft.players\n                                .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                .map(player => {\n                                    return (\n                                        <div className=\"player_div\" key={player._id}>\n                                            <button className=\"content_button player_button white_small_screen\">{player.name}</button>\n                                            {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"small_screen_arrows sm_white \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                        </div>\n                                        )\n                                        })\n                                ) : (<p>Data has not loaded yet</p>)\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </main>\n\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    draftedDark: state.games.draft.players ? state.games.draft.players.filter(player => player.gameInfo.team === \"Dark\").length : 0,\n    draftedWhite: state.games.draft.players ? state.games.draft.players.filter(player => player.gameInfo.team === \"White\").length : 0,\n    undrafted: state.games.draft.players ? state.games.draft.players.filter(player => player.gameInfo.team === \"N/A\" && player.gameInfo.available === true).length : 0,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, addNonMember, setMemberUnavailable, setTenBuckerUnavailable, setAvailable }) (SmallScreenDrafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    addPick(team, playerID){\n        let gameId = this.props.draft._id\n        switch (team){\n            case \"Dark\":\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {player: playerID, gameInfo: {darkPickNum: this.props.picked.length + 1}})\n            break;\n\n            case \"White\":\n            this.props.setPick(\"White\", gameId, {player: playerID, gameInfo: {whitePickNum: this.props.picked.length + 1}})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    removePick(team, player) {\n        let gameId = this.props.draft._id\n        // we remove the player from the array of ranked players\n        let indexOfPlayerToRemove = this.props.picked.indexOf(player)\n        this.props.picked.splice(indexOfPlayerToRemove,1)\n        // we will also need to send the unavailable players, otherwise their availability cannot be reset later on\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        switch (team){\n            case \"Dark\":\n            // after removing the player from the array of ranked players, we reset their rank via their index in the array\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.darkPickNum = index + 1 }\n            })\n            // the rank of the player initially selected is reset to 0\n            player.gameInfo.darkPickNum = 0\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            case \"White\":\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.whitePickNum = index + 1 }\n            })\n            player.gameInfo.whitePickNum = 0\n            this.props.setPick(\"White\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    rankOneUp(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit > 0) {\n            switch (this.props.draftMode) {\n                case \"Dark\": \n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n            }\n        }\n    }\n\n    rankOneDown(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit < this.props.picked.length - 1) {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"picker_mode\"> \n                    <div className=\"col_no_bootstrap set_picks_col\">\n                        <h1 className=\"h1_main pick_col_header unpicked_list_header\">Set {this.props.draftMode} Picks</h1>\n                        <div className=\"list_of_unpicked_players\">\n                        {/* Mapping the unranked Players */}\n                        {this.props.unpicked ? (this.props.unpicked\n                            .map(player => {\n                                return (\n                                    <div className=\"player_picking_div\" key={player._id}>\n                                        <button className=\"content_button player_picking lighter_color\"  onClick={() => this.addPick(this.props.draftMode, player._id)} >{player.name}</button>\n                                        <FontAwesomeIcon icon=\"angle-right\" className=\"pick_arrow arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div>\n                        <div className=\"col_no_bootstrap ranks_col\">\n                            <h1 className=\"h1_main pick_col_header picked_list_header\">Ranks</h1>\n                            {/* mapping the ranked available players */}\n                            <div className=\"list_of_picked_players\">\n                            {this.props.picked ? (this.props.picked\n                                .map(player => {\n                                    return (    \n                                        <div className=\"player_picking_div\" key={player._id}>\n                                            <button className=\"content_button player_button darker_color\">{player.name}</button>\n                                            <FontAwesomeIcon icon=\"minus-circle\" className=\"remove remove_pick\" onClick={() => this.removePick(this.props.draftMode, player)} />\n                                            <div className=\"sorter\"> \n                                                <FontAwesomeIcon icon=\"chevron-up\" className=\"up_arrow\" onClick={() => this.rankOneUp(player)}/>\n                                                <FontAwesomeIcon icon=\"chevron-down\" className=\"down_arrow\" onClick={() => this.rankOneDown(player)}/>\n                                            </div>\n                                        </div>\n                                    )\n                                } )\n                            ) : ( <p>Bogus data</p> )\n                            }\n                            </div>\n                        </div> \n                </div>\n            </main>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    addPick(team, playerID){\n        let gameId = this.props.draft._id\n        switch (team){\n            case \"Dark\":\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {player: playerID, gameInfo: {darkPickNum: this.props.picked.length + 1}})\n            break;\n\n            case \"White\":\n            this.props.setPick(\"White\", gameId, {player: playerID, gameInfo: {whitePickNum: this.props.picked.length + 1}})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    removePick(team, player) {\n        let gameId = this.props.draft._id\n        // we remove the player from the array of ranked players\n        let indexOfPlayerToRemove = this.props.picked.indexOf(player)\n        this.props.picked.splice(indexOfPlayerToRemove,1)\n        // we will also need to send the unavailable players, otherwise their availability cannot be reset later on\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        switch (team){\n            case \"Dark\":\n            // after removing the player from the array of ranked players, we reset their rank via their index in the array\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.darkPickNum = index + 1 }\n            })\n            // the rank of the player initially selected is reset to 0\n            player.gameInfo.darkPickNum = 0\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            case \"White\":\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.whitePickNum = index + 1 }\n            })\n            player.gameInfo.whitePickNum = 0\n            this.props.setPick(\"White\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    rankOneUp(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit > 0) {\n            switch (this.props.draftMode) {\n                case \"Dark\": \n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n            }\n        }\n    }\n\n    rankOneDown(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit < this.props.picked.length - 1) {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"picker_mode\"> \n                <div className=\"col_no_bootstrap ranks_col\">\n                        {this.props.picked.length !== 0 ? <h1 className=\"h1_main pick_col_header picked_list_header\">Ranks</h1> : null}\n                        {/* mapping the ranked available players */}\n                        <div className=\"list_of_picked_players\">\n                        {this.props.picked ? (this.props.picked\n                            .map(player => {\n                                return (    \n                                    <div className=\"player_picking_div\" key={player._id}>\n                                        <div className=\"pick_number\">\n                                            {this.props.draftMode === \"Dark\" ? player.gameInfo.darkPickNum : player.gameInfo.whitePickNum}\n                                        </div>\n                                        <div className=\"sorting-down\">     \n                                            <FontAwesomeIcon icon=\"chevron-down\" className=\"sm_down_arrow\" onClick={() => this.rankOneDown(player)}/>\n                                        </div>\n                                        <div className=\"pick_name_button\">\n                                            <button className=\"content_button player_button darker_color\">{player.name}</button>\n                                        </div>\n                                        <div className=\"sorting-up\">     \n                                            <FontAwesomeIcon icon=\"chevron-up\" className=\"sm_up_arrow\" onClick={() => this.rankOneUp(player)}/>\n                                        </div>\n                                        <div className=\"sm_remove_pick\">\n                                            <FontAwesomeIcon icon=\"minus-circle\" className=\"remove \" onClick={() => this.removePick(this.props.draftMode, player)} />\n                                        </div>\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div> \n\n                    <div className=\"col_no_bootstrap set_picks_col\">\n                        {this.props.unpicked.length !== 0 ? <h1 className=\"h1_main pick_col_header unpicked_list_header\">Pick {this.props.draftMode} Order</h1> : null }\n                        <div className=\"list_of_unpicked_players\">\n                        {/* Mapping the unranked Players */}\n                        {this.props.unpicked ? (this.props.unpicked\n                            .map(player => {\n                                return (\n                                    <div className=\"player_to_pick_div\" key={player._id}>\n                                        <button className=\"content_button player_picking lighter_color\"  onClick={() => this.addPick(this.props.draftMode, player._id)} >{player.name}</button>\n                                        <FontAwesomeIcon icon=\"plus-circle\" className=\"pick_arrow_plus arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div>\n                    \n                </div>\n            </main>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport _ from \"underscore\"\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { reset } from '../../js/actions/gameActions'\nimport { triggerPickMode } from '../../js/actions/gameActions'\nimport { triggerDraftMode } from '../../js/actions/gameActions'\n\nclass GameOptionsBottom extends Component {\n\n    resetTeams(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                    let resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for Dark team\n                            gameInfo: {...member.gameInfo, darkPickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                break;\n\n                case \"White\":\n                    resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for White team\n                            gameInfo: {...member.gameInfo, whitePickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                return;\n\n                case \"Draft\":\n                // we filter the members (but should be done from the player db, not the games.draft)\n                    resetPlayers = this.props.players\n                    .filter((player) => player.membershipStatus === \"Member\")\n                    .map((member) => {return {\n                        membershipStatus: member.membershipStatus,\n                        _id: member._id,\n                        name: member.name,\n                        playerLevel: member.playerLevel,\n                        preferredPosition: member.preferredPosition,\n                        // Resetting teams only\n                        gameInfo: {...member.gameInfo, team: \"N/A\"}\n                        }})\n                this.props.reset(game, {players: _.sortBy(resetPlayers, \"name\")})\n                break;\n                \n                default:\n                return;\n                }\n            }\n        }\n\n    autodraft(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (this.props.draftMode === \"Draft\") {\n                // Autodraft feature: separates all players by level, randomly assigns them to dark or white team\n                let mixedRosters = [];\n                let arrayOfAvailablePlayers = this.props.players.filter(player => player.gameInfo.available === true)\n                // recreating our array by assigning each player to its level\n                let output = arrayOfAvailablePlayers.reduce((levels,player) => {\n                    levels[player.playerLevel] = levels[player.playerLevel] || [];\n                    levels[player.playerLevel].push({\n                        player\n                    });\n                    return levels;\n                },[])\n                \n                let numOutput = Object.keys(output).length;\n                \n                for (let i = 0; i < numOutput; i++) {\n                    // running the randomize function for each level\n                    let playersByLevel = Object.entries(output)[i]\n                    // the \"level\" is the first argument in the array, the next one is the players: that's how we access them\n                    let playersArray = playersByLevel[1]\n                    // we randomize via a custom recursive function (could also try underscore, but on such a small array, it\n                    // I doubt it makes any difference)\n                    this.randomize(playersArray, mixedRosters)\n                    }\n                    \n                for (let i = 0; i < mixedRosters.length; i++) {\n                    // assigning different team to every other player\n                    if (i%2 === 0) {mixedRosters[i].player.gameInfo.team = \"Dark\";}\n                    else {mixedRosters[i].player.gameInfo.team = \"White\"}\n                    }\n                    \n                    let arrayOfUnavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    // For a reason I haven't been able to figure out, each player information is nested \n                    // under \"{player: }\" which we then need to remove\n                    let remappedAvailablePlayers = mixedRosters.map((player) => player.player)\n                    // Once this is done, we add the unavailable players since they need to be sent to the API as well (otherwise, they just can't be added back in the draft)\n                    let allPlayers = remappedAvailablePlayers.concat(arrayOfUnavailablePlayers)\n                    allPlayers = _.sortBy(allPlayers, \"name\") \n                    \n                this.props.editGameInfo(game, {players: allPlayers})\n                // the only purpose of calling this function is to verify that teams are balanced (level wise)\n                this.filterTeams(allPlayers, \"level\")\n                }\n                else {\n                    console.log(\"Error message: go to draft mode to draft teams\")\n                    }\n            }\n        }\n\n    // helper function to randomize an array (pushes/deletes to another array recursively, until it's empty) \n    randomize = (inputArray, outputArray) => {\n        if(inputArray.length > 0) {\n            let randomPlayer = inputArray[Math.floor(Math.random()*inputArray.length)];\n            let index = inputArray.indexOf(randomPlayer);\n            outputArray.push(randomPlayer);\n            inputArray.splice(index,1)\n            this.randomize(inputArray, outputArray);\n            }\n        }\n        \n    // function to filter array of player objects into teams used for quick control. \n    filterTeams = (arrayOfPlayerObjects, mode) => {\n        if (mode === \"level\") {\n            // filter player objects according to name of the team #1\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, \"playerLevel\")\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, \"playerLevel\")\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"playerLevel\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}`);\n                })\n            }\n        else {\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, (obj) => obj.gameInfo.darkPickNum)\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (picked for Dark: #${e.gameInfo.darkPickNum})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, (obj) => obj.gameInfo.whitePickNum)\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (picked for White: #${e.gameInfo.whitePickNum})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"name\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}\\nPicked for Dark: #${e.gameInfo.darkPickNum})\\nPicked for White: #${e.gameInfo.whitePickNum})`)//.\\nPicked in position: ${e.gameInfo.captain2Pick})`);\n                })\n            }\n        }\n    \n    toggleMode(currentMode, team){\n        if (currentMode === team) {\n            this.props.triggerDraftMode()\n        }\n        else {\n            this.props.triggerPickMode(team)\n        }\n    }\n    // helper function to test if a pick is eligible to be pushed to the ranked array. If not, moves on to the next pick. \n    testPick = (inputObject, rankedPlayers) => {\n        let index = 0;\n        let picks = inputObject.picks;\n        if (rankedPlayers.indexOf(picks[index]) !== -1) {\n            picks.splice(index,1);\n            this.testPick(inputObject, rankedPlayers);\n            }\n        else {\n            let nameOfTeam = inputObject.team;\n            // assigns the name of the team to the drafted player (to filter later on)\n            picks[index].gameInfo.team = nameOfTeam;\n            // takes the pick, pushes it to the output array\n            rankedPlayers.push(picks[index]);\n            // removes the pick from the array of picks\n            picks.splice(index,1);\n            }\n        }\n\n    // function to create a \"serpentine\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 has the next 2 picks, etc. until everyone is drafted\n    serpentineDraft = (game) => {\n        // Serpentine draft sends an object to \"testPick\" to figure if a player has already been drafted. \n        // If not, the player in question gets stored in the array of drafter players (and so on, recursively). \n        // For this to happen, we need to format our objects\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        // the function will error if we try to run it more times than players have been picked. \n        // Therefore, we need a pattern to determine how many times it should be ran\n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n            // there are 4 turns to complete a round\n            let turns = 4;\n            let modulo = num % turns;\n            let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                    // and complete the rosters one player at a time\n                    switch (modulo !== 0) {\n                        case modulo === 1:\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        case modulo === 2:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        break;\n                        case modulo === 3:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        default:\n                        return;\n                        }\n                    }\n                this.filterTeams(rankedPlayers, \"pick\")\n                // we re-add the unavailable players, otherwise they cannot be reset later on\n                let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    \n                let allPlayers = rankedPlayers.concat(unavailablePlayers)\n                this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n    \n    // function to create an \"alternate\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 drafts, etc. until everyone is drafted\n    alternateDraft = (game) => {\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        \n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n        // there are 2 turns to complete a round\n        let turns = 2;\n        let modulo = num % turns;\n        let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                // and complete the rosters with one more pick\n                this.testPick(darkPicks, rankedPlayers);\n                }\n            this.filterTeams(rankedPlayers, \"pick\")\n            // we re-add the unavailable players, otherwise they cannot be reset later on\n            let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                        \n            let allPlayers = rankedPlayers.concat(unavailablePlayers)\n            this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom + \" game_options_bottom\"}>\n                <div className={this.props.visibility.bottom + \" reduced_container\"}>\n                        <div className=\"game_options_container\">\n                            <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"Dark\")}>{this.props.pickButtons.left}</button> \n                            <button className=\"content_button contrast_color pick_option\" onClick={() => this.resetTeams(this.props.gameDate)}>Reset</button> \n                            <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"White\")}>{this.props.pickButtons.right}</button> \n                        </div>\n                        <br />\n                        <div className={this.props.visibility.top + \" game_options_container\"}>\n                            <button className=\"content_button darker_color draft_option\" onClick={()=> this.autodraft(this.props.gameDate)} >Autodraft</button>\n                            <button className=\"content_button darker_color draft_option\" onClick={()=> this.alternateDraft(this.props.gameDate)}>Alternate Draft</button> \n                            <button className=\"content_button darker_color draft_option\" onClick={() => this.serpentineDraft(this.props.gameDate)}>Serpentine Draft</button> \n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    players: state.games.draft.players,\n    lockStatus: state.games.lockStatus,\n    gameInfo: state.games.gameInfo,\n    draftMode: state.games.draftMode,\n    pickButtons: state.games.pickButtons\n})\n\nexport default connect(mapStateToProps, { editGameInfo, reset, triggerPickMode, triggerDraftMode }) (GameOptionsBottom)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { showUnavailable } from '../../js/actions/gameActions'\nimport { hideUnavailable } from '../../js/actions/gameActions'\nimport { showNonMembers } from '../../js/actions/gameActions'\nimport { hideNonMembers } from '../../js/actions/gameActions'\n\nclass GameOptionsTop extends Component {\n    \n    unavailable(action){\n        if (action === \"Show\") {\n            /*let members = this.props.players.filter(player => player.membershipStatus === \"Member\")\n            let playingMembers = this.props.gameParticipants.map(player => player._id)\n            let notPlayingMembers = members.filter(player => playingMembers.indexOf(player._id) === -1)\n            console.log(\"notPlayingMembers: \", notPlayingMembers)\n            // this.props.showUnavailable(notPlayingMembers)*/\n            this.props.showUnavailable()\n        }\n        else {\n            this.props.hideUnavailable()\n        }\n    }\n    tenBuckers(action){\n        /* This filters all players in the DB according to their membershipStatus\n        It then gets the id of all ten_buckers already playing (that we set when we fetch the game data in GameList.js\n        via the reducer). We check the former against the latter to see who's left to potentially add */\n        if (action === \"Show\") {\n            let tenBuckers = this.props.players.filter((player) => player.membershipStatus !== \"Member\")\n            let arrayOfIds = this.props.playingNonMembers.map(player => player._id)    \n            let newTenBuckers = tenBuckers.filter((player) => arrayOfIds.indexOf(player._id) === -1)\n            this.props.showNonMembers(tenBuckers, newTenBuckers)\n        }\n        else {\n            this.props.hideNonMembers()\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"container button_container\">\n                <button className=\"content_button darker_color game_options\" onClick={()=> this.unavailable(this.props.showingUnavailableMembers)}>{this.props.showingUnavailableMembers} Unavailable</button> \n                <button className=\"content_button darker_color game_options\" onClick={()=> this.tenBuckers(this.props.showingNonPlayingTenBuckers)}>{this.props.showingNonPlayingTenBuckers} Non-Members</button> \n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    players: state.players.players,\n    gameParticipants: state.games.draft.players,\n    playingNonMembers: state.games.playingNonMembers,\n    showingNonPlayingTenBuckers: state.games.showingNonPlayingTenBuckers,\n    showingUnavailableMembers: state.games.showingUnavailableMembers\n})\n\nexport default connect(mapStateToProps, { showUnavailable, hideUnavailable, showNonMembers, hideNonMembers }) (GameOptionsTop)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { lockGameInfo } from \"../js/actions/gameActions\"\nimport { unlockGameInfo } from \"../js/actions/gameActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Locker extends Component {\n\n    lockGame(game) {\n        this.props.lockGameInfo(game)\n    }\n\n    unlockGame(game){\n        this.props.unlockGameInfo(game)\n    }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom === \"visible\" ? \"visible\" : \"hidden\"}>\n                <div className=\"text-center lock_icons_container\">\n                    <div className=\"left_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"locked content_button lock\" : \"unlocked content_button lock\"} onClick={() => this.unlockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"unlock-alt\" /></button> \n                    </div>\n                    <div className=\"right_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"unlocked content_button lock\" : \"locked content_button lock\"} onClick={() => this.lockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"lock\"/></button> \n                    </div>\n                </div>\n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    // noStatsMessage: state.stats.visibility,\n})\n\nexport default connect(mapStateToProps, { lockGameInfo, unlockGameInfo }) (Locker)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleGames } from \"../js/actions/displayActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport GameList from \"../components/DraftPageComp/GameList.js\";\nimport Calendar from \"../components/DraftPageComp/Calendar.js\";\nimport Drafter from \"../components/DraftPageComp/Drafter.js\"\nimport SmallScreenDrafter from \"../components/DraftPageComp/SmallScreenDrafter.js\"\nimport Picker from \"../components/DraftPageComp/Picker.js\"\nimport SmallScreenPicker from \"../components/DraftPageComp/SmallScreenPicker.js\"\nimport GameOptionsBottom from \"../components/DraftPageComp/GameOptionsBottom.js\"\nimport GameOptionsTop from \"../components/DraftPageComp/GameOptionsTop.js\"\nimport Locker from \"../components/Locker.js\"\nimport { loadState } from \"../components/sessionStorage\"\n\nconst screenSize = window.innerWidth\nclass Draft extends Component { \nconstructor(props) {\n    super(props);\n    this.state = {\n        changeLock: true\n    }\n}\n\ncomponentDidMount() {\n    const privileges = loadState()\n    this.setState(privileges)\n    console.log(screenSize)\n\n}\n\ntoggleGamesFunc(currentlyShowing) {\n    this.props.toggleGames(currentlyShowing)\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Draft Teams</h1>\n            <div className= \"organizer\">\n                <div><Calendar/></div>\n                <div><GameList/></div>\n            </div>\n            <div className=\"game_toggle_container\">\n                <button className=\"contrast_color change_list_display\" onClick={() => this.toggleGamesFunc(this.props.showing)}> {this.props.buttonMsg} Games</button>\n            </div>\n        </div>\n        <div className={\"main_main \" + this.props.visibility.top}>\n            <GameOptionsTop />\n        </div>\n        <div className={\"main_main \" + this.props.visibility.main}>\n            {this.props.draftMode === \"Draft\" ? screenSize > 767 ? <Drafter /> : <SmallScreenDrafter /> : screenSize > 500 ? <Picker /> : <SmallScreenPicker />}\n        </div>\n        <div className={\"main_main \" + this.props.visibility.bottom}>\n            <GameOptionsBottom />\n            {this.state.changeLock === true ? <Locker /> : null }\n        </div>\n    </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    showing: state.display.showing,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    visibility: state.games.visibility,\n    draftMode: state.games.draftMode,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleGames} ) (Draft)\n","import { SHOW_FUTURE, SHOW_PAST } from './types';\n\nexport const toggleGames = (currentState) => dispatch => {\n    if (currentState === \"past\") {\n        dispatch({\n            type: SHOW_FUTURE\n        })\n    }\n    else {\n        dispatch({\n            type: SHOW_PAST\n        })\n    }\n    }","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addPlayer } from '../../js/actions/playerActions'\nimport { editPlayer } from '../../js/actions/playerActions'\nimport { resetTabs } from '../../js/actions/playerActions'\nimport { updateField } from '../../js/actions/playerActions'\n\nimport { loadState } from \"../sessionStorage\"\n\nclass Form extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            createPlayer: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    componentDidMount() {\n        const privileges = loadState()\n        this.setState(privileges)\n    }\n    handleCancel(event) {\n        event.preventDefault()\n        this.props.resetTabs()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedPlayer = {...this.props.player, [name]: value}\n        this.props.updateField(editedPlayer)\n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        /* If a player is a goalie, their level needs to be set as \"Goalie\" */\n        let assignedLevel;\n        if ( this.props.player.preferredPosition === \"Goalie\") {assignedLevel = \"Goalie\"}\n        else {assignedLevel = this.props.player.playerLevel}\n        let newPlayer = {\n            name: this.props.player.name,\n            fullName: this.props.player.fullName,\n            playerLevel: assignedLevel,\n            preferredPosition: this.props.player.preferredPosition,\n            membershipStatus: this.props.player.membershipStatus,\n            email: this.props.player.email\n            }\n        \n        if (this.props.formMode === \"Add\") {\n            this.props.addPlayer(newPlayer)\n            }\n        else {\n            let id = this.props.player._id\n            this.props.editPlayer(id, newPlayer)\n        }\n\n        // go back to tab#1\n        this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n            {this.state.createPlayer === true ? \n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"name\"\n                                value= {this.props.player.name}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Full Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"fullName\"\n                                value= {this.props.player.fullName}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Preferred Position: </label>\n                            <select name=\"preferredPosition\" onChange={(event) => this.handleChange(event)} value={this.props.player.preferredPosition}>\n                                <option defaultValue=\"Forward\">Forward</option>\n                                <option value=\"Defense\">Defense</option>\n                                <option value=\"Goalie\">Goalie</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Membership Status:</label>\n                            <select name=\"membershipStatus\" onChange={(event) => this.handleChange(event)} value= {this.props.player.membershipStatus}>\n                                <option defaultValue=\"Member\">Member</option>\n                                <option value=\"Ten Bucker\">Ten Bucker</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\"> \n                            <label>Level: </label>\n                            <select name=\"playerLevel\" onChange={(event) => this.handleChange(event)} value= {this.props.player.playerLevel}>\n                                <option value=\"A+\">A+</option>\n                                <option value=\"A\">A</option>\n                                <option value=\"A-\">A-</option>\n                                <option defaultValue=\"B+\">B+</option>\n                                <option value=\"B\">B</option>\n                                <option value=\"B-\">B-</option>\n                                <option value=\"C+\">C+</option>\n                                <option value=\"C\">C</option>\n                                <option value=\"C-\">C-</option>\n                                <option value=\"D+\">D+</option>\n                                <option value=\"D\">D</option>\n                                <option value=\"D-\">D-</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Email: </label>\n                            <input \n                                type=\"text\" \n                                name=\"email\"\n                                value= {this.props.player.email}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        <div className=\"button_container\">\n                            <button type=\"submit\" value=\"Submit\" className=\"contrast_color\"> Submit </button>\n                            <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                        </div>\n                    </form>\n                </div> : \n            <div className=\"unfortunately\">\n                <p className=\"no_game\">Login as an admin to add players!</p>\n            </div> }\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tab1,\n    tab2: state.players.tab2,\n    panel1: state.players.panel1,\n    panel2: state.players.panel2,\n    player: state.players.player,\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { addPlayer, editPlayer, resetTabs, updateField }) (Form)","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\nimport { loadState } from '../sessionStorage'\n\nclass MemberList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editMember: true,\n            deleteMember: false,\n        }\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        console.log(\"Need a warning that deleting is permanent...\")\n        console.log(\"Active/Inactive?\")\n        // this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"player_table\">\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus === \"Member\").map(player => {\n                            return (\n                                <tr key={player._id} className=\"player_table_row\"> \n                                    <td className=\"player_table_data player_table_name\">{player.name}</td>\n                                    <td className=\"player_table_data player_manage_buttons\"> \n                                        {this.state.editMember === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button>}\n                                        {this.state.deleteMember === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (MemberList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\n\nimport { loadState } from '../sessionStorage'\n\nclass TenBuckerList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editTenBucker: true,\n            deleteTenBucker: false\n        }\n    }\n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"player_table\">\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus !== \"Member\").map(player => {\n                            return (\n                                <tr key={player._id} className=\"player_table_row\"> \n                                    <td className=\"player_table_data player_table_name\">{player.name}</td>\n                                    <td className=\"player_table_data player_manage_buttons\"> \n                                        {this.state.editTenBucker === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button> }\n                                        {this.state.deleteTenBucker === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>)\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (TenBuckerList)\n","\nimport React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from '../js/actions/playerActions';\n\nimport NavBar from \"../components/NavBar.js\";\nimport Form from \"../components/PlayerPageComp/Form.js\";\nimport MemberList from \"../components/PlayerPageComp/MemberList.js\"\nimport TenBuckerList from \"../components/PlayerPageComp/TenBuckerList.js\"\n\nclass Player extends Component {\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide_tab\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n        \nrender() {\n    return (\n    <div>\n        <NavBar />\n        <main className=\"main_alternate\">\n            <h1 className=\"h1_alternate\">Players</h1>\n            <div className=\"player_table_head\">\n                    <div className=\"tab_centering\">\n                        <span id=\"1\" className={\"tab \" + this.props.tab1} onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Members </span>\n                        <span id=\"2\" className={\"tab \" + this.props.tab2} onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Buckers </span>\n                        <span id=\"3\" className={\"tab \" + this.props.tab3} onClick={() => this.toggleStatus(\"3\", this.props.tab3) }> {this.props.formMode} </span>\n                    </div>\n            </div>\n                <section className= \"main_for_tab\">\n                    <span className={this.props.panel1 + \" full_tab_size\"}> <MemberList /> </span> \n                    <span className={this.props.panel2 + \" full_tab_size\"}> <TenBuckerList /> </span> \n                    <span className={this.props.panel3 + \" full_tab_size\"}> <Form /> </span> \n                </section>\n        </main>\n    </div>\n    \n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tabs[0],\n    tab2: state.players.tabs[1],\n    tab3: state.players.tabs[2],\n    panel1: state.players.panels[0],\n    panel2: state.players.panels[1],\n    panel3: state.players.panels[2],\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { toggleTabStatus }) (Player)\n","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES, \n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES,\n} from './types';\n\nimport API from \"../../utils/API\"\n\nconst moment = require(\"moment\");\n// need a separate function to fetch games within a time span\nexport const getGamesForRecords = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let arrayOfTenBuckerIDs = []\n                let allTenBuckers= res.data.map(game => game.players.filter(player => player.membershipStatus !== \"Member\"))\n                allTenBuckers.forEach(array => array.map(player => arrayOfTenBuckerIDs.push(player._id)))\n\n                dispatch({\n                    type: GET_GAMES_IN_TIMESPAN,\n                    payload: { \n                        games: res.data,\n                        allTenBuckers: arrayOfTenBuckerIDs\n                    }\n                })\n            }\n        })\n    }\n\n\nexport const toggleVisibility = (currentState) => dispatch => {\n    if (currentState === \"dead\") {\n        dispatch({\n            type: SHOW_GAMES_TO_STATS\n            })\n        }\n    }\n\nexport const getGamesAndTransform = () => dispatch => {\n    \n    const monthify = (string) => {\n        switch (string) {\n            case \"01\":\n            return string = \"January\"\n            \n            case \"02\":\n            return string = \"February\"\n            \n            case \"03\":\n            return string = \"March\"\n            \n            case \"04\":\n            return string = \"April\"\n            \n            case \"05\":\n            return string = \"May\"\n            \n            case \"06\":\n            return string = \"June\"\n            \n            case \"07\":\n            return string = \"July\"\n            \n            case \"08\":\n            return string = \"August\"\n            \n            case \"09\":\n            return string = \"September\"\n            \n            case \"10\":\n            return string = \"October\"\n            \n            case \"11\":\n            return string = \"November\"\n            \n            case \"12\":\n            return string = \"December\"\n            \n            default: \n            return\n\n        }\n        }\n\n    const yearString = (game) => game.substring(0, 4)\n    const monthString = (game) => game.substring(5,7)\n\n    const beautifyGames = (array) => {\n        let object =\n        array.reduce((difYears,game) => {\n            difYears[yearString(game._id)] = difYears[yearString(game._id)] || [];\n            difYears[yearString(game._id)].push(game);\n            return difYears;\n            },{} \n        )\n        let arrayOfObjects = []\n        for (let i = 0; i < Object.values(object).length; i++) {\n            // for each array of games of the object created by the first reduce\n            let remapped = Object.values(object)[i].reduce((difMonths, game) => {\n                // each game is pushed to a different array under the \"month\"\n                difMonths[monthify(monthString(game._id))] = difMonths[monthify(monthString(game._id))] || [];\n                difMonths[monthify(monthString(game._id))].push(game);\n                return difMonths;\n                },{}\n            )\n            // This separates the months into distinct arrays. We push them in a separate array, \n            // otherwise another year's games might overwrite the data\n            arrayOfObjects.push({[Object.keys(object)[i]]: remapped})\n            }\n            return arrayOfObjects\n        }\n\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let pastGames = res.data.filter(game => game._id <= moment().format(\"YYYY-MM-DD\"))\n                let reducedGames = beautifyGames(pastGames)\n                let years = Object.keys(Object.values(reducedGames)).map(e => [e] = \"visible\")\n                // console.log(\"indexes2: \", years)\n                dispatch({\n                    type: GET_GAMES_AND_TRANSFORM,\n                    payload: \n                        {\n                            game: reducedGames,\n                            visibility: years\n                        }\n                    })\n                }\n            })\n        }\n\nexport const setVisibility = (array) => dispatch => {\n    dispatch({\n            type: SET_YEARS_VISIBILITIES,\n            payload: array\n    })\n}\n\nexport const selectGame = (id) => dispatch => {\n    dispatch({\n        type: ADD_GAME_TO_SELECTED,\n        payload: id\n    })\n}\n\nexport const unselectGame = (game) => dispatch => {\n    dispatch({\n        type: REMOVE_GAME_FROM_SELECTED,\n        payload: game\n    })\n}\n\nexport const selectPlayer = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_TO_SELECTED,\n        payload: {selected: player}\n    })\n}\n\nexport const unselectPlayer = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_FROM_SELECTED,\n        payload: {selected: player}\n    })\n}\n// There has to be a better way to do this (based on the index, maybe?)\nexport const toggleViews = (currentStatus, element) => dispatch => {\n    if (currentStatus === \"visible\") {\n        dispatch({\n            type: TOGGLE_RECORDS_VIEWS,\n            payload: {\n                dates: \"dead\",\n                games: \"dead\",\n                players: \"dead\",\n                sort: \"dead\",\n                chart: \"dead\"\n            }\n        })}\n    else {\n        switch (element) {\n            case \"dates\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"visible\",\n                    games: \"dead\",\n                    players: \"dead\",\n                    sort: \"dead\",\n                    chart: \"dead\"\n                }\n            })\n            \n            break;\n            \n            case \"games\":\n                dispatch({\n                    type: TOGGLE_RECORDS_VIEWS,\n                    payload: {\n                        dates: \"dead\",\n                        games: \"visible\",\n                        players: \"dead\",\n                        sort: \"dead\",\n                        chart: \"dead\"\n                    }\n                })\n            break;\n\n            case \"players\":\n                dispatch({\n                        type: TOGGLE_RECORDS_VIEWS,\n                        payload: {\n                            dates: \"dead\",\n                            games: \"dead\",\n                            players: \"visible\",\n                            sort: \"dead\",\n                            chart: \"dead\"\n                        }\n                    })\n            break;\n\n            case \"sort\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"dead\",\n                    games: \"dead\",\n                    players: \"dead\",\n                    sort: \"visible\",\n                    chart: \"dead\"\n                }\n            })\n            break;\n\n            case \"chart\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"dead\",\n                    games: \"dead\",\n                    players: \"dead\",\n                    sort: \"dead\",\n                    chart: \"visible\"\n                }\n            })\n            break;\n\n            default:\n            return\n        }\n    }\n}\n\nexport const addPlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const removePlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const selectDateRange = (start, end) => dispatch => {\n    if (start === \"Invalid date\") {start = \"2000-01-01\"}\n    if (end === \"Invalid date\") {end = moment().format(\"YYYY-MM-DD\")}\n    dispatch({\n        type: SET_DATE_RANGE,\n        payload: {\n            from: start,\n            to: end\n        }\n    })\n}\n\nexport const toggleSortOptions = (tab, currentStatus, ascArrow) => dispatch => {\n    switch(tab){\n        case \"az\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_AZ_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"active\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"games\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GAMES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"active\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"wins\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_WINS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"active\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"losses\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_LOSSES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"active\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        \n        case \"ties\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_TIES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"active\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"goals\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GOALS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"active\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"gpg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GPG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"active\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"assists\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            }) \n\n        }\n        else {\n            dispatch({\n                type: SORT_ASSISTS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"active\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"apg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_APG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"active\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        break;\n\n        default:\n        return\n    }\n\n}\n\nexport const toggleSelectAll = (update) => dispatch => {\n    switch (update) {\n        case \"unselected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"selected_member\"}\n            })    \n        break;\n\n        case \"selected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"unselected_member\"}\n            })    \n        \n        break;\n\n        case \"unselected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"selected_non_member\"}\n            })    \n        break;\n\n        case \"selected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"unselected_non_member\"}\n            })    \n        break;\n\n        default:\n        return;\n    }\n}\n\nexport const batchCardUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CARD_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchChartUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CHART_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchUnselect = (type) => dispatch => {\n    dispatch({\n        type: BATCH_UNSELECT,\n        payload: type\n    })\n}\n\n// this handles when games are removed after the players. In this case, data needs to be re-initiated\n// we recreate the array of players\nexport const updatePlayers = (players) => dispatch => {\n    dispatch({\n        type: REPLACE_PLAYERS_RECORDS,\n        payload: players\n    })\n}\n// data is sent to the modal in showcase.js\nexport const togglePlayerModal = (newStatus, data) => dispatch => {\n    dispatch({\n        type: TOGGLE_PLAYER_MODAL,\n        payload: {\n            status: newStatus,\n            data: data\n        }\n    })\n}\n\nexport const selectAllGames = (status) => dispatch => {\n    dispatch({\n        type: BATCH_GAMES,\n        payload: status,\n    })\n}\n\nexport const unselectAllGames = () => dispatch => {\n    dispatch({\n        type: UNSELECT_ALL_GAMES,\n    })\n}\n\nexport const filterPlayerRecordsByType = (object) => dispatch => {\n    let operator;\n    let playerType;\n\n    if (object.offense === \"unselected\") {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"null\";\n                playerType = \"null\";\n            }\n            else {\n                operator = \"only\";\n                playerType = \"Goalie\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Defense\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Forward\"\n            }\n        }\n    }\n    else {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Forward\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Defense\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"but\"\n                playerType = \"Goalie\"\n            }\n            else {\n                operator = \"null\"\n                playerType = \"null\"\n            }\n        }\n\n    }\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_TYPE,\n        payload: {\n            operator: operator,\n            playerType: playerType,\n            playerFilters: object\n        }\n    })\n}\n\nexport const filterPlayerRecordsByGames = (object) => dispatch => {\n    console.log(\"object received in filterGames statsActions.js: \", object)\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_GAMES,\n        payload: object\n        })\n}","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGame } from '../../js/actions/gameActions'\nimport { getGamesAndTransform } from '../../js/actions/statsActions'\nimport { setVisibility } from '../../js/actions/statsActions'\n\nimport _ from \"underscore\"\n\nclass PastGameList extends Component {\n\n    componentDidMount() {\n        this.props.getGamesAndTransform();\n    }\n\n    toggleVisibility(currentStatus, num){\n        let newStatus;\n        if (currentStatus === \"visible\") {newStatus = \"hidden\"}\n        else { newStatus = \"visible\" }\n        \n        let visibleBefore = this.props.gameVisibility.slice(0, num)\n        let visibleAfter = this.props.gameVisibility.slice(num + 1)\n        let newArray = [...visibleBefore, newStatus, ...visibleAfter]\n        \n        this.props.setVisibility(newArray)\n        }\n\n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n        }\n\n    renderGames(object) {\n        return Object.values(object).map((game, i) => {\n            return (\n                    <button key={game._id} className=\"past_game_button contrast_color\" onClick={()=> this.getGameInfo(game._id)}> {game._id} </button>\n                )\n            })\n        }\n\n    renderMonth(object) {\n        return Object.entries(Object.values(object)[0]).map(([key, value], i) => {\n            return (\n                <div key= {i}>\n                    <h3 className=\"h3_alternate\">{key}:</h3>\n                    <div className=\"month_game_played\">\n                        {this.renderGames(value)}\n                    </div>\n                </div>\n                )\n            })\n        }\n    \n    \n    renderYear(object) {\n        let reOrderedArray = _.sortBy(Object.values(object)).reverse()\n        return reOrderedArray.map((year, i) => {\n            return (\n                <div key={i}>\n                    <div>\n                        <h3 className=\"h3_main\">{ Object.keys(year)}</h3> \n                        <div className=\"hide_year_button\" onClick={()=> this.toggleVisibility(this.props.gameVisibility[i], i)}> {this.props.gameVisibility[i] === \"visible\" ? \"[hide]\" : \"[show]\" }</div>\n                    </div>\n                    <div className={this.props.gameVisibility ? this.props.gameVisibility[i] : null + \" games_per_year\"}>\n                        {this.renderMonth(year)} \n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"list_of_games\">\n                    <div>\n                        {this.renderYear(this.props.reducedGames)}\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    reducedGames: state.stats.reducedGames,\n    gameVisibility: state.stats.gameVisibility\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { getGamesAndTransform, setVisibility, getGame }) (PastGameList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { editGameInfo } from '../../js/actions/gameActions'\n// import { deletePlayer } from '../../../js/actions/playerActions'\n// import { editForm } from '../../../js/actions/playerActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nimport Locker from \"../Locker.js\"\n\nclass ScoreBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editScore: true,\n            changeLock: true\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    logStat(playerID, type, currentValue){\n        let gameId = this.props.game._id\n        switch (type){\n            case \"add_goal_dark\":\n            let goalUpdate = currentValue + 1;\n            let scoreUpdate = this.props.game.goals_dark + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_white:\n                this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"add_goal_white\":\n            goalUpdate = currentValue + 1;\n            scoreUpdate = this.props.game.goals_white + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_dark:\n                this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"substract_goal_dark\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_dark - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0) {\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_white:\n                    this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                    }\n                }\n            break;\n\n            case \"substract_goal_white\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_white - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0){\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                }\n                }\n            break;\n\n            case \"add_assist\":\n            let assistUpdate = currentValue + 1;\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n            break;\n\n            \n            case \"substract_assist\":\n            assistUpdate = currentValue - 1;\n            if (assistUpdate >= 0){\n                this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n                }\n            break;\n\n            default:\n            return;\n        }\n\n    }\n\n    render() {\n        return (\n            <span className=\"full\">\n                <div>\n                    <h1 className=\"h1_main\">{this.props.game._id}</h1>\n                    <div className=\"tables_container\">\n                        <div className=\"table_container\">\n                            <h1 className=\"h1_alternate\">Dark<br/>{this.props.game.goals_dark}</h1>\n                            <table>\n                                <thead>\n                                    <tr className=\"score_header_tr\">\n                                        <th className=\"table_col_name\">Player</th> \n                                        <th className=\"table_col_name\">Goals</th>\n                                        <th className=\"table_col_name\">Assists</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.players ? (this.props.players\n                                        .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                        .map(player => {\n                                            return (\n                                                <tr className=\"stats_row\" key={player._id}> \n                                                    <td className=\"player_stats stats_name\">{player.name}\n                                                    </td>\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_dark\",player.gameInfo.goals)} /> : null }\n                                                            <div className={player.gameInfo.goals > 0 ? \"nice data\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_dark\",player.gameInfo.goals)} />  : null }\n                                                        </div>\n                                                    </td>\n\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} />  : null }\n                                                            <div className={player.gameInfo.assists > 0 ? \"good data\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus}  onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                )\n                                            })\n                                        ) : null\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"table_container\">\n                                <h1 className=\"h1_alternate\">White<br/>{this.props.game.goals_white}</h1>\n                                <table className=\"score_table\">\n                                    <thead>\n                                        <tr className=\"score_header_tr\">\n                                            <th className=\"table_col_name\">Player</th> \n                                            <th className=\"table_col_name\">Goals</th>\n                                            <th className=\"table_col_name\">Assists</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.props.players ? (this.props.players\n                                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                            .map(player => {\n                                                return (\n                                                    <tr className=\"stats_row\" key={player._id}> \n                                                        <td className=\"player_stats stats_name\">{player.name}\n                                                        </td>\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_white\",player.gameInfo.goals)} /> : null }\n                                                                <div className={player.gameInfo.goals > 0 ? \"nice data\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_white\",player.gameInfo.goals)} /> : null }\n                                                            </div>\n                                                        </td>\n\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} /> : null }\n                                                                <div className={player.gameInfo.assists > 0 ? \"good data\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    )\n                                                })\n                                            ) : null\n                                            }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>    \n                    </div>    \n                {this.state.changeLock === true ? <Locker /> : null }\n        </span>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    game: state.games.draft,\n    players: state.games.draft.players,\n    lockStatus: state.games.lockStatus\n\n})\n\nexport default connect(mapStateToProps, { editGameInfo }) (ScoreBoard)\n","import React, { Component } from 'react';\n\nclass NoStatsBoard extends Component {\n    render(){\n        return (\n            <div className=\"no_stats_message\">\n                <p className=\"no_game\">The teams for this game have not been drafted yet. Please come back later!\n                </p>    \n            </div>\n        )\n    }\n}\n\nexport default NoStatsBoard;\n","import React, { Component } from \"react\";\n\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleVisibility } from \"../js/actions/statsActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport PastGameList from \"../components/StatsPageComp/PastGamesList.js\"\nimport ScoreBoard from \"../components/StatsPageComp/ScoreBoard.js\"\nimport NoStatsBoard from \"../components/StatsPageComp/NoStatsBoard.js\"\n\nclass Stats extends Component {         \nrender() {\n    return (\n        <div>\n            <NavBar />\n            <main>\n                <section className=\"main_main\">\n                    <h1 className=\"h1_main\">Enter Stats</h1>\n                    <PastGameList />\n                </section>\n                {this.props.visibility.noStatsMessage === \"visible\" ? \n                (<section className={\"main_main \" + this.props.visibility.noStatsMessage}>\n                    <NoStatsBoard />\n                </section>) : \n                (<section className={\"main_main \" + this.props.visibility.gameStats}>\n                    <ScoreBoard />\n                </section>)}\n            </main>\n        </div>\n        )\n    }\n}\n\n// export default Stats\nconst mapStateToProps = state => ({\n    visibility: state.games.visibility,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleVisibility } ) (Stats)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { selectDateRange } from \"../../js/actions/statsActions\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nconst moment = require(\"moment\");\nclass DateRange extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChangeStart(date) {\n        this.setState({\n            startDate: date\n        })\n    }\n\n    handleChangeEnd(date) {\n        this.setState({\n            endDate: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let startDate = moment(this.state.startDate).format(\"YYYY-MM-DD\")\n        let endDate = moment(this.state.endDate).format(\"YYYY-MM-DD\")\n        this.props.selectDateRange(startDate, endDate)\n    }\n\n\n    render() {\n        return (\n            <div className={\"records_calendar \" + this.props.datePickers}>\n                <div className=\"calendar_alignment\">\n                    <form onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                        <DatePicker\n                            placeholderText=\"From: MM DD YYYY\"\n                            selected={this.state.startDate}\n                            selectsStart\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeStart}\n                            isClearable={true}\n                        />\n\n                        <DatePicker\n                            placeholderText=\"To:     MM DD YYYY\"\n                            selected={this.state.endDate}\n                            selectsEnd\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeEnd}\n                            isClearable={true}\n                        />\n                            <div className=\"date_range_options\">\n                                <button id=\"range_submit\" className=\"content_button btn contrast_color\" name=\"submit\" type=\"submit\" >Submit</button>\n                            </div>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    datePickers: state.stats.datePickers\n    })\n\n\nexport default connect(mapStateToProps, { selectDateRange }) (DateRange)\n    ","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport DateRange from \"./DateRange\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass DateSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"dates\")\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.datePickers)}> {this.props.datePickers === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Dates</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className={\"date_pickers \" + this.props.datePickers}>\n                            <div className={\"calendar_container \" + this.props.datePickers}>\n                                <DateRange />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    allGames: state.stats.gamesForRecords,\n    datePickers: state.stats.datePickers,\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, toggleViews }) (DateSelector)\n","export const createCardsArray = (arrayOfPlayers, arrayOfGames) => {\n    // we do not want to fire the function if either array is empty\n    if (arrayOfGames.length > 0 && arrayOfPlayers.length > 0) {\n        // array to store the info\n        let transformedArrayForCards = [];\n        // for each player in the array\n        arrayOfPlayers.forEach((broomballer) => {\n            // we map/filter all games selected to create record for each game played.\n    \n            // if the player didn't play any game, we create an empty \"N/A\" record instead (otherwise misleading)\n            let gamesPlayed = arrayOfGames.filter(game => game.players.filter(player => player._id === broomballer._id)[0])\n            // if the broomballer played any game\n            if (gamesPlayed.length > 0) {\n                let playerReduced = gamesPlayed.reduce((players, game) => {\n                    // variable to access \"game info\" of each player for each game\n                    let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                    let win;\n                    let available;\n    \n                    players.name = broomballer.name\n                    players._id = broomballer._id\n                    players.membershipStatus = broomballer.membershipStatus\n                    players.preferredPosition = broomballer.preferredPosition\n                    \n                    players.gamesPlayed = players.gamesPlayed || []\n                    if(gameInfo[0].available === true){\n                        available = 1\n                        players.gamesPlayed.push(available)\n                    }\n                    \n                    players.goals = players.goals || []\n                    if(gameInfo[0].available === true) {\n                        players.goals.push(gameInfo[0].goals)\n                    }\n                    \n                    players.assists = players.assists || []\n                    if (gameInfo[0].available === true) {\n                        players.assists.push(gameInfo[0].assists)\n                    }\n                    \n                    players.wins = players.wins || []\n                    if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                        win= \"Win\"\n                        players.wins.push(win)\n                    }\n    \n                    players.losses = players.losses || []\n                    if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                        let loss= \"Loss\"\n                        players.losses.push(loss)\n                    }\n    \n                    players.ties = players.ties || []\n                    if(gameInfo[0].available === true && game.win === \"Tie\"){\n                        let tie= \"Tie\"\n                        players.ties.push(tie)\n                    }\n                \n                    return players\n                    }, {});\n                    \n                let gamePlayedFromArray = playerReduced.gamesPlayed ? playerReduced.gamesPlayed.length : 0 \n                let winsFromArray = playerReduced.wins.length\n                let lossesFromArray = playerReduced.losses.length\n                let tiesFromArray = playerReduced.ties.length\n                let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let goalsFromArray = playerReduced.goals ? playerReduced.goals.reduce((a,b) => a + b, 0) : 0\n                let assistsFromArray = playerReduced.assists ? playerReduced.assists.reduce((a, b) => a + b, 0) : 0\n                let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n    \n                playerReduced.gamesPlayed = gamePlayedFromArray\n                playerReduced.wins = winsFromArray\n                playerReduced.losses = lossesFromArray\n                playerReduced.ties = tiesFromArray\n                playerReduced.winPercent = winPercent\n                playerReduced.lossPercent = lossPercent\n                playerReduced.tiePercent = tiePercent\n                playerReduced.goals = goalsFromArray \n                playerReduced.assists = assistsFromArray\n                if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n                \n                transformedArrayForCards.push(playerReduced)\n            } else {\n                let playerWithoutRecord = {\n                    name: broomballer.name,\n                    gamesPlayed: 0,\n                    goals: \"N/A\",\n                    assists: \"N/A\",\n                    membershipStatus: broomballer.membershipStatus,\n                    winPercent: \"N/A\",\n                    lossPercent: \"N/A\",\n                    tiePercent: \"N/A\",\n                    win: \"N/A\",\n                    loss: \"N/A\",\n                    tie: \"N/A\",\n                    gpg: \"N/A\",\n                    apg: \"N/A\",\n                    _id: broomballer._id\n                }\n                transformedArrayForCards.push(playerWithoutRecord)\n            }\n        })\n        return transformedArrayForCards;\n    }\n};\n\nexport const createChartData = (arrayOfCards) => {\n    let labels = []\n    let goalsArray = []\n    let assistsArray = []\n    let gamesPlayedArray = []\n    let winPercentArray = []\n    let lossPercentArray = []\n    let tiePercentArray = []\n    let gpgArray = []\n    let apgArray = []\n    arrayOfCards.forEach(e => {\n        labels.push(e.name);\n        goalsArray.push(e.goals);\n        assistsArray.push(e.assists);\n        gamesPlayedArray.push(e.gamesPlayed);\n        winPercentArray.push(e.winPercent);\n        lossPercentArray.push(e.lossPercent);\n        tiePercentArray.push(e.tiePercent);\n        gpgArray.push(e.gpg);\n        apgArray.push(e.apg);\n    })\n    \n    let chartObject = {\n        labels: labels,\n        // For performance reason, it is better to re-initiate the data than to use the ... operator to merge new with existing\n        datasets: [\n            {\n                label: \"Goals\",\n                data: goalsArray,\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: \"Assists\",\n                data: assistsArray,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Games\",\n                data: gamesPlayedArray,\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Wins (%)\",\n                data: winPercentArray,\n                backgroundColor: 'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                hoverBorderColor: 'rgba(75,192,192,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Losses (%)\",\n                data: lossPercentArray,\n                backgroundColor: '#d3b8ae',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#d3b8ae',\n                hoverBorderColor: '#d3b8ae',\n                barThickness: 15,\n            },\n            {\n                label: \"Ties (%)\",\n                data: tiePercentArray,\n                backgroundColor: '#ff8a65',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#ff8a65',\n                hoverBorderColor: '#ff8a65',\n                barThickness: 15,\n            },\n            {\n                label: \"GPG\",\n                data: gpgArray,\n                backgroundColor: 'rgba(153,102,255,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                hoverBorderColor: 'rgba(153,102,255,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"APG\",\n                data: apgArray,\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                options: {barThickness: 100},\n            },\n            ]\n        }\n        return chartObject;\n    }","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { selectGame } from '../../js/actions/statsActions'\nimport { unselectGame } from '../../js/actions/statsActions'\nimport { selectAllGames } from '../../js/actions/statsActions'\nimport { unselectAllGames } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { updatePlayers } from '../../js/actions/statsActions'\nimport { batchChartUpdate } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { createCardsArray } from \"./curateData\"\nimport { createChartData } from \"./curateData\"\nclass GameSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    unselectGame(game) {\n        // marks the game as unselected\n        this.props.unselectGame(game)\n        let arrayOfGames = this.props.selectedGames.filter(match => match._id !== game._id)\n        let cardsArray = createCardsArray(this.props.selectedPlayers, arrayOfGames)\n        this.props.updatePlayers( cardsArray )\n        \n        if (arrayOfGames.length > 0) {\n            // createChartData( cardsArray )\n\n            let newObject = createChartData(cardsArray)\n            this.props.batchChartUpdate(newObject)\n\n        } else {\n            console.log(\"All games have been unselected\")\n        }\n    }\n\n    gameSelection(arrayOfGames) {\n        // marks the selected games as such \n        arrayOfGames.forEach(game => this.markAsSelected(game))\n        let cardsArray = createCardsArray(this.props.selectedPlayers, arrayOfGames)\n        this.props.updatePlayers( cardsArray )\n        \n        if (this.props.selectedPlayersNum > 0) {\n            let newObject = createChartData( cardsArray )\n            this.props.batchChartUpdate(newObject)\n        } else {\n            // if no game is selected, have to wipe the chartData\n            console.log(\"No player selected\")\n        }\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"games\")\n    }\n\n    selectAllGames(status){\n        this.props.selectAllGames(status)\n        // we send the whole array of games in the time span to the gameSelection function\n        this.gameSelection(this.props.gamesForRecords)\n        \n    }\n    unselectAllGames(){\n        this.props.unselectAllGames()\n        this.props.gamesForRecords.forEach(game => this.props.unselectGame(game))\n        this.gameSelection([])\n    }\n    // When we hit the \"Select All Games\", we need to make sure the game has not already been selected\n    // otherwise it might be sent twice \n    markAsSelected(game) {\n        let arrayOfIds = this.props.selectedGames.map(gamesSelected => gamesSelected._id)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.selectGame(game)\n        }\n    }\n\n    markAsUnselected(game) {\n        let arrayOfIds = this.props.unselectedGames.map(gamesUnselected => gamesUnselected._id)\n        console.log(\"ids of games already unselected: \", arrayOfIds)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.unselectGame(game)\n        }\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfGames)}> {this.props.listOfGames === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Games</h3>\n                        </div>\n                    </div>\n                    <div className={this.props.listOfGames + \" content \"}>\n                        <div className={this.props.listOfGames + \" select_all\"}>\n                            <div className=\"button_options_third_set\">\n                                {this.props.allGamesSelection === \"unselected_game\" ? \n                                    <button className={\"record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.selectAllGames(this.props.allGamesSelection)}> Games <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>\n                                    :\n                                    <button className={\"record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.unselectAllGames()}> Games <FontAwesomeIcon icon=\"times\" className=\"game_action_icon\"/> </button>\n                                }\n                            </div>\n                            \n                        </div>\n\n                        <div className={\"record_list_of_games \" + this.props.listOfGames}>\n                                {this.props.gamesForRecords.length > 0 ?\n                                    this.props.gamesForRecords\n                                    .map(game => this.props.selectedGames.indexOf(game) === -1 ? \n                                    (<button key={game._id} className=\"unselected_game record_game_button\" onClick={() => this.gameSelection([game, ...this.props.selectedGames])}> {game._id} <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>)\n                                    : \n                                    (<button key={game._id} className=\"selected_game record_game_button\" onClick={() => this.unselectGame(game)}> {game._id} <FontAwesomeIcon icon=\"times\" className=\"game_action_icon\"/> </button>)\n                                )\n                                : <p className=\"no_game\">There is currently no game to display</p> \n                            }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    selectedPlayersNum: state.stats.selectedPlayers ? state.stats.selectedPlayers.length : 0,\n    unselectedGames: state.stats.unselectedGames,\n    gamesForRecords: state.stats.gamesForRecords, \n    listOfGames: state.stats.listOfGames, // to toggle the visibility\n    chartData: state.stats.chartData,\n    allGamesSelection: state.stats.allGamesSelection\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, selectGame, unselectGame, selectAllGames, unselectAllGames, toggleViews, updatePlayers, batchChartUpdate }) (GameSelector)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { selectPlayer } from '../../js/actions/statsActions'\nimport { unselectPlayer } from '../../js/actions/statsActions'\n// This adds a player to the playerRecords array\nimport { addPlayerStatObject } from \"../../js/actions/statsActions\"\nimport { removePlayerStatObject } from \"../../js/actions/statsActions\"\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { toggleSelectAll } from '../../js/actions/statsActions'\n// this replaces all the records in the playerRecords array\nimport { updatePlayers } from '../../js/actions/statsActions'\n// this merges newly created records with already existing records in the playerRecords array\nimport { batchCardUpdate } from '../../js/actions/statsActions'\n// this is used to send data to the chartData object from which data is pulled to create the chart\nimport { batchChartUpdate } from '../../js/actions/statsActions'\nimport { batchUnselect } from '../../js/actions/statsActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { createCardsArray } from \"./curateData\"\nimport { createChartData } from \"./curateData\"\n\nclass PlayerSelector extends Component {\n\n    componentDidMount() {\n        this.props.fetchPlayers();\n    }\n    // unselect individual players (by way of slicing the existing arrays of data)\n    unselectPlayer(player) {\n        this.props.unselectPlayer(player)\n        this.props.removePlayerStatObject(player)\n        if ( this.props.selectedGamesNum > 0 ) {\n            let newObject = createChartData(this.props.selectedPlayers.filter(broomballer => broomballer._id !== player._id ))\n            this.props.batchChartUpdate(newObject)\n        } else {\n            console.log(\"Handle case: \\nPlayer is removed, no game selected\")\n        }\n    }\n    \n    selectPlayer(broomballer) {\n        this.markAsSelected(broomballer)\n        let cardsArray = createCardsArray(this.props.selectedPlayers.concat(broomballer), this.props.selectedGames)\n        this.props.updatePlayers( cardsArray )\n        this.addBatchChartData( cardsArray )\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"players\")\n    }\n    // calling the \"individual\" functions repeatedly makes redux (and redux devtool) fail & Chrome lag. For this reason, we create separate functions that will handle updates on the whole array. \n    // This dispatcher sends data to the function that will handle it.\n    selectAllPlayers(playerUpdate){\n        switch (playerUpdate) {\n            case \"unselected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // we need to add both all members + non-members already selected for we are going to replace all existing records\n            let allMembersAndSelectedTenBuckers = this.props.allPlayers.filter(player => player.membershipStatus === \"Member\").concat(this.props.selectedPlayers.filter(player => player.membershipStatus !== \"Member\"))\n            this.selectAndTransform(allMembersAndSelectedTenBuckers, \"select\")\n            break;\n\n            case \"selected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Member\")\n            break;\n\n            case \"unselected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // Adding both all ten buckers (who have played one of possible games) + non-members already selected\n            let allTenBuckersAndSelectedMembers = this.props.allPlayers.filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id)).concat(this.props.selectedPlayers.filter(player => player.membershipStatus === \"Member\"))\n            this.selectAndTransform(allTenBuckersAndSelectedMembers, \"select\")\n            break;\n\n            case \"selected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Ten Bucker\")\n            break;\n\n            default:\n            return;\n        }\n    }\n    // this function marks all players in the array as selected (via this.markAsSelected), creates an array of objects in the playerRecords reducer, \n    // and sends data to be handled by setChartData accordingly (=> selected players are created properly for Chartjs package)\n    selectAndTransform(arrayOfPlayers, type) {\n        if (type === \"select\") {\n            arrayOfPlayers.forEach(broomballer => this.markAsSelected(broomballer))\n        }\n        let cardsArray = createCardsArray(arrayOfPlayers, this.props.selectedGames)\n        if (type === \"select\") {\n            this.props.updatePlayers( cardsArray )\n            this.addBatchChartData( cardsArray )\n            }\n        else if (type === \"unselect\") {\n            this.addBatchChartData( cardsArray )\n        }\n    }\n\n    // this handles unselecting players depending on the membership type sent\n    batchUnselect(type){\n        this.props.batchUnselect(type);\n        this.props.selectedPlayers.filter(player => player.membershipStatus === type).forEach(broomballer => this.unselectPlayer(broomballer));\n        this.selectAndTransform(this.props.selectedPlayers.filter(player => player.membershipStatus !== type), \"unselect\")\n    }\n\n    addBatchChartData(arrayOfPlayers) {\n        if ( this.props.selectedGamesNum > 0 ) {\n            let newObject = createChartData(arrayOfPlayers)\n            this.props.batchChartUpdate(newObject)\n        }\n    }\n\n    // Before sending the player to the selectPlayer action that will add it to the selectedPlayers array, we need to make sure the record does not already exist\n    // in that array (we might accidentally send twice via the batch select that consolidates before re-sending to playerRecords array). Otherwise, it creates \n    // problems with duplicate keys in React\n    markAsSelected(player) {\n        let arrayOfIds = this.props.selectedPlayers.map(broomballer => broomballer._id)\n        if ( !arrayOfIds.includes(player._id) ){\n            this.props.selectPlayer(player)\n        }\n    }\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfPlayers)}> {this.props.listOfPlayers === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Players</h3>\n                        </div>\n                    </div>\n                    <div className=\"content \">\n                    {/* <div className={this.props.listOfPlayers + \" content \"}> */}\n                        <div className={this.props.listOfPlayers + \" select_all\"}>\n                            <div className=\"button_options_first_set\">\n                                <button className={\"record_player_button all_button \" + this.props.memberSelection} onClick={() => this.selectAllPlayers(this.props.memberSelection)}> Members {this.props.memberSelection === \"unselected_member\" ? <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> : <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/>}</button>\n                                <button className={\"record_player_button all_button \" + this.props.tenBuckerSelection} onClick={() => this.selectAllPlayers(this.props.tenBuckerSelection)}> Ten Buckers {this.props.tenBuckerSelection === \"unselected_non_member\" ? <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> : <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/>}</button>\n                            </div>\n                            \n                        </div>\n                        <div className={\"list_of_players \" + this.props.listOfPlayers}>\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus === \"Member\")\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"unselected_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"selected_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id))\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"unselected_non_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"selected_non_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    selectedGamesNum: state.stats.selectedGames ? state.stats.selectedGames.length : 0,\n    selectedPlayers: state.stats.selectedPlayers,\n    selectedPlayersNum: state.stats.selectedPlayers ? state.stats.selectedPlayers.length : 0,\n    unselectedPlayers: state.stats.unselectedPlayers,\n    memberSelection: state.stats.memberSelection,\n    tenBuckerSelection: state.stats.tenBuckerSelection,\n    allPlayers: state.players.players,\n    arrayOfTenBuckersID: state.stats.arrayOfTenBuckersID,\n    listOfPlayers: state.stats.listOfPlayers,\n    chartData: state.stats.chartData,\n})\n\nexport default connect(mapStateToProps, {   \n        fetchPlayers, \n        selectPlayer, \n        unselectPlayer, \n        toggleViews, \n        addPlayerStatObject, \n        removePlayerStatObject, \n        // sendDataToChart, \n        toggleSelectAll, \n        batchCardUpdate, \n        batchChartUpdate, \n        batchUnselect, \n        updatePlayers \n    }) (PlayerSelector)\n","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nimport { Line } from \"react-chartjs-2\";\n\nimport { connect } from 'react-redux';\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\n\nclass PlayerStatsModal extends Component {\n    \n    render() {\n        return (\n            <div className=\"player_modal\">\n                <Modal isOpen={this.props.playerModal} toggle={this.toggle} centered={true} size={\"lg\"}>\n                    <ModalHeader className=\"modal_header\"> {this.props.playerModalData.name} </ModalHeader>\n                    <ModalBody>\n                        <Line\n                            data={this.props.playerModalData.data}\n                            options={{\n                                    responsive: true,\n                                    maintainAspectRatio: false,\n                                    }}\n                            />\n                    </ModalBody>\n                    <ModalFooter>\n                        <button className=\"contrast_color content_button\" onClick={()=> this.props.togglePlayerModal(false, {name: \"\", data:{}})}> Close </button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    playerModal: state.stats.playerModal,\n    playerModalData: state.stats.playerModalData\n})\n\nexport default connect(mapStateToProps, { togglePlayerModal }) (PlayerStatsModal)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { toggleViews } from \"../../js/actions/statsActions\"\nimport { toggleSortOptions } from \"../../js/actions/statsActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\nimport PlayerStatsModal from \"./PlayerStatsModal\"\n\nimport _ from \"underscore\"\n\n\nclass Showcase extends Component {\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    toggleSort(tab, currentStatus, ascArrow){\n        this.props.toggleSortOptions(tab, currentStatus, ascArrow)\n    }\n    // Stats in Modal\n    showPlayerStats(playerName, playerID){\n        // we need to filter games that the player has played to show relevant stats\n        // we have sorted the gamesSelected array chronologically for convenience\n        let playerStats = this.props.gamesInChronoOrder.reduce((broomballer, game) => {\n            broomballer.name = playerName\n            broomballer.gamesPlayed = broomballer.gamesPlayed || []\n            broomballer.goals = broomballer.goals || []\n            broomballer.assists = broomballer.assists || []\n            if (game.players.filter(player => player._id === playerID && player.gameInfo.available === true).length !== 0) {\n                broomballer.gamesPlayed.push(game._id)\n                // we filter the array of players with the matching ID (it creates a remapped array of one element if applicable, \n                // gameInfo, therefore the data we want is at index 0 of gameInfo)\n                let gameInfo = game.players.filter(player => player._id === playerID).map(player => player.gameInfo)\n                broomballer.goals.push( gameInfo[0].goals )\n                broomballer.assists.push( gameInfo[0].assists )\n            }            \n            return broomballer\n            }, {});\n        // creating the ChartJS object:    \n        let playerInfo = {\n            name: playerName,\n            data: {\n                labels: playerStats.gamesPlayed,\n                datasets: [\n                    {\n                        label: \"Goals\",\n                        data: playerStats.goals,\n                        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        borderColor: 'rgba(255, 99, 132, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                        lineTension: 0,\n                    },\n                    {\n                        label: \"Assists\",\n                        data: playerStats.assists,\n                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        borderColor: 'rgba(54, 162, 235, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                        lineTension: 0,\n                    }\n                ]\n            }\n        };\n        // sending the data to the modal\n        this.props.togglePlayerModal(true, playerInfo)\n    }\n    \n    render() {\n        return (\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Sorting Options</h3>\n                    </div>\n                </div>\n                <div className={this.props.sortOptionsDisplay !== \"dead\" && this.props.numOfRecords > 0  ? \"content visible\" : \"content dead\"}>\n                    <div className={\"list_of_options \" + this.props.sortOptionsDisplay}>\n                        \n                            <button className={this.props.sortingOptions.azTab + \" tab_button\"} onClick={()=> this.toggleSort(\"az\", this.props.sortingOptions.azTab, this.props.sortingOptions.alphaAsc)}>A-Z <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.alphaDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.alphaAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gamesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"games\", this.props.sortingOptions.gamesTab, this.props.sortingOptions.gamesAsc)}>Games Played  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gamesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gamesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.winsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"wins\", this.props.sortingOptions.winsTab, this.props.sortingOptions.winsAsc)}>Games Won  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.winsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.winsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.lossesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"losses\", this.props.sortingOptions.lossesTab, this.props.sortingOptions.lossesAsc)}>Games Lost  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.lossesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.lossesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.tiesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"ties\", this.props.sortingOptions.tiesTab, this.props.sortingOptions.tiesAsc)}>Games Tied  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.tiesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.tiesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.goalsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"goals\", this.props.sortingOptions.goalsTab, this.props.sortingOptions.goalsAsc)}>Goals  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.goalsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.goalsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gpgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"gpg\", this.props.sortingOptions.gpgTab, this.props.sortingOptions.gpgAsc)}>GPG  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gpgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gpgAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.assistsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"assists\", this.props.sortingOptions.assistsTab, this.props.sortingOptions.assistsAsc)}>Assists  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.assistsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.assistsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.apgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"apg\", this.props.sortingOptions.apgTab, this.props.sortingOptions.apgAsc)}>APG <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.apgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.apgAsc + \" sorting_arrow\"} /> </span> </button>\n                    \n                    </div>\n                </div>\n                <div className=\"records \">\n                \n                {this.props.playerRecords ? this.props.playerRecords.map(object => {\n                    return (\n                        <div key={object._id} className={object.preferredPosition === this.props.positionVisibility ? \"hidden_card wrapping_card_div\" : \"visible wrapping_card_div\" } onClick={()=> this.showPlayerStats(object.name, object._id)}>\n                            <div className={object.membershipStatus === \"Member\" ? \"member_record player_card \" : \"non_member_record player_card\"}>\n                            \n                                <div className=\"player_name\">{object.name} <span className=\"position_dot\"> <FontAwesomeIcon icon=\"circle\" className={object.preferredPosition} /> </span></div>\n                                <div className=\"player_data\">\n                                    <p><span className=\"entry\">Games Played:</span> <span className=\"value\">{object.gamesPlayed}</span>/{this.props.selectedGames.length}</p>\n                                    <p><span className=\"entry\">W/L/T:</span> <span className=\"value\">{ object.winPercent !== \"N/A\" ? object.winPercent + \"%\" : object.winPercent } - { object.lossPercent !== \"N/A\" ? object.lossPercent + \"%\" : object.lossPercent } - { object.tiePercent !== \"N/A\" ? object.tiePercent + \"%\" : object.tiePercent } </span> </p>\n                                    <p><span className=\"entry\">Goals:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.goals : \"N/A\"}</span>\n                                    <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.gpg : \"N/A\"}</span></span></p>\n                                    <p><span className=\"entry\">Assists:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.assists : \"N/A\"}</span>\n                                    <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.apg : \"N/A\"}</span></span></p>\n                                </div>\n                            </div>\n                        </div>\n                        )}\n                        ) : null }\n                </div>\n                {/* </div> */}\n                <PlayerStatsModal isOpen={this.props.playerModal} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    gamesInChronoOrder: _.sortBy(state.stats.selectedGames,\"_id\"),\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    playerRecords: state.stats.filteredPlayerRecords,\n    numOfRecords: state.stats.filteredPlayerRecords ? state.stats.filteredPlayerRecords.length : 0,\n    sortingOptions: state.stats.sortingOptions,\n    forwardSelection: state.stats.selectors.forwardSelection,\n    defenseSelection: state.stats.selectors.defenseSelection,\n    goalieSelection: state.stats.selectors.goalieSelection,\n    positionVisibility: state.stats.selectors.positionVisibility,\n    playerModal: state.stats.playerModal,\n})\n\nexport default connect(mapStateToProps, { toggleViews, toggleSortOptions, togglePlayerModal, }) (Showcase)\n\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSquare } from '@fortawesome/free-regular-svg-icons'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByType } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByGames } from '../../js/actions/statsActions'\n\nclass Filters extends Component {\n\n    playerSelection(setting, status){\n        switch (setting) {\n            case \"offense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({offense: \"unselected\", defense: this.props.defense, goalie: this.props.goalie})\n            }\n            else {\n                this.props.filterPlayerRecordsByType({offense: \"selected\", defense: this.props.defense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"defense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({defense: \"unselected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({defense: \"selected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"goalie\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({goalie: \"unselected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({goalie: \"selected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            break;\n\n            default:\n            return;\n        }\n    }\n\n\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    gameSelection(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        switch (name) {\n            case \"operator\":\n            this.props.filterPlayerRecordsByGames({[name]: value, gamePercent: this.props.gamePercent})\n            break;\n            \n            case \"gamePercent\":\n            this.props.filterPlayerRecordsByGames({operator: this.props.operator, [name]: value})\n            break;\n\n            default: \n            return;\n        }\n    }\n    render() {\n        return(\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Filters</h3>\n                    </div>\n                </div>\n            <div className={\"content \" + this.props.sortOptionsDisplay}>\n                <div className=\"list_of_options\">\n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Players</h3>\n                        <ul className=\"check_list\">\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"offense\",  this.props.offense)}>{ this.props.offense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\"/> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\"/>}  Offense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"defense\",  this.props.defense)}>{ this.props.defense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Defense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"goalie\",  this.props.goalie)}>{ this.props.goalie === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Goalies</li>        \n                        </ul> \n                    </div>\n                    \n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Attendance</h3>\n                            <ul className=\"check_list\">\n                                <li className=\"filter_item\">Played \n                                <select className=\"custom-select\" name=\"operator\" onChange={(event) => this.gameSelection(event)} value= {this.props.operator}>\n                                    <option value=\"+\"> more than </option>\n                                    <option value=\"-\"> less than </option>\n                                </select>\n                                <select className=\"custom-select\" name=\"gamePercent\" onChange={(event) => this.gameSelection(event)} value= {this.props.gamePercent}>\n                                    <option value=\"100\"> 100% </option>\n                                    <option value=\"90\"> 90% </option>\n                                    <option value=\"80\"> 80% </option>\n                                    <option value=\"70\"> 70% </option>\n                                    <option value=\"60\"> 60% </option>\n                                    <option value=\"50\"> 50% </option>\n                                    <option value=\"40\"> 40% </option>\n                                    <option value=\"30\"> 30% </option>\n                                    <option value=\"20\"> 20% </option>\n                                    <option value=\"10\"> 10% </option>\n                                    <option value=\"0\"> 0% </option>\n                                </select>\n                                    of the games </li>\n                            </ul> \n                    </div>\n\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    datePickers: state.stats.datePickers,\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    offense: state.stats.playerFilters.offense,\n    defense: state.stats.playerFilters.defense,\n    goalie: state.stats.playerFilters.goalie,\n    operator: state.stats.gameFilters.operator,\n    gamePercent: state.stats.gameFilters.gamePercent,\n})\n\nexport default connect(mapStateToProps, { toggleViews, filterPlayerRecordsByType, filterPlayerRecordsByGames }) (Filters)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {HorizontalBar} from \"react-chartjs-2\";\n// see https://www.npmjs.com/package/react-chartjs-2 for documentation\n\n// defaults.global.barThickness = 20;\nclass DataChart extends Component {\n    \n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"chart\")\n    }\n\n    render(){\n        \n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.chartDisplay)}> {this.props.chartDisplay === \"dead\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Show Chart</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        \n                        <div className={\"chart \" }>\n                            {this.props.chartData && this.props.chartDisplay !== \"dead\" ?  \n                            <div className=\"chartAreaWrapper\">\n                                <HorizontalBar\n                                    data={this.props.curatedChartData}\n                                    height= { this.props.chartData.labels.length * 50 }\n                                    className= { this.props.chartDisplay }\n                                    options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false,\n                                            barThickness: 100\n                                            }}\n                                    />\n                            </div> : null }  \n                        </div>\n                    </div>\n                </div>\n                )\n\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    chartData: state.stats.chartData,\n    curatedChartData: state.stats.curatedChartData,\n    chartDisplay: state.stats.chartDisplay,\n    chartingOptions: state.stats.chartingOptions,\n})\n\nexport default connect(mapStateToProps, { toggleViews }) (DataChart)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\n\nimport NavBar from \"../components/NavBar.js\"\nimport DateSelector from \"../components/RecordsPageComp/DateSelector.js\"\nimport GameSelector from \"../components/RecordsPageComp/GameSelector.js\"\nimport PlayerSelector from \"../components/RecordsPageComp/PlayerSelector.js\"\nimport Showcase from \"../components/RecordsPageComp/Showcase.js\"\nimport Filters from \"../components/RecordsPageComp/Filters.js\"\nimport DataChart from \"../components/RecordsPageComp/DataChart.js\"\nclass Records extends Component { \n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main main_padded\"> \n            <h1 className=\"h1_main\">League Records</h1>\n            \n            <section>\n                < DateSelector />\n            </section>\n            \n            <section>\n                < GameSelector />\n            </section>\n            \n            <section>\n                < PlayerSelector />\n            </section>\n            \n            <section>\n                < DataChart />\n            </section>\n\n            <section>\n                < Showcase />\n            </section>\n\n            <section>\n                < Filters />\n            </section>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    games: state.games.games\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps) (Records)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n\nimport { updateUserForm } from '../js/actions/authenticateActions';\nimport { createNewUser } from '../js/actions/authenticateActions';\nimport { authenticateUser } from '../js/actions/authenticateActions';\n\nclass LoginForm extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n    handleCancel(event) {\n        event.preventDefault()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedUser = {...this.props.user, [name]: value}\n        this.props.updateUserForm(editedUser)\n        // this.setState({...this.state, [name]: value})\n        \n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.props.in === \"show\") {\n            console.log(\"Sign-in mode activated\")\n            let user = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                }\n            this.props.authenticateUser(\"local\", user)\n            }\n        else {\n            let newUser = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                email: this.props.user.email,\n                privilege: \"user\"\n                }\n            // let id = this.props.player._id\n            this.props.createNewUser(newUser)\n        }\n\n        // go back to tab#1\n        // this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Username: </label>\n                            <input \n                                type=\"text\" \n                                name=\"username\"\n                                value= {this.props.user.username}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Password: </label>\n                            <input \n                                type=\"text\" \n                                name=\"password\"\n                                value= {this.props.user.password}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        {this.props.up === \"show\" ? (\n                            <div className=\"field\">\n                                <label>Email: </label>\n                                <input \n                                    type=\"text\" \n                                    name=\"email\"\n                                    value= {this.props.user.email}\n                                    onChange={(event) => this.handleChange(event)}\n                                    />\n                            </div>\n                        ) : null}\n                        <div className=\"button_container\">\n                            {this.props.in === \"show\" ? \n                                <button type=\"submit\" value=\"Log In\" className=\"contrast_color\"> Sign in </button> \n                                :\n                                <button type=\"submit\" value=\"submit\" className=\"contrast_color\"> Sign up </button>\n                            } \n                            <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    user: state.authenticate.user,\n    in: state.authenticate.tabs[0],\n    up: state.authenticate.tabs[1]\n})\n\nexport default connect(mapStateToProps, { updateUserForm, createNewUser, authenticateUser }) (LoginForm)","import {\n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE\n} from \"./types\"\n\nimport { saveState } from \"../../components/sessionStorage\"\n\nimport API from \"../../utils/API\"\n\nexport const updateUserForm = (data) => dispatch => {\n    dispatch({\n        type: UPDATE_USER_FORM,\n        payload: data\n    })\n}\n\nexport const createNewUser = ( newUser ) => dispatch => {\n    API.addNewUser( newUser).then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NEW_USER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n    dispatch({\n        type: SIGN_MODE,\n        payload: id\n    })\n}\n\nexport const authenticateUser = (method, user) => dispatch => {\n    console.log(\"data in authenticateUser authenticateActions.js: \", user)\n    if (method === \"local\") {\n        API.authenticateUser(\"local\", user).then(res => {\n            if (!res.data.errmsg) {\n                console.log(\"Response from authentication API: \", res.data)\n                // dispatch({\n                //     type: SETTING_USER_PRIVILEGES,\n                //     payload: res.data\n                // })\n                switch (res.data.privilege) {\n                    case \"SuperAdmin\":\n                    saveState({\n                        SuperAdmin: true,\n                        draftTeams: true,\n                        changeAvailability: true,\n                        createGame: true,\n                        deleteGame: true,\n                        editScore: true,\n                        changeLock: true,\n                        createPlayer: true,\n                        editMember: true,\n                        deleteMember: true,\n                        editTenBucker: true,\n                        deleteTenBucker: true\n                    })\n\n                    break;\n\n                    default:\n                    return;\n                }\n            }\n        })\n    }\n}\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from \"../js/actions/authenticateActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport LoginForm from \"../components/LoginForm.js\";\n\nclass Login extends Component { \n\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide_tab\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_alternate\">\n            <h1 className=\"h1_alternate\">Login</h1>\n            <div className=\"two_tab_centering\">\n                <span id=\"1\" className={\"auth_tab \" + this.props.tab1 } onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Sign-in </span>\n                <span id=\"2\" className={\"auth_tab \" + this.props.tab2 } onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Sign-up </span>\n            </div>\n            <div className= \"main_for_tab\">\n                <LoginForm />\n            </div>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    tab1: state.authenticate.tabs[0],\n    tab2: state.authenticate.tabs[1],\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleTabStatus } ) (Login)\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    DELETE_GAME, \n    GET_GAME, \n    EDIT_GAME_INFO, \n    RESET,\n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE,\n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS,\n    HIDE_NON_MEMBERS, \n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO,\n    UNLOCK_GAME_INFO,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n} from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    games: [],\n    upcomingGames: [],\n    pastGames: [], // games showing in the \"Past Games\" list of Draft.js. Sorted from recent to old\n    gameInfo: {\n        goals: 0,\n        assists: 0,\n        darkPickNum: 0,\n        whitePickNum: 0,\n        available: true,\n        team: \"N/A\"\n    },\n    visibility: {\n        top: \"dead\",\n        main: \"dead\",\n        bottom: \"dead\",\n        gameStats: \"dead\",\n        noStatsMessage: \"dead\",\n    },\n    gameDate: \"\",\n    draft: {},\n    unavailableMembers: [],\n    allTenBuckers: [],\n    notPlayingNonMembers: [],\n    playingNonMembers: [],\n    lockStatus: \"visible\", // this hides the arrows + delete icons if the game is locked\n    showingNonPlayingTenBuckers: \"Show\",    // which means this section is hidden\n    showingUnavailableMembers: \"Show\",      // which means this section is hidden\n    draftMode: \"Draft\",\n    pickButtons: {\n        left: \"Set Dark Picks\",\n        right: \"Set White Picks\"\n    },\n    picked: [],\n    unpicked: [],\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_GAMES:\n        return {\n            ...state,\n            games: action.payload,\n            upcomingGames: action.payload.filter(game => game._id >= moment().format(\"YYYY-MM-DD\")),\n            pastGames: _.sortBy(action.payload.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n        }\n        \n        case DELETE_GAME:\n        return {\n            ...state,\n            visibility: initialState.visibility,\n            games: state.games.filter(game => game._id !== action.payload._id),\n            upcomingGames: state.upcomingGames.filter(game => game._id !== action.payload._id),\n            pastGames: _.sortBy(state.pastGames.filter(game => game._id !== action.payload._id),\"_id\").reverse(),\n            lockStatus: \"hidden\",\n            draftMode: initialState.draftMode,\n            pickButtons: initialState.pickButtons,\n            }\n\n\n        case NEW_GAME:\n        return {\n            ...state,\n            games: _.sortBy([...state.games, action.payload], \"game_date\"),\n            upcomingGames: action.payload._id >= moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.upcomingGames], \"game_date\") : state.upcomingGames,\n            pastGames: action.payload._id < moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.pastGames], \"game_date\").reverse() : state.pastGames \n        }\n\n        case GET_GAME:\n        return {\n            ...state,\n            draftMode: initialState.draftMode,\n            gameDate: action.payload.game._id,\n            draft: action.payload.game,\n            // This hides the locker if \n            lockStatus: action.payload.game.lock_status === true ? \"hidden\" : \"visible\",\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.game.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            // We initiate the array of playing ten-buckers here (for them to not get added twice, this array will be check against when clicking on add non-member)\n            playingNonMembers: action.payload.game.players.filter(player => player.membershipStatus !== \"Member\"),\n            visibility: {\n                top: \"visible\", \n                main: \"visible\", \n                bottom: \"visible\",\n                gameStats: action.payload.gameStats,\n                noStatsMessage: action.payload.noStatsMessage\n            }\n        }\n\n        case EDIT_GAME_INFO:\n        return {\n            ...state,\n            draft: action.payload.game,\n        }\n        \n        case RESET:\n        return {\n            ...state,\n            draft: action.payload,\n            unavailableMembers: initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            playingNonMembers: initialState.playingNonMembers,\n            picked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case MAKE_MEMBER_UNAVAILABLE:\n        return {\n            ...state,\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            draft: action.payload\n        }\n\n        case MAKE_TEN_BUCKER_UNAVAILABLE:\n        return {\n            /* The Ten Buckers are managed outside of the \"game\" object. If they would just be set as \"Unavailable\" like Members, duplicates may be created.\n            They need to be removed from the game object altogether. Therefore, their status is handled in the reducer once sent to the state.\n            The allTenBuckers array that populates after a click is making this easier: when a Ten Bucker is set as unavailable, it is filtered \n            out of the array of playingNonMembers. It is also added to the array of notPlayingNonMembers: their data is checked agains the array of allTenBuckers\n            via a filter. It creates an array of 1 element, that we add to the notPlayingNonMembers array by extracting its index 0 */\n            ...state,\n            draft: action.payload.gameData,\n            notPlayingNonMembers: state.showingNonPlayingTenBuckers === \"Hide\" ? _.sortBy([...state.notPlayingNonMembers, state.allTenBuckers.filter(player => player._id === action.payload.player)[0]],\"name\") : initialState.notPlayingNonMembers,\n            playingNonMembers: state.playingNonMembers.filter(player => player._id !== action.payload.player),\n        }\n        // this case only deals with Members as Ten Buckers are handled separately through ADD_NON_MEMBER\n        case MAKE_MEMBER_AVAILABLE:\n        return {\n            ...state,\n            // removing properly from the array of unavailable players\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? (state.draft.players.filter(player => player.gameInfo.available === false && player.membershipStatus === \"Member\" && player._id !== action.payload.player)) : initialState.unavailableMembers,\n            draft: action.payload.game,\n        }\n\n        case SHOW_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: state.draft.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false),\n            showingUnavailableMembers: \"Hide\"\n        }\n        \n        case HIDE_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: initialState.unavailableMembers,\n            showingUnavailableMembers: \"Show\"\n        }\n\n        case SHOW_NON_MEMBERS:\n        return {\n            ...state,\n            allTenBuckers: action.payload.all,\n            notPlayingNonMembers: action.payload.new,\n            showingNonPlayingTenBuckers: \"Hide\"\n        }\n\n        case HIDE_NON_MEMBERS:\n        return {\n            ...state,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            showingNonPlayingTenBuckers: \"Show\"\n        }\n        \n        case ADD_NON_MEMBER:\n        return {\n            ...state,\n            draft: action.payload.players,\n            notPlayingNonMembers: state.notPlayingNonMembers.filter(player => player._id !== action.payload.player._id),\n            playingNonMembers: [action.payload.player, ...state.playingNonMembers]\n        }\n\n        case LOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n        \n        case UNLOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n\n        case TRIGGER_PICK_MODE:\n        return {\n            ...state,\n            draftMode: action.payload.team,\n            pickButtons: action.payload.buttons,\n            visibility: {top: \"hidden\", main: \"visible\", bottom: \"visible\"},\n            // as opposed to the \"SET_PICK\" case, the filtering needs to happen in the reducer, as it is based on data already stored in the state (not coming from API)\n            picked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case TRIGGER_DRAFT_MODE:\n        return {\n            ...state,\n            draftMode: \"Draft\",\n            visibility: {top: \"visible\", main: \"visible\", bottom: \"visible\"},\n            pickButtons: initialState.pickButtons\n        }\n\n        case SET_PICK:\n        return {\n            ...state,\n            draft: action.payload.game,\n            picked: action.payload.picked,\n            unpicked: action.payload.unpicked\n            \n        }\n\n        default: \n        return state;\n    }\n}","import { SHOW_FUTURE, SHOW_PAST } from '../actions/types';\nconst moment = require(\"moment\");\n\nconst initialState = {\n    showing: \"future\",\n    upcoming_visibility: \"visible\",\n    past_visibility: \"hidden\",\n    dateHeader: \"Upcoming\",\n    buttonMsg: \"Past\",\n    today: moment().format(\"YYYY-MM-DD\")    \n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_FUTURE:\n        return {\n            ...state,\n            upcoming_visibility: \"visible\",\n            past_visibility: \"hidden\",\n            dateHeader: \"Upcoming\",\n            buttonMsg: \"Past\",\n            showing: \"future\",\n        }\n        \n        case SHOW_PAST:\n        return {\n            ...state,\n            upcoming_visibility: \"hidden\",\n            past_visibility: \"visible\",\n            dateHeader: \"Past\",\n            buttonMsg: \"Upcoming\",\n            showing: \"past\"\n        }\n        \n        default:\n        return state;\n    }\n}","import { FETCH_PLAYERS, EDIT_PLAYER, ADD_PLAYER, DELETE_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from '../actions/types';\nimport _ from \"underscore\"\n\nconst initialState = {\n    players: [],\n    player: {\n        name: \"\",\n        fullName: \"\",\n        preferredPosition: \"Forward\",\n        membershipStatus: \"Member\",\n        email: \"\",\n        playerLevel: \"A+\"\n        },\n\n    tabs: [\"show_tab\",\"hide_tab\",\"hide_tab\"],\n    panels: [\"visible\", \"hidden\", \"hidden\"],\n    \n    formMode: \"Add\"\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_PLAYERS:\n        return {\n            ...state,\n            players: action.payload\n        }\n\n        case ADD_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([...state.players, action.payload], \"name\")\n        }\n\n        case DELETE_PLAYER:\n        return {\n            ...state,\n            deletedPlayer: action.payload,\n            players: state.players.filter(player => player._id !== action.payload._id)\n        }\n        \n        case EDIT_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([action.payload, ...state.players.filter(player => player._id !== action.payload._id)], \"name\")\n        }\n        \n        case SHOW_TAB:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide_tab\"} else {return tab = \"show_tab\"}}),\n            panels: state.panels.map((panel, index) => {if(index !== action.payload) {return panel = \"hidden\"} else {return panel = \"visible\"}})\n        }\n\n        case RESET_TABS:\n        return {\n            ...state,\n            player: initialState.player,\n            formMode: \"Add\",\n            tabs: initialState.tabs,\n            panels: initialState.panels,\n        }\n\n        case EDIT_FORM:\n        return {\n            ...state,\n            formMode: \"Edit\",\n            tabs: [\"hide_tab\",\"hide_tab\",\"show_tab\"],\n            panels: [\"hidden\", \"hidden\", \"visible\"],\n            player: action.payload\n        }\n\n        case UPDATE_FIELD:\n        return {\n            ...state,\n            player: action.payload\n        }        \n\n        default: \n        return state;\n    }\n}","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES,\n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES\n    } from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    visibility: \"dead\",\n    message: \"Teams have not been drafted for this team yet. Please come back later!\",\n    gamesForRecords: [],\n    pastGamesFromAPI: [],\n    reducedGames: [],\n    gameVisibility: [],\n    selectedGames: [],\n    unselectedGames: [],\n    selectedPlayers: [],\n    unselectedPlayers: [],\n    datePickers: \"visible\",\n    listOfGames: \"dead\",\n    listOfPlayers: \"dead\", \n    sortOptionsDisplay: \"dead\",\n    chartDisplay: \"dead\",\n    playerRecords: [],\n    arrayOfTenBuckersID: [],\n    sortingOptions:\n        {\n            alphaDesc: \"active\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"selected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\",\n        },\n    chartingOptions: {\n        gamesTab: \"selected_chart_games\",\n        winsTab: \"selected_chart_wins\",\n        goalsTab: \"selected_chart_goals\",\n        gpgTab: \"selected_chart_gpg\",\n        assistsTab: \"selected_chart_assists\",\n        apgTab: \"selected_chart_apg\",\n        },\n    chartData: {\n        labels: [],\n        datasets: [\n            {\n                label: \"Goals\",\n                data: [],\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: \"Assists\",\n                data: [],\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Games\",\n                data: [],\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Wins (%)\",\n                data: [],\n                backgroundColor: 'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                hoverBorderColor: 'rgba(75,192,192,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Losses (%)\",\n                data: [],\n                backgroundColor: '#d3b8ae',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#d3b8ae',\n                hoverBorderColor: '#d3b8ae',\n                barThickness: 15,\n            },\n            {\n                label: \"Ties (%)\",\n                data: [],\n                backgroundColor: '#ff8a65',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#ff8a65',\n                hoverBorderColor: '#ff8a65',\n                barThickness: 15,\n            },\n            {\n                label: \"GPG\",\n                data: [],\n                backgroundColor: 'rgba(153,102,255,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                hoverBorderColor: 'rgba(153,102,255,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"APG\",\n                data: [],\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                options: {barThickness: 100},\n            },\n        ]\n    },\n    memberSelection: \"unselected_member\",\n    tenBuckerSelection: \"unselected_non_member\",\n    selectors: {\n        forwardSelection: \"unselected_forward\",\n        goalieSelection: \"unselected_goalie\",\n        defenseSelection: \"unselected_defense\",\n        positionVisibility: \"all\"\n        },\n    playerModal: false,\n    playerModalData: {},\n    allGamesSelection: \"unselected_game\",\n    playerFilters: {\n            offense: \"selected\",\n            defense: \"selected\",\n            goalie: \"selected\"\n    },\n    gameFilters: {\n            operator: \"+\",\n            gamePercent: \"0\",\n    },\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_GAMES_TO_STATS:\n        return {\n            ...state,\n            visibility: \"visible\",\n        }\n            \n        case GET_GAMES_AND_TRANSFORM:\n        return {\n            ...state,\n            reducedGames: action.payload.game,\n            gameVisibility: action.payload.visibility,\n        }\n\n        case GET_GAMES_IN_TIMESPAN:\n        return {\n            ...state,\n            pastGamesFromAPI: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            gamesForRecords: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            arrayOfTenBuckersID: action.payload.allTenBuckers,\n        }\n\n        case SET_YEARS_VISIBILITIES:\n        return {\n            ...state, \n            gameVisibility: action.payload\n        }\n\n        case ADD_GAME_TO_SELECTED:\n        return {\n            ...state,\n            selectedGames: [...state.selectedGames, action.payload],\n            unselectedGames: state.unselectedGames.filter(game => game._id !== action.payload._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.playerFilters\n        }\n\n        case REMOVE_GAME_FROM_SELECTED:\n        return {\n            ...state,\n            selectedGames: state.selectedGames.filter(game => game._id !== action.payload._id),\n            unselectedGames: [...state.unselectedGames, action.payload],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case ADD_PLAYER_TO_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: [...state.selectedPlayers, action.payload.selected],\n            unselectedPlayers: state.unselectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case REMOVE_PLAYER_FROM_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: state.selectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            unselectedPlayers: [...state.unselectedPlayers, action.payload.selected],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters\n        }\n        \n        case TOGGLE_RECORDS_VIEWS:\n        return {\n            ...state,\n            datePickers: action.payload.dates,\n            listOfGames: action.payload.games,\n            listOfPlayers: action.payload.players, \n            sortOptionsDisplay: action.payload.sort,\n            chartDisplay: action.payload.chart\n        }\n\n        case ADD_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\"),\n            filteredPlayerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\")\n        }\n\n        case REMOVE_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\"),\n            filteredPlayerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\")\n        }\n\n        case REPLACE_PLAYERS_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(action.payload, \"name\"),\n            filteredPlayerRecords: _.sortBy(action.payload, \"name\"),\n        }\n\n        case SORT_AZ_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\").reverse()\n        }\n\n        case SORT_AZ_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\"),\n        }\n\n        case SORT_GAMES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\")\n        }\n\n        case SORT_GAMES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\").reverse()\n        }\n\n        case SORT_WINS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\")\n        }\n\n        case SORT_WINS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\").reverse(),\n        }\n\n        case SORT_LOSSES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\")\n        }\n\n        case SORT_LOSSES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\").reverse(),\n        }\n\n        case SORT_TIES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\")\n        }\n\n        case SORT_TIES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\").reverse(),\n        }\n\n        case SORT_GOALS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\"),\n        }\n        \n        case SORT_GOALS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\").reverse(),\n        }\n        \n        case SORT_ASSISTS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\"),\n        }\n        \n        case SORT_ASSISTS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\").reverse(),\n        }\n\n\n        case SORT_GPG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\")\n        }\n\n        case SORT_GPG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\").reverse(),\n        }\n\n        case SORT_APG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\"),\n        }\n\n        case SORT_APG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\").reverse(),\n        }\n\n        case SET_DATE_RANGE:\n        return {\n            ...state,\n            dateRange: action.payload,\n            gamesForRecords: state.pastGamesFromAPI.filter(game => game._id >= action.payload.from && game._id <= action.payload.to)\n        }\n        \n        case TOGGLE_SELECT_ALL:\n        return {\n            ...state,\n            memberSelection: action.payload.player === \"member\" ? action.payload.memberSelection : state.memberSelection,\n            tenBuckerSelection: action.payload.player !== \"member\" ? action.payload.tenBuckerSelection : state.tenBuckerSelection,\n        }\n        \n        case BATCH_CARD_UPDATE:\n        return {\n            ...state,\n            // playerRecords: _.sortBy(action.payload.concat(state.playerRecords), \"name\"),\n            playerRecords: action.payload.concat(state.playerRecords.filter(player => player._id !== action.payload._id))\n        }\n\n        case BATCH_CHART_UPDATE:\n        return {\n            ...state,\n            chartData: action.payload,\n            curatedChartData: action.payload,\n        }\n\n        case BATCH_UNSELECT:\n        return {\n            ...state,\n            playerRecords: _.sortBy(state.playerRecords.filter(player => player.membershipStatus !== action.payload), \"name\")\n        }\n\n        case TOGGLE_PLAYER_MODAL:\n        return {\n            ...state, \n            playerModal: action.payload.status,\n            playerModalData: action.payload.data\n        }\n        case BATCH_GAMES:\n        return {\n            ...state, \n            allGamesSelection: action.payload === \"unselected_game\" ? \"selected_game\" : \"unselected_game\"\n        }\n\n        case UNSELECT_ALL_GAMES:\n        return {\n            ...state, \n            selectedGames: initialState.selectedGames,\n            unselectedGames: state.pastGamesFromAPI,\n            allGamesSelection: \"unselected_game\"\n        }\n        // Currently, the gameFilters and playerFilters cannot operate simultaneously. Therefore, playing with one should reset the other (to avoid confusion) \n        case FILTER_PLAYER_RECORDS_BY_TYPE:\n        return {\n            ...state,\n            gameFilters: initialState.gameFilters,\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: action.payload.playerFilters,\n            // \"only\", means that the players have to match a certain condition (hence: \"===\"), \"but\", means that matching players should be filtered out (\"!==\")\n            filteredPlayerRecords: action.payload.operator === \"only\" ? _.sortBy(state.playerRecords.filter(player => player.preferredPosition === action.payload.playerType),\"name\") : _.sortBy(state.playerRecords.filter(player => player.preferredPosition !== action.payload.playerType),\"name\") \n        }\n\n        case FILTER_PLAYER_RECORDS_BY_GAMES:\n        return {\n            ...state,\n            playerFilters: initialState.playerFilters,\n            sortingOptions: initialState.sortingOptions,\n            gameFilters: action.payload,\n            filteredPlayerRecords: action.payload.operator === \"-\" ? _.sortBy(state.playerRecords.filter(player => player.gamesPlayed < state.selectedGames.length * action.payload.gamePercent / 100), \"name\") : _.sortBy(state.playerRecords.filter(player => player.gamesPlayed > state.selectedGames.length * action.payload.gamePercent / 100), \"name\")\n        }\n\n        default:\n        return state;\n    }\n}","import { \n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE,\n} from \"../actions/types\"\n\nconst initialState = {\n    user: \n        {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n        },\n    tabs: [\"show_tab\",\"hide_tab\"], // this is used in the sign-in/sign-up user form\n    // superAdminPrivileges: false,\n    // adminPrivileges: false,\n    // draftPrivileges: false,\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_USER_FORM:\n        return {\n            ...state,\n            user: action.payload,\n        }\n\n        case ADD_NEW_USER:\n        return {\n            ...state,\n            user: initialState.user\n        }\n\n        case SIGN_MODE:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide_tab\"} else {return tab = \"show_tab\"}})\n        }\n        \n        default: \n        return state;\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./gameReducer\"\nimport displayReducer from \"./displayReducer\"\nimport playerReducer from \"./playerReducer\"\nimport statsReducer from \"./statsReducer\"\nimport authenticateReducer from \"./authenticateReducer\"\n\nexport default combineReducers({\n    games: gameReducer,\n    display: displayReducer,\n    players: playerReducer,\n    stats: statsReducer,\n    authenticate: authenticateReducer,\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {}\nconst middleware = [thunk]\n\n// createStore is the function for creating the Redux store\n\n// since it crashes on Safari, and Chrome in incognito mode, we only install Redux DevTools on Chrome in Dev Mode\nif (window.navigator.userAgent.includes('Chrome') && window.location.origin === \"http://localhost:3000\") {\n    var store = createStore(\n        rootReducer, \n        initialState, \n        compose(\n            applyMiddleware(...middleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n            )\n        );\n} else {\n    store = createStore(\n        rootReducer, \n        initialState,\n        compose(\n            applyMiddleware(...middleware)\n            )\n        )\n}\n\n\nexport default store;","\nimport React from 'react';\n// React router\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// const Home = React.lazy(() => import(\"./pages/Home\"));\nimport Home from \"./pages/HomePage.js\";\nimport Draft from \"./pages/DraftPage.js\";\nimport Player from \"./pages/PlayerPage.js\";\nimport Stats from \"./pages/StatsPage.js\";\nimport Records from \"./pages/RecordsPage.js\";\nimport Login from \"./pages/LoginPage.js\";\nimport './styles/css/App.css';\n\n// Redux \nimport { Provider } from 'react-redux'\nimport store from \"./js/store\"\n// Font-Awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { \n  faChevronUp, \n  faChevronDown, \n  faMinusCircle, \n  faTimesCircle, \n  faArrowCircleLeft, \n  faAngleRight, \n  faPlusCircle, \n  faTimes, \n  faPlus, \n  faCaretDown, \n  faCaretRight, \n  faLongArrowAltUp, \n  faLongArrowAltDown, \n  faCircle,\n  faLock,\n  faUnlockAlt,\n  // faSquare,\n  faCheckSquare\n  } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faChevronUp, faChevronDown, faMinusCircle, faTimesCircle, faArrowAltCircleRight, faArrowCircleLeft, faAngleRight, faPlusCircle, faMinusCircle, faTimes, faPlus, faCaretDown, faCaretRight, faLongArrowAltUp, faLongArrowAltDown, faCircle, faLock, faUnlockAlt, /* faSquare,*/ faCheckSquare)\n// const Records = React.lazy(() => import('./pages/Records'));\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={Home} />\n          <Route path=\"/Draft\" component={Draft} />\n          <Route path=\"/Player\" component={Player} />\n          <Route path=\"/Stats\" component={Stats} />\n          <Route path=\"/Records\" component={Records} />\n          {/* <Route path=\"/Records\" render={() => (<Suspense fallback={<div>Loading...</div>}> <Records /></Suspense>)}/> */}\n          <Route path=\"/Login\" component={Login} />\n          <Route path=\"/*\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>\n\n);\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/logo_sm.afca9f0c.jpeg\";"],"sourceRoot":""}