{"version":3,"sources":["components/NavBar.js","pages/HomePage.js","utils/API.js","js/actions/gameActions.js","js/actions/types.js","components/sessionStorage.js","components/DraftPageComp/GameList.js","js/actions/playerActions.js","components/DraftPageComp/Calendar.js","components/DraftPageComp/Drafter.js","components/DraftPageComp/SmallScreenDrafter.js","components/DraftPageComp/Picker.js","components/DraftPageComp/SmallScreenPicker.js","components/DraftPageComp/GameOptionsBottom.js","components/DraftPageComp/GameOptionsTop.js","components/Locker.js","pages/DraftPage.js","js/actions/displayActions.js","components/PlayerPageComp/Form.js","components/PlayerPageComp/MemberList.js","components/PlayerPageComp/TenBuckerList.js","pages/PlayerPage.js","js/actions/statsActions.js","components/StatsPageComp/PastGamesList.js","components/StatsPageComp/ScoreBoard.js","components/StatsPageComp/NoStatsBoard.js","pages/StatsPage.js","components/RecordsPageComp/DateRange.js","components/RecordsPageComp/DateSelector.js","components/RecordsPageComp/curateData.js","components/RecordsPageComp/GameSelector.js","components/RecordsPageComp/PlayerSelector.js","components/RecordsPageComp/PlayerStatsModal.js","components/RecordsPageComp/Showcase.js","components/RecordsPageComp/Filters.js","components/RecordsPageComp/DataChart.js","pages/RecordsPage.js","components/LoginForm.js","js/actions/authenticateActions.js","pages/LoginPage.js","js/reducers/gameReducer.js","js/reducers/displayReducer.js","js/reducers/playerReducer.js","js/reducers/statsReducer.js","js/reducers/authenticateReducer.js","js/reducers/index.js","js/store/index.js","App.js","registerServiceWorker.js","index.js","components/images/logo_sm.jpeg"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navDisplay","navItemsVisibility","status","setState","_this2","react_default","a","createElement","className","href","type","onClick","changeStatus","src","SmallLogo","alt","Component","Home","components_NavBar","currentURL","window","location","origin","API","url","axios","get","id","date","players","post","game_date","delete","gameId","data","put","player","userData","mode","getGame","game","dispatch","then","res","Error","statusText","gameStats","noStatsMessage","darkPlayers","filter","gameInfo","team","whitePlayers","length","payload","editGameInfo","setMemberUnavailable","setTenBuckerUnavailable","gameData","playerID","setAvailable","addNonMember","newPlayer","existingPlayers","newRoster","_","sortBy","toConsumableArray","concat","setPick","available","picked","darkPickNum","obj","unpicked","whitePickNum","loadState","serializedState","sessionStorage","getItem","JSON","parse","err","GameList","getGameInfo","deleteGameFunc","deleteGame","fetchGames","privileges","console","log","dateHeader","upcomingGames","map","key","_id","index_es","icon","pastGames","connect","games","display","today","buttonMsg","upcoming_visibility","past_visibility","lockStatus","fetchPlayers","deletePlayer","editForm","moment","require","Calendar","createGame","handleChange","bind","assertThisInitialized","handleSubmit","apply","dateSelected","event","preventDefault","membersWithGameInfo","membershipStatus","member","name","playerLevel","preferredPosition","dateOfGame","format","addGame","onSubmit","react_datepicker_es","placeholderText","selected","onChange","value","members","Drafter","draftTeams","changeAvailability","playerStatus","draft","objectSpread","tenBuckerToAdd","setUnavailable","faArrowAltCircleRight","assignTeam","gameDate","unavailableMembers","makeAvailable","notPlayingNonMembers","addTenBuckerToDraft","size","draftMode","SmallScreenDrafter","draftedDark","draftedWhite","undrafted","indexOfPlayerToRemove","indexOf","splice","unavailable","forEach","index","indexOfPlayerToEdit","addPick","removePick","rankOneUp","rankOneDown","GameOptionsBottom","randomize","inputArray","outputArray","randomPlayer","Math","floor","random","push","filterTeams","arrayOfPlayerObjects","rosterTeam1","e","rosterTeam2","testPick","inputObject","rankedPlayers","picks","nameOfTeam","serpentineDraft","num","darkPicks","whitePicks","num1","num2","modulo","completeRounds","i","unavailablePlayers","allPlayers","alternateDraft","resetPlayers","reset","mixedRosters","output","reduce","levels","numOutput","keys","playersArray","entries","arrayOfUnavailablePlayers","currentMode","triggerDraftMode","triggerPickMode","visibility","bottom","toggleMode","pickButtons","left","resetTeams","right","top","autodraft","buttons","GameOptionsTop","action","showUnavailable","hideUnavailable","tenBuckers","arrayOfIds","playingNonMembers","newTenBuckers","showNonMembers","hideNonMembers","showingUnavailableMembers","showingNonPlayingTenBuckers","gameParticipants","allTenBuckers","notPlayingTenBuckers","all","new","Locker","lockGameInfo","unlockGameInfo","unlockGame","lockGame","lock_status","screenSize","innerWidth","Draft","changeLock","currentlyShowing","toggleGames","DraftPageComp_Calendar","DraftPageComp_GameList","toggleGamesFunc","showing","DraftPageComp_GameOptionsTop","main","DraftPageComp_Drafter","DraftPageComp_SmallScreenDrafter","Picker","SmallScreenPicker","DraftPageComp_GameOptionsBottom","components_Locker","currentState","Form","createPlayer","handleCancel","resetTabs","target","editedPlayer","defineProperty","updateField","assignedLevel","fullName","email","formMode","addPlayer","editPlayer","defaultValue","tab1","tab2","panel1","panel2","errors","message","MemberList","editMember","deleteMember","sendPlayerToEditForm","TenBuckerList","editTenBucker","deleteTenBucker","Player","currentStatus","tabIndex","parseInt","toggleTabStatus","toggleStatus","tab3","PlayerPageComp_MemberList","PlayerPageComp_TenBuckerList","panel3","PlayerPageComp_Form","tabs","panels","getGamesForRecords","arrayOfTenBuckerIDs","array","toggleViews","element","dates","sort","chart","batchChartUpdate","newData","updatePlayers","togglePlayerModal","newStatus","PastGameList","getGamesAndTransform","visibleBefore","gameVisibility","slice","visibleAfter","newArray","setVisibility","object","values","_this3","_ref","_ref2","slicedToArray","renderGames","_this4","reverse","year","toggleVisibility","renderMonth","renderYear","reducedGames","stats","monthify","string","yearString","substring","monthString","difYears","arrayOfObjects","remapped","difMonths","beautifyGames","years","ScoreBoard","editScore","currentValue","goalUpdate","scoreUpdate","goals_dark","goals_white","win","playerUpdate","goals","assistUpdate","assists","logStat","NoStatsBoard","Stats","PastGamesList","StatsPageComp_NoStatsBoard","StatsPageComp_ScoreBoard","DateRange","handleChangeStart","handleChangeEnd","startDate","endDate","selectDateRange","datePickers","selectsStart","isClearable","selectsEnd","start","end","from","to","DateSelector","RecordsPageComp_DateRange","allGames","gamesForRecords","createCardsArray","arrayOfPlayers","arrayOfGames","transformedArrayForCards","broomballer","gamesPlayed","playerReduced","wins","losses","ties","gamePlayedFromArray","winsFromArray","lossesFromArray","tiesFromArray","winPercent","lossPercent","tiePercent","goalsFromArray","b","assistsFromArray","gpg","parseFloat","apg","Number","isInteger","toFixed","playerWithoutRecord","loss","tie","createChartData","arrayOfCards","labels","goalsArray","assistsArray","gamesPlayedArray","winPercentArray","lossPercentArray","tiePercentArray","gpgArray","apgArray","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barThickness","options","GameSelector","unselectGame","selectedGames","match","cardsArray","selectedPlayers","newObject","markAsSelected","selectedPlayersNum","selectAllGames","gameSelection","unselectAllGames","gamesSelected","includes","selectGame","unselectedGames","gamesUnselected","listOfGames","allGamesSelection","chartData","PlayerSelector","unselectPlayer","removePlayerStatObject","selectedGamesNum","addBatchChartData","toggleSelectAll","allMembersAndSelectedTenBuckers","selectAndTransform","batchUnselect","allTenBuckersAndSelectedMembers","arrayOfTenBuckersID","selectPlayer","listOfPlayers","memberSelection","selectAllPlayers","tenBuckerSelection","unselectedPlayers","addPlayerStatObject","update","batchCardUpdate","PlayerStatsModal","reactstrap_es","isOpen","playerModal","toggle","centered","playerModalData","react_chartjs_2_es","responsive","maintainAspectRatio","Showcase","tab","ascArrow","toggleSortOptions","playerName","playerStats","gamesInChronoOrder","playerInfo","fill","lineTension","sortOptionsDisplay","numOfRecords","sortingOptions","azTab","toggleSort","alphaAsc","alphaDesc","gamesTab","gamesAsc","gamesDesc","winsTab","winsAsc","winsDesc","lossesTab","lossesAsc","lossesDesc","tiesTab","tiesAsc","tiesDesc","goalsTab","goalsAsc","goalsDesc","gpgTab","gpgAsc","gpgDesc","assistsTab","assistsAsc","assistsDesc","apgTab","apgAsc","apgDesc","playerRecords","positionVisibility","showPlayerStats","RecordsPageComp_PlayerStatsModal","filteredPlayerRecords","forwardSelection","selectors","defenseSelection","goalieSelection","Filters","setting","filterPlayerRecordsByType","offense","defense","goalie","_this$props$filterPla","filterPlayerRecordsByGames","gamePercent","operator","playerSelection","faSquare","playerFilters","gameFilters","playerType","DataChart","chartDisplay","curatedChartData","height","chartingOptions","Records","RecordsPageComp_DateSelector","RecordsPageComp_GameSelector","RecordsPageComp_PlayerSelector","RecordsPageComp_DataChart","RecordsPageComp_Showcase","RecordsPageComp_Filters","LoginForm","editedUser","user","updateUserForm","in","username","password","authenticateUser","newUser","privilege","createNewUser","up","authenticate","method","errmsg","stringify","setItem","saveState","SuperAdmin","Login","components_LoginForm","initialState","pastGamesFromAPI","combineReducers","arguments","undefined","deletedPlayer","panel","dateRange","middleware","thunk","navigator","userAgent","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","library","add","faChevronUp","faChevronDown","faMinusCircle","faTimesCircle","faArrowCircleLeft","faAngleRight","faPlusCircle","faTimes","faPlus","faCaretDown","faCaretRight","faLongArrowAltUp","faLongArrowAltDown","faCircle","faLock","faUnlockAlt","faCheckSquare","App","es","BrowserRouter","Switch","Route","exact","path","render","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App","document","getElementById","URL","process","addEventListener","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"uUA0CeA,cAtCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,WAAY,SACZC,mBAAoB,UAJTT,4EAQNU,GACTP,KAAKQ,SAAS,CAAEH,WAAuB,WAAXE,EAAsB,OAAS,SAAUD,mBAA+B,WAAXC,EAAsB,UAAY,4CAGtH,IAAAE,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWb,KAAKI,MAAMC,WAAa,eACpCK,EAAAC,EAAAC,cAAA,MAAIC,UAAWb,KAAKI,MAAME,mBAAqB,cAA/C,oBACAI,EAAAC,EAAAC,cAAA,OAAKC,UAAWb,KAAKI,MAAME,mBAAqB,eAC5CI,EAAAC,EAAAC,cAAA,KAAGC,UAAWb,KAAKI,MAAME,mBAAqB,qBAAsBQ,KAAK,KAAzE,QACAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAWb,KAAKI,MAAME,mBAAqB,qBAAsBQ,KAAK,WAAzE,WACAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAWb,KAAKI,MAAME,mBAAqB,qBAAsBQ,KAAK,UAAzE,SACAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAWb,KAAKI,MAAME,mBAAqB,qBAAsBQ,KAAK,UAAzE,SACAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAWb,KAAKI,MAAME,mBAAqB,qBAAsBQ,KAAK,YAAzE,WACAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAWb,KAAKI,MAAME,mBAAqB,qBAAsBQ,KAAK,UAAzE,WAIRJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,UACpCL,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAMP,EAAKQ,aAAaR,EAAKL,MAAMC,aAAaQ,UAAU,eAAeK,IAAKC,IAAWC,IAAI,mBA9B9GC,aC4DNC,UA1DF,kBACTZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,sCAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,WAAUJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCAAlB,cAI1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,oCAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,WAAUJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCAAlB,YAK1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,2BAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,WAAUJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCAAlB,YAK1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAAb,8BAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,aAAYJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCAAlB,eAO5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,wFClDpBW,EAAaC,OAAOC,SAASC,OACd,0BAAfH,IACAA,EAAa,yBAcF,IAAAI,EACD,WACN,IAAMC,EAAML,EAAa,aACzB,OAAOM,IAAMC,IAAIF,IAHVD,EAKF,SAACI,GACN,IAAMH,EAAML,EAAa,aAAeQ,EACxC,OAAOF,IAAMC,IAAIF,IAPVD,EASF,SAACK,EAAMC,GACZ,IAAML,EAAML,EAAa,aACzB,OAAOM,IAAMK,KAAKN,EAAK,CAAEO,UAAWH,EAAMC,QAASA,KAX5CN,EAaC,SAACI,GACT,IAAMH,EAAML,EAAa,aAAeQ,EACxC,OAAOF,IAAMO,OAAOR,IAfbD,EAiBD,SAACU,EAAQC,GACf,IAAMV,EAAML,EAAa,aAAec,EACxC,OAAOR,IAAMU,IAAIX,EAAK,CAAEU,UAnBjBX,EAqBC,WACR,IAAMC,EAAML,EAAa,eACzB,OAAOM,IAAMC,IAAIF,IAvBVD,EAyBA,SAACa,GACR,IAAMZ,EAAML,EAAa,eACzB,OAAOM,IAAMK,KAAKN,EAAK,CAAEY,YA3BlBb,EA6BC,SAACI,EAAIO,GACb,IAAMV,EAAML,EAAa,eAAiBQ,EAC1C,OAAOF,IAAMU,IAAIX,EAAK,CAAEU,UA/BjBX,EAiCG,SAACI,GACX,IAAMH,EAAML,EAAa,eAAiBQ,EAC1C,OAAOF,IAAMO,OAAOR,IAnCbD,EAqCC,SAACc,GACT,IAAMb,EAAML,EAAa,SACzB,OAAOM,IAAMK,KAAKN,EAAK,CAACa,cAvCjBd,EAyCO,SAACe,EAAMD,GACrB,IAAMb,EAAML,EAAa,SACzB,GAAa,UAATmB,EACA,OAAOb,IAAMK,KAAKN,EAAKa,oBCetBE,EAAU,SAACC,GAAD,OAAU,SAAAC,GAC7BlB,EAAYiB,GACPE,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAIpB,IAGIC,EACAC,EAJAC,EAAcL,EAAIT,KAAKL,QAAQoB,OAAO,SAAAb,GAAM,MAA6B,SAAzBA,EAAOc,SAASC,OAChEC,EAAeT,EAAIT,KAAKL,QAAQoB,OAAO,SAAAb,GAAM,MAA6B,UAAzBA,EAAOc,SAASC,OAIjEH,EAAYK,OAAS,GAAKD,EAAaC,OAAS,GAChDP,EAAY,UACZC,EAAiB,WAGjBD,EAAY,SACZC,EAAiB,WAGrBN,EAAS,CACL/B,KCpGI,WDqGJ4C,QAAS,CACLd,KAAMG,EAAIT,KACVY,UAAWA,EACXC,eAAgBA,SAO3BQ,EAAe,SAACf,EAAMN,GAAP,OAAgB,SAAAO,GACxClB,EAAaiB,EAAMN,GAClBQ,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAoBpBJ,EAAS,CACL/B,KClIc,iBDmId4C,QAAS,CACLd,KAAMG,EAAIT,YASjBsB,EAAuB,SAAChB,EAAMN,GAAP,OAAgB,SAAAO,GAC5ClB,EAAaiB,EAAMN,GAClBQ,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAKpBJ,EAAS,CACL/B,KC9ImB,0BD+InB4C,QAASX,EAAIT,WAKpBuB,EAA0B,SAACxB,EAAQyB,EAAUC,GAAnB,OAAgC,SAAAlB,GACnElB,EAAaU,EAAQyB,GAChBhB,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAKpBJ,EAAS,CACL/B,KC7JuB,8BD8JvB4C,QAAS,CACLI,SAAUf,EAAIT,KACdE,OAAQuB,SAMnBC,EAAe,SAACpB,EAAMN,GAAP,OAAgB,SAAAO,GAExClB,EAAaiB,EAAMN,GAClBQ,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAKpBJ,EAAS,CACL/B,KCpLqB,wBDqLrB4C,QAAS,CACLlB,OAAQF,EAAKE,OACbI,KAAMG,EAAIT,YAoCjB2B,EAAe,SAACrB,EAAMsB,EAAWC,GAAlB,OAAsC,SAAAtB,GAC9D,IAAIuB,EAAYC,IAAEC,OAAFzE,OAAA0E,EAAA,EAAA1E,CAAasE,GAAbK,OAAA,CAA8BN,IAAY,QAC1DvC,EAAaiB,EAAM,CAACX,QAASmC,IAC5BtB,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGpBJ,EAAS,CACL/B,KCnOc,iBDoOd4C,QAAS,CAACzB,QAASc,EAAIT,KAAME,OAAQ0B,SAkFxCO,EAAU,SAAClB,EAAMX,EAAMN,GAAb,OAAsB,SAAAO,GACzClB,EAAaiB,EAAMN,GAClBQ,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAIpB,IAAIyB,EAAY3B,EAAIT,KAAKL,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAClE,OAAQnB,GACJ,IAAK,OACLV,EAAS,CACL/B,KC1SI,WD2SJ4C,QACA,CACId,KAAMG,EAAIT,KACVqC,OAAQN,IAAEC,OAAOI,EAAUrB,OAAO,SAAAb,GAAM,OAAoC,IAAhCA,EAAOc,SAASsB,cAAmB,SAACC,GAAD,OAASA,EAAIvB,SAASsB,cACrGE,SAAUT,IAAEC,OAAOI,EAAUrB,OAAO,SAAAb,GAAM,OAAoC,IAAhCA,EAAOc,SAASsB,cAAmB,WAGzF,MAEA,IAAK,QACL/B,EAAS,CACL/B,KCtTI,WDuTJ4C,QACA,CACId,KAAMG,EAAIT,KACVqC,OAAQN,IAAEC,OAAOI,EAAUrB,OAAO,SAAAb,GAAM,OAAqC,IAAjCA,EAAOc,SAASyB,eAAoB,SAACF,GAAD,OAASA,EAAIvB,SAASyB,eACtGD,SAAUT,IAAEC,OAAOI,EAAUrB,OAAO,SAAAb,GAAM,OAAqC,IAAjCA,EAAOc,SAASyB,eAAoB,WAG1F,MAEA,QACA,mBEvWHC,EAAY,WACrB,IACI,IAAMC,EAAkBC,eAAeC,QAAQ,SAC/C,GAAwB,OAApBF,EACA,OAEJ,OAAOG,KAAKC,MAAMJ,GACpB,MAAOK,GACL,SCDFC,cACF,SAAAA,EAAY5F,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,IACf3F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,KAAMJ,KAkBV6F,YAAc,SAACnD,GACXzC,EAAKD,MAAMgD,QAAQN,IApBJzC,EAuBnB6F,eAAiB,SAACpD,GACdzC,EAAKD,MAAM+F,WAAWrD,IAtBtBzC,EAAKO,MAAQ,CACTuF,YAAY,GAHD9F,mFAOfG,KAAKJ,MAAMgG,aACX,IAAMC,EAAaZ,IACnBa,QAAQC,IAAI,6BAA8BF,GAC1C7F,KAAKQ,SAASqF,oCAiBT,IAAApF,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWb,KAAKJ,MAAMoG,WAApC,UACItF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEgB,aAA1Bb,KAAKJ,MAAMoG,WAERhG,KAAKJ,MAAMqG,cAAcvC,OAAS,EAClC1D,KAAKJ,MAAMqG,cACNC,IAAI,SAAArD,GAAI,OACLnC,EAAAC,EAAAC,cAAA,OAAKuF,IAAKtD,EAAKuD,KACX1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4CAA4CG,QAAS,kBAAKP,EAAKgF,YAAY5C,EAAKuD,OAAlG,IAA0GvD,EAAKuD,IAA/G,MAC2B,IAA1B3F,EAAKL,MAAMuF,WAAsBjF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,qBAAsBG,QAAS,kBAAMP,EAAKiF,eAAe7C,EAAKuD,QAAW,QAInK1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,oEAAwFH,EAAAC,EAAAC,cAAA,WAAxF,0CAIJZ,KAAKJ,MAAM2G,UAAU7C,OAAS,EAC9B1D,KAAKJ,MAAM2G,UACNL,IAAI,SAAArD,GAAI,OACLnC,EAAAC,EAAAC,cAAA,OAAKuF,IAAKtD,EAAKuD,KACX1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAAS,kBAAKP,EAAKgF,YAAY5C,EAAKuD,OAAjG,IAAyGvD,EAAKuD,IAA9G,MAC2B,IAA1B3F,EAAKL,MAAMuF,WAAsBjF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,qBAAsBG,QAAS,kBAAMP,EAAKiF,eAAe7C,EAAKuD,QAAW,QAInK1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,oEAAwFH,EAAAC,EAAAC,cAAA,WAAxF,mDA1DLS,aAwFRmF,cAbS,SAAApG,GAAK,MAAK,CAC9BqG,MAAOrG,EAAMqG,MAAMA,MACnBT,WAAY5F,EAAMsG,QAAQV,WAC1BW,MAAOvG,EAAMsG,QAAQC,MACrBC,UAAWxG,EAAMsG,QAAQE,UACzBC,oBAAqBzG,EAAMsG,QAAQG,oBACnCC,gBAAiB1G,EAAMsG,QAAQI,gBAC/BC,WAAY3G,EAAMqG,MAAMM,WACxBd,cAAe7F,EAAMqG,MAAMR,cAC3BM,UAAWnG,EAAMqG,MAAMF,YAIa,CAAEX,WHvEhB,kBAAM,SAAA9C,GAC5BlB,IACKmB,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGpBJ,EAAS,CACL/B,KClCO,cDmCP4C,QAASX,EAAIT,WG8DqBK,UAAS+C,WHxDrC,SAAC3D,GAAD,OAAQ,SAAAc,GAC9BlB,EAAeI,GACde,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGpBJ,EAAS,CACL/B,KC9CW,cD+CX4C,QAASX,EAAIT,YG+CdiE,CAA+DhB,WC9FjEwB,EAAe,kBAAM,SAAAlE,GAC9BlB,IACKmB,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGpBJ,EAAS,CACL/B,KHoBS,gBGnBT4C,QAASX,EAAIT,WAMpB0E,EAAe,SAACjF,GAAD,OAAQ,SAAAc,GAChClB,EAAiBI,GAChBe,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGpBJ,EAAS,CACL/B,KHMa,gBGLb4C,QAASX,EAAIT,WA8DhB2E,EAAW,SAACzE,GAAD,OAAY,SAAAK,GAChCA,EAAS,CACL/B,KH/DiB,YGgEjB4C,QAASlB,cCjFX0E,SAASC,EAAQ,KAEjBC,eACF,SAAAA,EAAYzH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqH,IACfxH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuH,GAAAlH,KAAAH,KAAMJ,KACDQ,MAAQ,CACT6B,KAAM,GACNqF,YAAY,GAEhBzH,EAAK0H,aAAe1H,EAAK0H,aAAaC,KAAlB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KACpBA,EAAK6H,aAAe7H,EAAK6H,aAAaF,KAAlB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KAPLA,mFAWfG,KAAKJ,MAAMoH,eACX,IAAMnB,EAAaZ,IACnBa,QAAQC,IAAI,6BAA8BF,GAEtC7F,KAAKQ,SAALmH,MAAA3H,KAAAF,OAAA0E,EAAA,EAAA1E,CAAiBE,KAAKI,MAAM6B,MAA5BwC,OAAA,CAAkCoB,0CAI7B5D,GACTjC,KAAKQ,SAAS,CACVoH,aAAc3F,yCAIT4F,GAAO,IAAApH,EAAAT,KAChB6H,EAAMC,iBACN,IACIC,EADU/H,KAAKJ,MAAMsC,QAAQoB,OAAO,SAACb,GAAD,MAAwC,WAA5BA,EAAOuF,mBACzB9B,IAAI,SAAC+B,GAAY,MAAO,CACtDD,iBAAkBC,EAAOD,iBACzB5B,IAAK6B,EAAO7B,IACZ8B,KAAMD,EAAOC,KACbC,YAAaF,EAAOE,YACpBC,kBAAmBH,EAAOG,kBAC1B7E,SAAU9C,EAAKb,MAAM2D,YAErB8E,EAAalB,EAAOnH,KAAKI,MAAMwH,cAAcU,OAAO,cACxDtI,KAAKJ,MAAM2I,QAAQF,EAAYN,oCAK/B,OACIrH,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,iBACJtB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,oBAGJH,EAAAC,EAAAC,cAAA,YAC2B,IAA1BZ,KAAKI,MAAMkH,WACN5G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAY2H,SAAUxI,KAAK0H,cACzChH,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,WACJtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACIC,gBAAgB,aAChBC,SAAU3I,KAAKI,MAAMwH,aACrBgB,SAAU5I,KAAKuH,aACfsB,MAAO7I,KAAKI,MAAMyI,SAItBnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAQoB,GAAG,cAAcnB,UAAU,gCAAgCqH,KAAK,SAASnH,KAAK,UAAtF,aAKdL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,0EApECQ,aAmFRmF,eAPS,SAAApG,GAAK,MAAK,CAC9ByC,KAAMzC,EAAMqG,MAAM5D,KAClBX,QAAS9B,EAAM8B,QAAQA,QACvBqB,SAAUnD,EAAMqG,MAAMlD,WAIc,CAAEgF,QLxCnB,SAACtG,EAAMC,EAASO,EAAQqG,GAAxB,OAAoC,SAAAhG,GACvDlB,EAAYK,EAAMC,EAASO,EAAQqG,GAC1B/F,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGNF,EAAIT,KAEP2F,KACPpC,QAAQC,IAAI,mFAGZD,QAAQC,IAAI,iCACZjD,EAAS,CACL/B,KCtEJ,WDuEI4C,QAASX,EAAIT,YKwBUyE,gBAApCR,CAAqDa,qBClF9D0B,eACF,SAAAA,EAAYnJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+I,IACflJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiJ,GAAA5I,KAAAH,KAAMJ,KACDQ,MAAQ,CACT4I,YAAY,EACZC,oBAAoB,GAJTpJ,mFAQf,IAAMgG,EAAaZ,IACnBa,QAAQC,IAAI,6BAA8BF,GAC1C7F,KAAKQ,SAASqF,0CAGH7B,EAAUkF,GACrB,IAAI5G,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC9B,GAA8B,WAA1BpG,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,sCAGZ,GAAqB,WAAjBmD,EACJlJ,KAAKJ,MAAMiE,qBAAqBvB,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACoB,WAAW,EAAOnB,KAAM,aAE7F,CACD,IAAIlB,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC1BrC,EAAQjE,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAOE,KAAKJ,MAAMuJ,MAAlB,CAAyBjH,QAASlC,KAAKJ,MAAMuJ,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQpC,MACvGhE,KAAKJ,MAAMkE,wBAAwBxB,EAAQyB,EAAUC,0CAK/CA,GACV,IAAI1B,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IACA,WAA1BpG,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,iCAGZ/F,KAAKJ,MAAMqE,aAAa3B,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACoB,WAAW,EAAMnB,KAAM,4CAIlFQ,EAAUR,GACjB,GAA8B,WAA1BxD,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,qCAEX,CACD,IAAIzD,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC9BpG,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACC,KAAMA,kDAIxDf,GAChB,GAA8B,WAA1BzC,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,qCAEX,CACD,IAAIzD,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC1BiD,EAAiB,CACjBrB,iBAAkBvF,EAAOuF,iBACzB5B,IAAK3D,EAAO2D,IACZ8B,KAAMzF,EAAOyF,KACbC,YAAa1F,EAAO0F,YACpBC,kBAAmB3F,EAAO2F,kBAC1B7E,SAAUvD,KAAKJ,MAAM2D,UAEzBvD,KAAKJ,MAAMsE,aAAa5B,EAAQ+G,EAAgBrJ,KAAKJ,MAAMuJ,MAAMjH,2CAKhE,IAAAzB,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAqBH,EAAAC,EAAAC,cAAA,WAAnC,QACCZ,KAAKJ,MAAMuJ,MAAMjH,QAAWlC,KAAKJ,MAAMuJ,MAAMjH,QACrCoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA+C,SAAzBlC,EAAOc,SAASC,OACvE0C,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BAA+BsF,IAAK1D,EAAO2D,KACtD1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqC4B,EAAOyF,OAC3B,IAAlCzH,EAAKL,MAAM6I,mBAA8BvI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,wBAA0BJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK6I,eAAe7G,EAAO2D,IAAK3D,EAAOuF,qBAAwB,MAC9L,IAA1BvH,EAAKL,MAAM4I,WAAsBtI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAMiD,KAAuB1I,UAAW,UAAYJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK+I,WAAW/G,EAAO2D,IAAK,UAAa,QAI7L1F,EAAAC,EAAAC,cAAA,qCAGjBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCAAqCb,KAAKJ,MAAM6J,SAAS/I,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,YACvEZ,KAAKJ,MAAMuJ,MAAMjH,QAAWlC,KAAKJ,MAAMuJ,MAAMjH,QACzCoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA+C,QAAzBlC,EAAOc,SAASC,OACvE0C,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAgCsF,IAAK1D,EAAO2D,MAC5B,IAA1B3F,EAAKL,MAAM4I,WAAsBtI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAW,UAAYJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK+I,WAAW/G,EAAO2D,IAAK,WAAc,KACnL1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6B4B,EAAOyF,OACnB,IAAlCzH,EAAKL,MAAM6I,mBAA8BvI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,wBAA0BJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK6I,eAAe7G,EAAO2D,IAAK3D,EAAOuF,qBAAwB,MAC9L,IAA1BvH,EAAKL,MAAM4I,WAAsBtI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAMiD,KAAuB1I,UAAW,UAAYJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK+I,WAAW/G,EAAO2D,IAAK,YAAe,QAI/L1F,EAAAC,EAAAC,cAAA,oCAGRZ,KAAKJ,MAAM8J,mBAAsB1J,KAAKJ,MAAM8J,mBACxCxD,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAasF,IAAK1D,EAAO2D,KACpC1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BG,QAAS,kBAAwC,IAAlCP,EAAKL,MAAM6I,mBAA8BxI,EAAKkJ,cAAclH,EAAO2D,KAAO,OAAS3D,EAAOyF,SAI9JxH,EAAAC,EAAAC,cAAA,mDAGRZ,KAAKJ,MAAMgK,qBAAwB5J,KAAKJ,MAAMgK,qBAC1C1D,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAasF,IAAK1D,EAAO2D,KACpC1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BG,QAAS,kBAAwC,IAAlCP,EAAKL,MAAM6I,mBAA8BxI,EAAKoJ,oBAAoBpH,GAAU,OAAQA,EAAOyF,SAIlKxH,EAAAC,EAAAC,cAAA,4CAKbF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAEfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAqBH,EAAAC,EAAAC,cAAA,WAAnC,SACKZ,KAAKJ,MAAMuJ,MAAMjH,QAAWlC,KAAKJ,MAAMuJ,MAAMjH,QACjCoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA+C,UAAzBlC,EAAOc,SAASC,OACvE0C,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAA8BsF,IAAK1D,EAAO2D,MAC1B,IAA1B3F,EAAKL,MAAM4I,WAAsBtI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAW,UAAYJ,EAAKb,MAAMmH,WAAY+C,KAAK,KAAK9I,QAAS,kBAAMP,EAAK+I,WAAW/G,EAAO2D,IAAK,UAAa,KAC5L1F,EAAAC,EAAAC,cAAA,UAAQC,UAAW,qCAAsC4B,EAAOyF,OAC7B,IAAlCzH,EAAKL,MAAM6I,mBAA8BvI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,wBAA0BJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK6I,eAAe7G,EAAO2D,IAAK3D,EAAOuF,qBAAwB,QAIhOtH,EAAAC,EAAAC,cAAA,8CAjJnBS,aA6KPmF,eAZS,SAAApG,GAAK,MAAK,CAC9B+I,MAAO/I,EAAMqG,MAAM0C,MACnBM,SAAUrJ,EAAMqG,MAAMgD,SACtBC,mBAAoBtJ,EAAMqG,MAAMiD,mBAChCE,qBAAsBxJ,EAAMqG,MAAMmD,qBAClCrG,SAAUnD,EAAMqG,MAAMlD,SACtBwD,WAAY3G,EAAMqG,MAAMM,WACxBgD,UAAW3J,EAAMqG,MAAMsD,UACvBnF,OAAQxE,EAAMqG,MAAM7B,OACpBG,SAAU3E,EAAMqG,MAAM1B,WAGc,CAAEnB,eAAcM,eAAcL,uBAAsBC,0BAAyBG,eAAcS,WAApH8B,CAAgIuC,IC9KzIiB,eACF,SAAAA,EAAYpK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgK,IACfnK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkK,GAAA7J,KAAAH,KAAMJ,KACDQ,MAAQ,CACT4I,YAAY,EACZC,oBAAoB,EACpBgB,YAAa,EACbC,aAAc,EACdC,UAAW,GAPAtK,mFAYf,IAAMgG,EAAaZ,IACnBa,QAAQC,IAAI,6BAA8BF,GAC1C7F,KAAKQ,SAASqF,0CAGH7B,EAAUkF,GACrB,IAAI5G,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC9B,GAA8B,WAA1BpG,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,sCAGZ,GAAqB,WAAjBmD,EACJlJ,KAAKJ,MAAMiE,qBAAqBvB,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACoB,WAAW,EAAOnB,KAAM,aAE7F,CACD,IAAIlB,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC1BrC,EAAQjE,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAOE,KAAKJ,MAAMuJ,MAAlB,CAAyBjH,QAASlC,KAAKJ,MAAMuJ,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQpC,MACvGhE,KAAKJ,MAAMkE,wBAAwBxB,EAAQyB,EAAUC,0CAK/CA,GACV,IAAI1B,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IACA,WAA1BpG,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,iCAGZ/F,KAAKJ,MAAMqE,aAAa3B,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACoB,WAAW,EAAMnB,KAAM,4CAIlFQ,EAAUR,GACjB,GAA8B,WAA1BxD,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,qCAEX,CACD,IAAIzD,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC9BpG,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACC,KAAMA,kDAIxDf,GAChB,GAA8B,WAA1BzC,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,qCAEX,CACD,IAAIzD,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC1BiD,EAAiB,CACjBrB,iBAAkBvF,EAAOuF,iBACzB5B,IAAK3D,EAAO2D,IACZ8B,KAAMzF,EAAOyF,KACbC,YAAa1F,EAAO0F,YACpBC,kBAAmB3F,EAAO2F,kBAC1B7E,SAAUvD,KAAKJ,MAAM2D,UAEzBvD,KAAKJ,MAAMsE,aAAa5B,EAAQ+G,EAAgBrJ,KAAKJ,MAAMuJ,MAAMjH,2CAKhE,IAAAzB,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCAAqCb,KAAKJ,MAAM6J,UACpC,IAAzBzJ,KAAKJ,MAAMuK,UACZzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAU,YAAxF,UAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,SAAyCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAMiD,KAAuB1I,UAAU,eAEhG,KAERb,KAAKJ,MAAMuJ,MAAMjH,QAAWlC,KAAKJ,MAAMuJ,MAAMjH,QACzCoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA+C,QAAzBlC,EAAOc,SAASC,OACvE0C,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAgCsF,IAAK1D,EAAO2D,MAC5B,IAA1B3F,EAAKL,MAAM4I,WAAsBtI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAW,UAAYJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK+I,WAAW/G,EAAO2D,IAAK,WAAc,KACnL1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4CAA4C4B,EAAOyF,OAClC,IAAlCzH,EAAKL,MAAM6I,mBAA8BvI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,wBAA0BJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK6I,eAAe7G,EAAO2D,IAAK3D,EAAOuF,qBAAwB,MAC9L,IAA1BvH,EAAKL,MAAM4I,WAAsBtI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAMiD,KAAuB1I,UAAW,UAAYJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK+I,WAAW/G,EAAO2D,IAAK,YAAe,QAI/L1F,EAAAC,EAAAC,cAAA,oCAGRZ,KAAKJ,MAAM8J,mBAAsB1J,KAAKJ,MAAM8J,mBACxCxD,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAasF,IAAK1D,EAAO2D,KACpC1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAAS,kBAAwC,IAAlCP,EAAKL,MAAM6I,mBAA8BxI,EAAKkJ,cAAclH,EAAO2D,KAAO,OAAS3D,EAAOyF,SAI7KxH,EAAAC,EAAAC,cAAA,mDAGRZ,KAAKJ,MAAMgK,qBAAwB5J,KAAKJ,MAAMgK,qBAC1C1D,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAasF,IAAK1D,EAAO2D,KACpC1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8CAA8CG,QAAS,kBAAwC,IAAlCP,EAAKL,MAAM6I,mBAA8BxI,EAAKoJ,oBAAoBpH,GAAU,OAAQA,EAAOyF,SAIjLxH,EAAAC,EAAAC,cAAA,4CAGbF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACdb,KAAKJ,MAAMqK,aAA2C,IAA5BjK,KAAKJ,MAAMsK,aAAqBxJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA0BH,EAAAC,EAAAC,cAAA,WAAxC,QAAyD,KAChHF,EAAAC,EAAAC,cAAA,WACKZ,KAAKJ,MAAMuJ,MAAMjH,QAAWlC,KAAKJ,MAAMuJ,MAAMjH,QACrCoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA+C,SAAzBlC,EAAOc,SAASC,OACvE0C,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAasF,IAAK1D,EAAO2D,MACT,IAA1B3F,EAAKL,MAAM4I,WAAsBtI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAW,+BAAiCJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK+I,WAAW/G,EAAO2D,IAAK,UAAa,KACvM1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mDAAmD4B,EAAOyF,OACzC,IAAlCzH,EAAKL,MAAM6I,mBAA8BvI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,wBAA0BJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK6I,eAAe7G,EAAO2D,IAAK3D,EAAOuF,qBAAwB,QAIhOtH,EAAAC,EAAAC,cAAA,sCAKrBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACVb,KAAKJ,MAAMqK,aAA2C,IAA5BjK,KAAKJ,MAAMsK,aAAqBxJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA0BH,EAAAC,EAAAC,cAAA,WAAxC,SAA0D,KACrHF,EAAAC,EAAAC,cAAA,WACCZ,KAAKJ,MAAMuJ,MAAMjH,QAAWlC,KAAKJ,MAAMuJ,MAAMjH,QACrCoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA+C,UAAzBlC,EAAOc,SAASC,OACvE0C,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAasF,IAAK1D,EAAO2D,KACpC1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mDAAmD4B,EAAOyF,OACzC,IAAlCzH,EAAKL,MAAM6I,mBAA8BvI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,wBAA0BJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK6I,eAAe7G,EAAO2D,IAAK3D,EAAOuF,qBAAwB,MAC9L,IAA1BvH,EAAKL,MAAM4I,WAAsBtI,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAMiD,KAAuB1I,UAAW,gCAAkCJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAMP,EAAK+I,WAAW/G,EAAO2D,IAAK,UAAa,QAInN1F,EAAAC,EAAAC,cAAA,+CAhKJS,aA+LlBmF,eAbS,SAAApG,GAAK,MAAK,CAC9B+I,MAAO/I,EAAMqG,MAAM0C,MACnBc,YAAa7J,EAAMqG,MAAM0C,MAAMjH,QAAU9B,EAAMqG,MAAM0C,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,MAA6B,SAAzBA,EAAOc,SAASC,OAAiBE,OAAS,EAC9HwG,aAAc9J,EAAMqG,MAAM0C,MAAMjH,QAAU9B,EAAMqG,MAAM0C,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,MAA6B,UAAzBA,EAAOc,SAASC,OAAkBE,OAAS,EAChIyG,UAAW/J,EAAMqG,MAAM0C,MAAMjH,QAAU9B,EAAMqG,MAAM0C,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,MAA6B,QAAzBA,EAAOc,SAASC,OAAgD,IAA9Bf,EAAOc,SAASoB,YAAoBjB,OAAS,EACjK+F,SAAUrJ,EAAMqG,MAAMgD,SACtBC,mBAAoBtJ,EAAMqG,MAAMiD,mBAChCE,qBAAsBxJ,EAAMqG,MAAMmD,qBAClCrG,SAAUnD,EAAMqG,MAAMlD,SACtBwD,WAAY3G,EAAMqG,MAAMM,WACxBgD,UAAW3J,EAAMqG,MAAMsD,YAGa,CAAEnG,eAAcM,eAAcL,uBAAsBC,0BAAyBG,gBAAtGuC,CAAuHwD,ICnMhIjB,eACF,SAAAA,EAAYnJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+I,IACflJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiJ,GAAA5I,KAAAH,KAAMJ,KACDQ,MAAQ,CACT4I,YAAY,EACZC,oBAAoB,GAJTpJ,mFAQf,IAAMgG,EAAaZ,IACnBa,QAAQC,IAAI,6BAA8BF,GAC1C7F,KAAKQ,SAASqF,mCAGVrC,EAAMQ,GACV,IAAI1B,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC9B,OAAQ5C,GACJ,IAAK,OAELxD,KAAKJ,MAAM8E,QAAQ,OAAQpC,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACsB,YAAa7E,KAAKJ,MAAMgF,OAAOlB,OAAS,KACzG,MAEA,IAAK,QACL1D,KAAKJ,MAAM8E,QAAQ,QAASpC,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACyB,aAAchF,KAAKJ,MAAMgF,OAAOlB,OAAS,KAC3G,MAEA,QACA,2CAIGF,EAAMf,GACb,IAAIH,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAE1BgE,EAAwBpK,KAAKJ,MAAMgF,OAAOyF,QAAQ5H,GACtDzC,KAAKJ,MAAMgF,OAAO0F,OAAOF,EAAsB,GAE/C,IAAIG,EAAcvK,KAAKJ,MAAMuJ,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAC5E,OAAQnB,GACJ,IAAK,OAELxD,KAAKJ,MAAMgF,OAAO4F,QAAQ,SAAC/H,EAAQgI,GAC/BhI,EAAM3C,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAO2C,EAAOc,SAASsB,YAAc4F,EAAQ,KAGvDhI,EAAOc,SAASsB,YAAc,EAE9B7E,KAAKJ,MAAM8E,QAAQ,OAAQpC,EAAQ,CAACJ,QAAO,CAAGO,GAAHgC,OAAA3E,OAAA0E,EAAA,EAAA1E,CAAcE,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,OACvG,MAEA,IAAK,QACLvK,KAAKJ,MAAMgF,OAAO4F,QAAQ,SAAC/H,EAAQgI,GAC/BhI,EAAM3C,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAO2C,EAAOc,SAASyB,aAAeyF,EAAQ,KAExDhI,EAAOc,SAASyB,aAAe,EAC/BhF,KAAKJ,MAAM8E,QAAQ,QAASpC,EAAQ,CAACJ,QAAO,CAAGO,GAAHgC,OAAA3E,OAAA0E,EAAA,EAAA1E,CAAcE,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,OACxG,MAEA,QACA,0CAIE9H,GACN,IAAIH,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC1BsE,EAAsB1K,KAAKJ,MAAMgF,OAAOyF,QAAQ5H,GAChD8H,EAAcvK,KAAKJ,MAAMuJ,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAC5E,GAAI+F,EAAsB,EACtB,OAAQ1K,KAAKJ,MAAMmK,WACf,IAAK,OAEL/J,KAAKJ,MAAMgF,OAAO8F,EAAsB,GAAGnH,SAASsB,YAAc6F,EAAsB,EAExFjI,EAAOc,SAASsB,YAAc6F,EAC9B1K,KAAKJ,MAAM8E,QAAQ,OAAQpC,EAAQ,CAACJ,QAASlC,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,KAC3F,MAEA,IAAK,QACLvK,KAAKJ,MAAMgF,OAAO8F,EAAsB,GAAGnH,SAASyB,aAAe0F,EAAsB,EACzFjI,EAAOc,SAASyB,aAAe0F,EAC/B1K,KAAKJ,MAAM8E,QAAQ,QAASpC,EAAQ,CAACJ,QAASlC,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,KAC5F,MAEA,QACA,4CAKA9H,GACR,IAAIH,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC1BsE,EAAsB1K,KAAKJ,MAAMgF,OAAOyF,QAAQ5H,GAChD8H,EAAcvK,KAAKJ,MAAMuJ,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAC5E,GAAI+F,EAAsB1K,KAAKJ,MAAMgF,OAAOlB,OAAS,EACjD,OAAQ1D,KAAKJ,MAAMmK,WACf,IAAK,OAEL/J,KAAKJ,MAAMgF,OAAO8F,EAAsB,GAAGnH,SAASsB,YAAc6F,EAAsB,EAExFjI,EAAOc,SAASsB,YAAc6F,EAAsB,EACpD1K,KAAKJ,MAAM8E,QAAQ,OAAQpC,EAAQ,CAACJ,QAASlC,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,KAC3F,MAEA,IAAK,QACLvK,KAAKJ,MAAMgF,OAAO8F,EAAsB,GAAGnH,SAASyB,aAAe0F,EAAsB,EACzFjI,EAAOc,SAASyB,aAAe0F,EAAsB,EACrD1K,KAAKJ,MAAM8E,QAAQ,QAASpC,EAAQ,CAACJ,QAASlC,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,KAC5F,MAEA,QACA,yCAMH,IAAA9J,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gDAAd,OAAkEb,KAAKJ,MAAMmK,UAA7E,UACArJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAEdb,KAAKJ,MAAMmF,SAAY/E,KAAKJ,MAAMmF,SAC9BmB,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,IAAK1D,EAAO2D,KAC5C1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8CAA+CG,QAAS,kBAAMP,EAAKkK,QAAQlK,EAAKb,MAAMmK,UAAWtH,EAAO2D,OAAQ3D,EAAOyF,MACzIxH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAU,oBAAoBG,QAAS,kBAAMP,EAAKkK,QAAQlK,EAAKb,MAAMmK,UAAWtH,EAAO2D,WAIrI1F,EAAAC,EAAAC,cAAA,yBAINF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8CAAd,SAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACdb,KAAKJ,MAAMgF,OAAU5E,KAAKJ,MAAMgF,OAC5BsB,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,IAAK1D,EAAO2D,KAC5C1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6CAA6C4B,EAAOyF,MACtExH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAU,qBAAqBG,QAAS,kBAAMP,EAAKmK,WAAWnK,EAAKb,MAAMmK,UAAWtH,MACzH/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,aAAazF,UAAU,WAAWG,QAAS,kBAAMP,EAAKoK,UAAUpI,MACtF/B,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAU,aAAaG,QAAS,kBAAMP,EAAKqK,YAAYrI,UAK1G/B,EAAAC,EAAAC,cAAA,kCA1JZS,aAsLPmF,eAZS,SAAApG,GAAK,MAAK,CAC9B+I,MAAO/I,EAAMqG,MAAM0C,MACnBM,SAAUrJ,EAAMqG,MAAMgD,SACtBC,mBAAoBtJ,EAAMqG,MAAMiD,mBAChCE,qBAAsBxJ,EAAMqG,MAAMmD,qBAClCrG,SAAUnD,EAAMqG,MAAMlD,SACtBwD,WAAY3G,EAAMqG,MAAMM,WACxBgD,UAAW3J,EAAMqG,MAAMsD,UACvBnF,OAAQxE,EAAMqG,MAAM7B,OACpBG,SAAU3E,EAAMqG,MAAM1B,WAGc,CAAEnB,eAAcc,WAAzC8B,CAAqDuC,ICtL9DA,eACF,SAAAA,EAAYnJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+I,IACflJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiJ,GAAA5I,KAAAH,KAAMJ,KACDQ,MAAQ,CACT4I,YAAY,EACZC,oBAAoB,GAJTpJ,mFAQf,IAAMgG,EAAaZ,IACnBa,QAAQC,IAAI,6BAA8BF,GAC1C7F,KAAKQ,SAASqF,mCAGVrC,EAAMQ,GACV,IAAI1B,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC9B,OAAQ5C,GACJ,IAAK,OAELxD,KAAKJ,MAAM8E,QAAQ,OAAQpC,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACsB,YAAa7E,KAAKJ,MAAMgF,OAAOlB,OAAS,KACzG,MAEA,IAAK,QACL1D,KAAKJ,MAAM8E,QAAQ,QAASpC,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAACyB,aAAchF,KAAKJ,MAAMgF,OAAOlB,OAAS,KAC3G,MAEA,QACA,2CAIGF,EAAMf,GACb,IAAIH,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAE1BgE,EAAwBpK,KAAKJ,MAAMgF,OAAOyF,QAAQ5H,GACtDzC,KAAKJ,MAAMgF,OAAO0F,OAAOF,EAAsB,GAE/C,IAAIG,EAAcvK,KAAKJ,MAAMuJ,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAC5E,OAAQnB,GACJ,IAAK,OAELxD,KAAKJ,MAAMgF,OAAO4F,QAAQ,SAAC/H,EAAQgI,GAC/BhI,EAAM3C,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAO2C,EAAOc,SAASsB,YAAc4F,EAAQ,KAGvDhI,EAAOc,SAASsB,YAAc,EAE9B7E,KAAKJ,MAAM8E,QAAQ,OAAQpC,EAAQ,CAACJ,QAAO,CAAGO,GAAHgC,OAAA3E,OAAA0E,EAAA,EAAA1E,CAAcE,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,OACvG,MAEA,IAAK,QACLvK,KAAKJ,MAAMgF,OAAO4F,QAAQ,SAAC/H,EAAQgI,GAC/BhI,EAAM3C,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAO2C,EAAOc,SAASyB,aAAeyF,EAAQ,KAExDhI,EAAOc,SAASyB,aAAe,EAC/BhF,KAAKJ,MAAM8E,QAAQ,QAASpC,EAAQ,CAACJ,QAAO,CAAGO,GAAHgC,OAAA3E,OAAA0E,EAAA,EAAA1E,CAAcE,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,OACxG,MAEA,QACA,0CAIE9H,GACN,IAAIH,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC1BsE,EAAsB1K,KAAKJ,MAAMgF,OAAOyF,QAAQ5H,GAChD8H,EAAcvK,KAAKJ,MAAMuJ,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAC5E,GAAI+F,EAAsB,EACtB,OAAQ1K,KAAKJ,MAAMmK,WACf,IAAK,OAEL/J,KAAKJ,MAAMgF,OAAO8F,EAAsB,GAAGnH,SAASsB,YAAc6F,EAAsB,EAExFjI,EAAOc,SAASsB,YAAc6F,EAC9B1K,KAAKJ,MAAM8E,QAAQ,OAAQpC,EAAQ,CAACJ,QAASlC,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,KAC3F,MAEA,IAAK,QACLvK,KAAKJ,MAAMgF,OAAO8F,EAAsB,GAAGnH,SAASyB,aAAe0F,EAAsB,EACzFjI,EAAOc,SAASyB,aAAe0F,EAC/B1K,KAAKJ,MAAM8E,QAAQ,QAASpC,EAAQ,CAACJ,QAASlC,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,KAC5F,MAEA,QACA,4CAKA9H,GACR,IAAIH,EAAStC,KAAKJ,MAAMuJ,MAAM/C,IAC1BsE,EAAsB1K,KAAKJ,MAAMgF,OAAOyF,QAAQ5H,GAChD8H,EAAcvK,KAAKJ,MAAMuJ,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAC5E,GAAI+F,EAAsB1K,KAAKJ,MAAMgF,OAAOlB,OAAS,EACjD,OAAQ1D,KAAKJ,MAAMmK,WACf,IAAK,OAEL/J,KAAKJ,MAAMgF,OAAO8F,EAAsB,GAAGnH,SAASsB,YAAc6F,EAAsB,EAExFjI,EAAOc,SAASsB,YAAc6F,EAAsB,EACpD1K,KAAKJ,MAAM8E,QAAQ,OAAQpC,EAAQ,CAACJ,QAASlC,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,KAC3F,MAEA,IAAK,QACLvK,KAAKJ,MAAMgF,OAAO8F,EAAsB,GAAGnH,SAASyB,aAAe0F,EAAsB,EACzFjI,EAAOc,SAASyB,aAAe0F,EAAsB,EACrD1K,KAAKJ,MAAM8E,QAAQ,QAASpC,EAAQ,CAACJ,QAASlC,KAAKJ,MAAMgF,OAAOH,OAAOzE,KAAKJ,MAAMmF,SAAUwF,KAC5F,MAEA,QACA,yCAMH,IAAA9J,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACuB,IAA7Bb,KAAKJ,MAAMgF,OAAOlB,OAAehD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8CAAd,SAAwE,KAE1GH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACdb,KAAKJ,MAAMgF,OAAU5E,KAAKJ,MAAMgF,OAC5BsB,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,IAAK1D,EAAO2D,KAC5C1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACe,SAAzBJ,EAAKb,MAAMmK,UAAuBtH,EAAOc,SAASsB,YAAcpC,EAAOc,SAASyB,cAErFtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAU,gBAAgBG,QAAS,kBAAMP,EAAKqK,YAAYrI,OAEnG/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6CAA6C4B,EAAOyF,OAE1ExH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,aAAazF,UAAU,cAAcG,QAAS,kBAAMP,EAAKoK,UAAUpI,OAE7F/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAU,UAAUG,QAAS,kBAAMP,EAAKmK,WAAWnK,EAAKb,MAAMmK,UAAWtH,UAK5H/B,EAAAC,EAAAC,cAAA,yBAKVF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACqB,IAA/Bb,KAAKJ,MAAMmF,SAASrB,OAAehD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gDAAd,QAAmEb,KAAKJ,MAAMmK,UAA9E,UAAsG,KAC1IrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAEdb,KAAKJ,MAAMmF,SAAY/E,KAAKJ,MAAMmF,SAC9BmB,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,IAAK1D,EAAO2D,KAC5C1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8CAA+CG,QAAS,kBAAMP,EAAKkK,QAAQlK,EAAKb,MAAMmK,UAAWtH,EAAO2D,OAAQ3D,EAAOyF,MACzIxH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAU,yBAAyBG,QAAS,kBAAMP,EAAKkK,QAAQlK,EAAKb,MAAMmK,UAAWtH,EAAO2D,WAI1I1F,EAAAC,EAAAC,cAAA,kCApKRS,aAkMPmF,eAbS,SAAApG,GAAK,MAAK,CAC9B+I,MAAO/I,EAAMqG,MAAM0C,MAEnBM,SAAUrJ,EAAMqG,MAAMgD,SACtBC,mBAAoBtJ,EAAMqG,MAAMiD,mBAChCE,qBAAsBxJ,EAAMqG,MAAMmD,qBAClCrG,SAAUnD,EAAMqG,MAAMlD,SACtBwD,WAAY3G,EAAMqG,MAAMM,WACxBgD,UAAW3J,EAAMqG,MAAMsD,UACvBnF,OAAQxE,EAAMqG,MAAM7B,OACpBG,SAAU3E,EAAMqG,MAAM1B,WAGc,CAAEnB,eAAcc,WAAzC8B,CAAqDuC,IClM9DgC,8MA2GFC,UAAY,SAACC,EAAYC,GACrB,GAAGD,EAAWvH,OAAS,EAAG,CACtB,IAAIyH,EAAeF,EAAWG,KAAKC,MAAMD,KAAKE,SAASL,EAAWvH,SAC9D+G,EAAQQ,EAAWZ,QAAQc,GAC/BD,EAAYK,KAAKJ,GACjBF,EAAWX,OAAOG,EAAM,GACxB5K,EAAKmL,UAAUC,EAAYC,OAKnCM,YAAc,SAACC,EAAsB9I,GACjC,GAAa,UAATA,EAAkB,CAElB,IAAI+I,EAAcD,EAAqBnI,OAAO,SAACqI,GAAD,MAA2B,SAApBA,EAAEpI,SAASC,OAChEkI,EAAcpH,IAAEC,OAAOmH,EAAa,eACpC5F,QAAQC,IAAR,yCAEA2F,EAAYlB,QAAQ,SAACmB,GACjB7F,QAAQC,IAAR,GAAAtB,OAAekH,EAAEzD,KAAjB,MAAAzD,OAA0BkH,EAAExD,YAA5B,QAGJ,IAAIyD,EAAcH,EAAqBnI,OAAO,SAACqI,GAAD,MAA2B,UAApBA,EAAEpI,SAASC,OAChEoI,EAActH,IAAEC,OAAOqH,EAAa,eACpC9F,QAAQC,IAAR,0CACA6F,EAAYpB,QAAQ,SAACmB,GACjB7F,QAAQC,IAAR,GAAAtB,OAAekH,EAAEzD,KAAjB,MAAAzD,OAA0BkH,EAAExD,YAA5B,QAGJ,IAAIoC,EAAckB,EAAqBnI,OAAO,SAACqI,GAAD,MAA2B,QAApBA,EAAEpI,SAASC,OAChE+G,EAAcjG,IAAEC,OAAOgG,EAAa,eACpCzE,QAAQC,IAAR,gDACAwE,EAAYC,QAAQ,SAACmB,GACjB7F,QAAQC,IAAR,GAAAtB,OAAekH,EAAEzD,KAAjB,MAAAzD,OAA0BkH,EAAExD,YAA5B,kBAAA1D,OAAwDkH,EAAEpI,SAASoB,kBAGtE,CACD,IAAI+G,EAAcD,EAAqBnI,OAAO,SAACqI,GAAD,MAA2B,SAApBA,EAAEpI,SAASC,OAChEkI,EAAcpH,IAAEC,OAAOmH,EAAa,SAAC5G,GAAD,OAASA,EAAIvB,SAASsB,cAC1DiB,QAAQC,IAAR,yCAEA2F,EAAYlB,QAAQ,SAACmB,GACjB7F,QAAQC,IAAR,GAAAtB,OAAekH,EAAEzD,KAAjB,wBAAAzD,OAA4CkH,EAAEpI,SAASsB,YAAvD,QAGJ,IAAI+G,EAAcH,EAAqBnI,OAAO,SAACqI,GAAD,MAA2B,UAApBA,EAAEpI,SAASC,OAChEoI,EAActH,IAAEC,OAAOqH,EAAa,SAAC9G,GAAD,OAASA,EAAIvB,SAASyB,eAC1Dc,QAAQC,IAAR,0CACA6F,EAAYpB,QAAQ,SAACmB,GACjB7F,QAAQC,IAAR,GAAAtB,OAAekH,EAAEzD,KAAjB,yBAAAzD,OAA6CkH,EAAEpI,SAASyB,aAAxD,QAGJ,IAAIuF,EAAckB,EAAqBnI,OAAO,SAACqI,GAAD,MAA2B,QAApBA,EAAEpI,SAASC,OAChE+G,EAAcjG,IAAEC,OAAOgG,EAAa,QACpCzE,QAAQC,IAAR,gDACAwE,EAAYC,QAAQ,SAACmB,GACjB7F,QAAQC,IAAR,GAAAtB,OAAekH,EAAEzD,KAAjB,MAAAzD,OAA0BkH,EAAExD,YAA5B,kBAAA1D,OAAwDkH,EAAEpI,SAASoB,UAAnE,wBAAAF,OAAmGkH,EAAEpI,SAASsB,YAA9G,0BAAAJ,OAAkJkH,EAAEpI,SAASyB,aAA7J,YAcZ6G,SAAW,SAACC,EAAaC,GACrB,IACIC,EAAQF,EAAYE,MACxB,IAA6C,IAAzCD,EAAc1B,QAAQ2B,EAFd,IAGRA,EAAM1B,OAHE,EAGW,GACnBzK,EAAKgM,SAASC,EAAaC,OAE1B,CACD,IAAIE,EAAaH,EAAYtI,KAE7BwI,EATQ,GASKzI,SAASC,KAAOyI,EAE7BF,EAAcR,KAAKS,EAXX,IAaRA,EAAM1B,OAbE,EAaW,OAM3B4B,gBAAkB,SAACrJ,GAIf,IAKIsJ,EALAC,EAAY,CAAC5I,KAAM,OAAQwI,MAAO1H,IAAEC,OAAO1E,EAAKD,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA6C,IAAvBlC,EAAOoC,cAAmB,SAACC,GAAD,OAASA,EAAIvB,SAASsB,eACrKwH,EAAa,CAAC7I,KAAM,QAASwI,MAAO1H,IAAEC,OAAO1E,EAAKD,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA8C,IAAxBlC,EAAOuC,eAAoB,SAACF,GAAD,OAASA,EAAIvB,SAASyB,gBACxK+G,EAAgB,GAIhBO,EAAOF,EAAUJ,MAAMtI,OACvB6I,EAAOF,EAAWL,MAAMtI,OASpB8I,GAPJL,EADAG,EAAOC,EACDA,EAGAD,GAGM,EAERG,GAAkBN,EAAMK,GAFhB,EAGhB,GAA8B,WAA1B3M,EAAKD,MAAMmH,WACXjB,QAAQC,IAAI,qCAEX,CACD,GAAe,IAAXyG,EAEA,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAgBC,IACjC7M,EAAKgM,SAASO,EAAWL,GACzBlM,EAAKgM,SAASQ,EAAYN,GAC1BlM,EAAKgM,SAASQ,EAAYN,GAC1BlM,EAAKgM,SAASO,EAAWL,OAG5B,CAED,IAAK,IAAIW,EAAI,EAAGA,GAAKD,EAAgBC,IACjC7M,EAAKgM,SAASO,EAAWL,GACzBlM,EAAKgM,SAASQ,EAAYN,GAC1BlM,EAAKgM,SAASQ,EAAYN,GAC1BlM,EAAKgM,SAASO,EAAWL,GAGzB,OAAmB,IAAXS,GACJ,KAAgB,IAAXA,EACL3M,EAAKgM,SAASO,EAAWL,GACzB,MACA,KAAgB,IAAXS,EACL3M,EAAKgM,SAASO,EAAWL,GACzBlM,EAAKgM,SAASQ,EAAYN,GAC1B,MACA,KAAgB,IAAXS,EACL3M,EAAKgM,SAASO,EAAWL,GACzBlM,EAAKgM,SAASQ,EAAYN,GAC1BlM,EAAKgM,SAASO,EAAWL,GACzB,MACA,QACA,QAGRlM,EAAK2L,YAAYO,EAAe,QAEhC,IAAIY,EAAqB9M,EAAKD,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAEzEiI,EAAab,EAActH,OAAOkI,GACtC9M,EAAKD,MAAMgE,aAAaf,EAAM,CAACX,QAAS0K,QAMpDC,eAAiB,SAAChK,GACd,IAIIsJ,EAJAC,EAAY,CAAC5I,KAAM,OAAQwI,MAAO1H,IAAEC,OAAO1E,EAAKD,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA6C,IAAvBlC,EAAOoC,cAAmB,SAACC,GAAD,OAASA,EAAIvB,SAASsB,eACrKwH,EAAa,CAAC7I,KAAM,QAASwI,MAAO1H,IAAEC,OAAO1E,EAAKD,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA8C,IAAxBlC,EAAOuC,eAAoB,SAACF,GAAD,OAASA,EAAIvB,SAASyB,gBACxK+G,EAAgB,GAGhBO,EAAOF,EAAUJ,MAAMtI,OACvB6I,EAAOF,EAAWL,MAAMtI,OASxB8I,GAPAL,EADAG,EAAOC,EACDA,EAGAD,GAGE,EAERG,GAAkBN,EAAMK,GAFhB,EAGZ,GAA8B,WAA1B3M,EAAKD,MAAMmH,WACXjB,QAAQC,IAAI,qCAEX,CACD,GAAe,IAAXyG,EAEA,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAgBC,IACjC7M,EAAKgM,SAASO,EAAWL,GACzBlM,EAAKgM,SAASQ,EAAYN,OAG7B,CAED,IAAK,IAAIW,EAAI,EAAGA,GAAKD,EAAgBC,IACjC7M,EAAKgM,SAASO,EAAWL,GACzBlM,EAAKgM,SAASQ,EAAYN,GAG9BlM,EAAKgM,SAASO,EAAWL,GAE7BlM,EAAK2L,YAAYO,EAAe,QAEhC,IAAIY,EAAqB9M,EAAKD,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAEzEiI,EAAab,EAActH,OAAOkI,GACtC9M,EAAKD,MAAMgE,aAAaf,EAAM,CAACX,QAAS0K,gFAtTrC/J,GACP,GAA8B,WAA1B7C,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,sCAGZ,OAAQ/F,KAAKJ,MAAMmK,WACf,IAAK,OACD,IAAI+C,EAAe9M,KAAKJ,MAAMsC,QACzBgE,IAAI,SAAC+B,GAAY,OAAOnI,OAAAsJ,GAAA,EAAAtJ,CAAA,GAClBmI,EADW,CAGd1E,SAASzD,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAKmI,EAAO1E,SAAb,CAAuBsB,YAAa,QAGpD7E,KAAKJ,MAAMmN,MAAMlK,EAAM,CAACX,QAAS4K,IACrC,MAEA,IAAK,QASL,OARIA,EAAe9M,KAAKJ,MAAMsC,QACrBgE,IAAI,SAAC+B,GAAY,OAAOnI,OAAAsJ,GAAA,EAAAtJ,CAAA,GAClBmI,EADW,CAGd1E,SAASzD,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAKmI,EAAO1E,SAAb,CAAuByB,aAAc,aAGrDhF,KAAKJ,MAAMmN,MAAMlK,EAAM,CAACX,QAAS4K,IAGrC,IAAK,QAEDA,EAAe9M,KAAKJ,MAAMsC,QACzBoB,OAAO,SAACb,GAAD,MAAwC,WAA5BA,EAAOuF,mBAC1B9B,IAAI,SAAC+B,GAAY,MAAO,CACrBD,iBAAkBC,EAAOD,iBACzB5B,IAAK6B,EAAO7B,IACZ8B,KAAMD,EAAOC,KACbC,YAAaF,EAAOE,YACpBC,kBAAmBH,EAAOG,kBAE1B7E,SAASzD,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAKmI,EAAO1E,SAAb,CAAuBC,KAAM,WAE7CxD,KAAKJ,MAAMmN,MAAMlK,EAAM,CAACX,QAASoC,IAAEC,OAAOuI,EAAc,UACxD,MAEA,QACA,0CAKFjK,GACN,GAA8B,WAA1B7C,KAAKJ,MAAMmH,WACXjB,QAAQC,IAAI,sCAGZ,GAA6B,UAAzB/F,KAAKJ,MAAMmK,UAAuB,CAelC,IAbA,IAAIiD,EAAe,GAGfC,EAF0BjN,KAAKJ,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAE7CuI,OAAO,SAACC,EAAO1K,GAKhD,OAJA0K,EAAO1K,EAAO0F,aAAegF,EAAO1K,EAAO0F,cAAgB,GAC3DgF,EAAO1K,EAAO0F,aAAaoD,KAAK,CAC5B9I,WAEG0K,GACT,IAEEC,EAAYtN,OAAOuN,KAAKJ,GAAQvJ,OAE3BgJ,EAAI,EAAGA,EAAIU,EAAWV,IAAK,CAEhC,IAEIY,EAFiBxN,OAAOyN,QAAQN,GAAQP,GAEV,GAGlC1M,KAAKgL,UAAUsC,EAAcN,GAGjC,IAAK,IAAIN,EAAI,EAAGA,EAAIM,EAAatJ,OAAQgJ,IAErBM,EAAaN,GAAGjK,OAAOc,SAASC,KAA5CkJ,EAAE,IAAM,EAA2C,OACV,QAG7C,IAAIc,EAA4BxN,KAAKJ,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,YAKhFiI,EAF2BI,EAAa9G,IAAI,SAACzD,GAAD,OAAYA,EAAOA,SAEzBgC,OAAO+I,GACjDZ,EAAatI,IAAEC,OAAOqI,EAAY,QAEtC5M,KAAKJ,MAAMgE,aAAaf,EAAM,CAACX,QAAS0K,IAExC5M,KAAKwL,YAAYoB,EAAY,cAGzB9G,QAAQC,IAAI,qFAmEjB0H,EAAajK,GAChBiK,IAAgBjK,EAChBxD,KAAKJ,MAAM8N,mBAGX1N,KAAKJ,MAAM+N,gBAAgBnK,oCA+I1B,IAAA/C,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAWb,KAAKJ,MAAMgO,WAAWC,OAAS,wBAC3CnN,EAAAC,EAAAC,cAAA,OAAKC,UAAWb,KAAKJ,MAAMgO,WAAWC,OAAS,sBACvCnN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAAS,kBAAMP,EAAKqN,WAAWrN,EAAKb,MAAMmK,UAAW,UAAU/J,KAAKJ,MAAMmO,YAAYC,MACnJtN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4CAA4CG,QAAS,kBAAMP,EAAKwN,WAAWxN,EAAKb,MAAM6J,YAAxG,SACA/I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAAS,kBAAMP,EAAKqN,WAAWrN,EAAKb,MAAMmK,UAAW,WAAW/J,KAAKJ,MAAMmO,YAAYG,QAExJxN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWb,KAAKJ,MAAMgO,WAAWO,IAAM,2BACxCzN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAAS,kBAAKP,EAAK2N,UAAU3N,EAAKb,MAAM6J,YAArG,aACA/I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAAS,kBAAKP,EAAKoM,eAAepM,EAAKb,MAAM6J,YAA1G,mBACA/I,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAAS,kBAAMP,EAAKyL,gBAAgBzL,EAAKb,MAAM6J,YAA5G,8BAzUIpI,aAiWjBmF,eAVS,SAAApG,GAAK,MAAK,CAC9BqJ,SAAUrJ,EAAMqG,MAAMgD,SACtBmE,WAAYxN,EAAMqG,MAAMmH,WACxB1L,QAAS9B,EAAMqG,MAAM0C,MAAMjH,QAC3B6E,WAAY3G,EAAMqG,MAAMM,WACxBxD,SAAUnD,EAAMqG,MAAMlD,SACtBwG,UAAW3J,EAAMqG,MAAMsD,UACvBgE,YAAa3N,EAAMqG,MAAMsH,cAGW,CAAEnK,eAAcmJ,MVKnC,SAAClK,EAAMN,GAAP,OAAgB,SAAAO,GAEjClB,EAAaiB,EAAMN,GAClBQ,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAIpBJ,EAAS,CACL/B,KC9WK,QD+WL4C,QAASX,EAAIT,WUhBkCoL,gBVhFhC,SAACnK,GAAD,OAAU,SAAAV,GAErC,OAAQU,GACJ,IAAK,OACLV,EAAS,CACD/B,KCzPiB,oBD0PjB4C,QACI,CACIH,KAAMA,EACN6K,QACA,CACAL,KAAM,OACNE,MAAO,sBAIf,MAER,IAAK,QACLpL,EAAS,CACD/B,KCxQiB,oBDyQjB4C,QACI,CACIH,KAAMA,EACN6K,QACA,CACAH,MAAO,OACPF,KAAM,qBAKd,MACR,QACIlI,QAAQC,IAAI,2CU8CwD2H,iBV1ChD,kBAAM,SAAA5K,GAClCA,EAAS,CACL/B,KC3R0B,0BSmUnByF,CAAsFuE,IClW/FuD,uLAEUC,GACO,SAAXA,EAMAvO,KAAKJ,MAAM4O,kBAGXxO,KAAKJ,MAAM6O,qDAGRF,GAIP,GAAe,SAAXA,EAAmB,CACnB,IAAIG,EAAa1O,KAAKJ,MAAMsC,QAAQoB,OAAO,SAACb,GAAD,MAAwC,WAA5BA,EAAOuF,mBAC1D2G,EAAa3O,KAAKJ,MAAMgP,kBAAkB1I,IAAI,SAAAzD,GAAM,OAAIA,EAAO2D,MAC/DyI,EAAgBH,EAAWpL,OAAO,SAACb,GAAD,OAAgD,IAApCkM,EAAWtE,QAAQ5H,EAAO2D,OAC5EpG,KAAKJ,MAAMkP,eAAeJ,EAAYG,QAGtC7O,KAAKJ,MAAMmP,kDAIV,IAAAlP,EAAAG,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAAS,kBAAKnB,EAAK0K,YAAY1K,EAAKD,MAAMoP,6BAA6BhP,KAAKJ,MAAMoP,0BAA/I,gBACAtO,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2CAA2CG,QAAS,kBAAKnB,EAAK6O,WAAW7O,EAAKD,MAAMqP,+BAA+BjP,KAAKJ,MAAMqP,4BAAhJ,wBAlCa5N,aAuDdmF,eATS,SAAApG,GAAK,MAAK,CAC9BqJ,SAAUrJ,EAAMqG,MAAMgD,SACtBvH,QAAS9B,EAAM8B,QAAQA,QACvBgN,iBAAkB9O,EAAMqG,MAAM0C,MAAMjH,QACpC0M,kBAAmBxO,EAAMqG,MAAMmI,kBAC/BK,4BAA6B7O,EAAMqG,MAAMwI,4BACzCD,0BAA2B5O,EAAMqG,MAAMuI,4BAGH,CAAER,gBX+IX,kBAAM,SAAA1L,GACjCA,EAAS,CACL/B,KCnMgC,+BUkDmB0N,gBXqJ5B,kBAAM,SAAA3L,GACjCA,EAAS,CACL/B,KCxMgC,+BUiDoC+N,eX2J9C,SAACK,EAAeC,GAAhB,OAAyC,SAAAtM,GACnEA,EAAS,CACL/B,KCzMwB,mBD0MxB4C,QAAS,CACL0L,IAAKF,EACLG,IAAKF,OWhK2EL,eXqK9D,kBAAM,SAAAjM,GAChCA,EAAS,CACL/B,KClNwB,wBU2CjByF,CAAgG8H,ICxDzGiB,oLAEO1M,GACL7C,KAAKJ,MAAM4P,aAAa3M,sCAGjBA,GACP7C,KAAKJ,MAAM6P,eAAe5M,oCAGrB,IAAAhD,EAAAG,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAA4C,YAAjCb,KAAKJ,MAAMgO,WAAWC,OAAuB,UAAY,UACrEnN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAqC,YAA1Bb,KAAKJ,MAAMmH,WAA2B,6BAA+B,+BAAgC/F,QAAS,kBAAMnB,EAAK6P,WAAW7P,EAAKD,MAAM6J,YAAW/I,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,iBAEvM5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAqC,YAA1Bb,KAAKJ,MAAMmH,WAA2B,+BAAiC,6BAA8B/F,QAAS,kBAAMnB,EAAK8P,SAAS9P,EAAKD,MAAM6J,YAAW/I,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAlBpMjF,aAwCNmF,eARS,SAAApG,GAAK,MAAK,CAC9BqJ,SAAUrJ,EAAMqG,MAAMgD,SACtBmE,WAAYxN,EAAMqG,MAAMmH,WACxB7G,WAAY3G,EAAMqG,MAAMM,WACxBgD,UAAW3J,EAAMqG,MAAMsD,YAIa,CAAEyF,aZ2Md,SAAC3M,GAAD,OAAU,SAAAC,GAElClB,EAAaiB,EADF,CAAC+M,aAAa,IAExB7M,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAOD,EAAIE,YAGrBJ,EAAS,CACL/B,KC1Pc,iBD2Pd4C,QAASX,EAAIT,KAAKqN,kBYrNsBH,eZ2N1B,SAAC5M,GAAD,OAAU,SAAAC,GAEpClB,EAAaiB,EADF,CAAC+M,aAAa,IAExB7M,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAOD,EAAIE,YAGrBJ,EAAS,CACL/B,KCzQgB,mBD0QhB4C,QAASX,EAAIT,KAAKqN,mBYrOnBpJ,CAA4D+I,IC9BrEM,GAAapO,OAAOqO,WACpBC,eACN,SAAAA,EAAYnQ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+P,IACflQ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiQ,GAAA5P,KAAAH,KAAMJ,KACDQ,MAAQ,CACT4P,YAAY,GAHDnQ,mFAQf,IAAMgG,EAAaZ,IACnBjF,KAAKQ,SAASqF,GACdC,QAAQC,IAAI8J,4CAIAI,GACZjQ,KAAKJ,MAAMsQ,YAAYD,oCAGlB,IAAAxP,EAAAT,KACL,OACAU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aACZH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACuP,GAAD,OACLzP,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACwP,EAAD,QAET1P,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qCAAqCG,QAAS,kBAAMP,EAAK4P,gBAAgB5P,EAAKb,MAAM0Q,WAAtG,IAAkHtQ,KAAKJ,MAAMgH,UAA7H,YAGRlG,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAeb,KAAKJ,MAAMgO,WAAWO,KACjDzN,EAAAC,EAAAC,cAAC2P,GAAD,OAEJ7P,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAeb,KAAKJ,MAAMgO,WAAW4C,MACvB,UAAzBxQ,KAAKJ,MAAMmK,UAAwB8F,GAAa,IAAMnP,EAAAC,EAAAC,cAAC6P,GAAD,MAAc/P,EAAAC,EAAAC,cAAC8P,GAAD,MAAyBb,GAAa,IAAMnP,EAAAC,EAAAC,cAAC+P,GAAD,MAAajQ,EAAAC,EAAAC,cAACgQ,GAAD,OAElIlQ,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAeb,KAAKJ,MAAMgO,WAAWC,QACjDnN,EAAAC,EAAAC,cAACiQ,GAAD,OAC2B,IAA1B7Q,KAAKI,MAAM4P,WAAsBtP,EAAAC,EAAAC,cAACkQ,GAAD,MAAa,cAzCvCzP,aA0DLmF,eAVS,SAAApG,GAAK,MAAK,CAC9BkQ,QAASlQ,EAAMsG,QAAQ4J,QACvBtK,WAAY5F,EAAMsG,QAAQV,WAC1BW,MAAOvG,EAAMsG,QAAQC,MACrBC,UAAWxG,EAAMsG,QAAQE,UACzBgH,WAAYxN,EAAMqG,MAAMmH,WACxB7D,UAAW3J,EAAMqG,MAAMsD,YAIa,CAAEmG,YC1Ef,SAACa,GAAD,OAAkB,SAAAjO,GAErCA,EADiB,SAAjBiO,EACS,CACLhQ,KbiBe,eabV,CACLA,Kbaa,iBYqDVyF,CAA2CuJ,aElEpDiB,eAEF,SAAAA,EAAYpR,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgR,IACfnR,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkR,GAAA7Q,KAAAH,KAAMJ,KACDQ,MAAQ,CACT6Q,cAAc,GAElBpR,EAAK0H,aAAe1H,EAAK0H,aAAaC,KAAlB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KACpBA,EAAK6H,aAAe7H,EAAK6H,aAAaF,KAAlB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KACpBA,EAAKqR,aAAerR,EAAKqR,aAAa1J,KAAlB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KAPLA,mFAWf,IAAMgG,EAAaZ,IACnBjF,KAAKQ,SAASqF,wCAELgC,GACTA,EAAMC,iBACN9H,KAAKJ,MAAMuR,iDAEFtJ,GACT,IAAMuJ,EAASvJ,EAAMuJ,OACfvI,EAAQuI,EAAOvI,MACfX,EAAOkJ,EAAOlJ,KAChBmJ,EAAYvR,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAOE,KAAKJ,MAAM6C,OAAlB3C,OAAAwR,GAAA,EAAAxR,CAAA,GAA2BoI,EAAOW,IAClD7I,KAAKJ,MAAM2R,YAAYF,wCAGdxJ,GAGT,IAAI2J,EAFJ3J,EAAMC,iBAGkD0J,EAAX,WAAxCxR,KAAKJ,MAAM6C,OAAO2F,kBAAiD,SAClDpI,KAAKJ,MAAM6C,OAAO0F,YACxC,IAAIhE,EAAY,CACZ+D,KAAMlI,KAAKJ,MAAM6C,OAAOyF,KACxBuJ,SAAUzR,KAAKJ,MAAM6C,OAAOgP,SAC5BtJ,YAAaqJ,EACbpJ,kBAAmBpI,KAAKJ,MAAM6C,OAAO2F,kBACrCJ,iBAAkBhI,KAAKJ,MAAM6C,OAAOuF,iBACpC0J,MAAO1R,KAAKJ,MAAM6C,OAAOiP,OAG7B,GAA4B,QAAxB1R,KAAKJ,MAAM+R,SACX3R,KAAKJ,MAAMgS,UAAUzN,OAEpB,CACD,IAAInC,EAAKhC,KAAKJ,MAAM6C,OAAO2D,IAC3BpG,KAAKJ,MAAMiS,WAAW7P,EAAImC,GAI9BnE,KAAKJ,MAAMuR,6CAGN,IAAA1Q,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACc,IAA5Bb,KAAKI,MAAM6Q,aACRvQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAM4H,SAAUxI,KAAK0H,cACjBhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACLmH,KAAK,OACLW,MAAQ7I,KAAKJ,MAAM6C,OAAOyF,KAC1BU,SAAU,SAACf,GAAD,OAAWpH,EAAK8G,aAAaM,OAI/CnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACLmH,KAAK,WACLW,MAAQ7I,KAAKJ,MAAM6C,OAAOgP,SAC1B7I,SAAU,SAACf,GAAD,OAAWpH,EAAK8G,aAAaM,OAI/CnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,UAAQsH,KAAK,oBAAoBU,SAAU,SAACf,GAAD,OAAWpH,EAAK8G,aAAaM,IAAQgB,MAAO7I,KAAKJ,MAAM6C,OAAO2F,mBACrG1H,EAAAC,EAAAC,cAAA,UAAQkR,aAAa,WAArB,WACApR,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,WAAd,WACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,UAAd,YAIRnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,UAAQsH,KAAK,mBAAmBU,SAAU,SAACf,GAAD,OAAWpH,EAAK8G,aAAaM,IAAQgB,MAAQ7I,KAAKJ,MAAM6C,OAAOuF,kBACrGtH,EAAAC,EAAAC,cAAA,UAAQkR,aAAa,UAArB,UACApR,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,cAAd,gBAIRnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAQsH,KAAK,cAAcU,SAAU,SAACf,GAAD,OAAWpH,EAAK8G,aAAaM,IAAQgB,MAAQ7I,KAAKJ,MAAM6C,OAAO0F,aAChGzH,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,MACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,KAAd,KACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,MACAnI,EAAAC,EAAAC,cAAA,UAAQkR,aAAa,MAArB,MACApR,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,KAAd,KACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,MACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,MACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,KAAd,KACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,MACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,MACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,KAAd,KACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,QAIRnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACLmH,KAAK,QACLW,MAAQ7I,KAAKJ,MAAM6C,OAAOiP,MAC1B9I,SAAU,SAACf,GAAD,OAAWpH,EAAK8G,aAAaM,OAG/CnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAAS8H,MAAM,SAAShI,UAAU,kBAA/C,YACAH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAAS8H,MAAM,SAAShI,UAAU,iBAAiBG,QAAS,SAAC6G,GAAD,OAAWpH,EAAKyQ,aAAarJ,KAAtG,eAIhBnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,8CApIGQ,aA2JJmF,eATS,SAAApG,GAAK,MAAK,CAC9B2R,KAAM3R,EAAM8B,QAAQ6P,KACpBC,KAAM5R,EAAM8B,QAAQ8P,KACpBC,OAAQ7R,EAAM8B,QAAQ+P,OACtBC,OAAQ9R,EAAM8B,QAAQgQ,OACtBzP,OAAQrC,EAAM8B,QAAQO,OACtBkP,SAAUvR,EAAM8B,QAAQyP,WAGY,CAAEC,UXpIjB,SAACrP,GAAD,OAAU,SAAAO,GAC/BgD,QAAQC,IAAI,kBAAmBxD,GAC/BX,EAAcW,GACTQ,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAEfF,EAAIT,KAAK4P,OACdrM,QAAQC,IAAI/C,EAAIT,KAAK6P,SAIC,eADNpP,EAAIT,KACP2F,MAETpC,QAAQC,IAAI,mCACZjD,EAAS,CACL/B,KHhBE,aGiBF4C,QAASX,EAAIT,QAKjBuD,QAAQC,IAAI,sFW8GqB8L,WXxG3B,SAAC7P,EAAIO,GAAL,OAAc,SAAAO,GACpClB,EAAeI,EAAIO,GAClBQ,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGpBJ,EAAS,CACL/B,KHnCW,cGoCX4C,QAASX,EAAIT,WW+FoC4O,UXlFxC,SAACnP,GAAD,OAAQ,SAAAc,GAC7BA,EAAS,CACL/B,KH3DkB,iBc2IkDwQ,YXrEjD,SAAC9O,GAAD,OAAY,SAAAK,GACnCA,EAAS,CACL/B,KHrEoB,eGsEpB4C,QAASlB,OWkEF+D,CAA6EwK,IC7JtFqB,eACF,SAAAA,EAAYzS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqS,IACfxS,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuS,GAAAlS,KAAAH,KAAMJ,KACDQ,MAAQ,CACTkS,YAAY,EACZC,cAAc,GAJH1S,mFASfG,KAAKJ,MAAMoH,eACX,IAAMnB,EAAaZ,IACnBjF,KAAKQ,SAASqF,wCAGL7D,GACT8D,QAAQC,IAAI,gDACZD,QAAQC,IAAI,iEAGKtD,GACjBzC,KAAKJ,MAAMsH,SAASzE,oCAGf,IAAAhC,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,aACCZ,KAAKJ,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,mBAA+B9B,IAAI,SAAAzD,GACvE,OACI/B,EAAAC,EAAAC,cAAA,MAAIuF,IAAK1D,EAAO2D,IAAKvF,UAAU,oBAC3BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uCAAuC4B,EAAOyF,MAC5DxH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4CACiB,IAA1BJ,EAAKL,MAAMkS,WAAsB5R,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sDAAsDG,QAAS,kBAAKP,EAAK+R,qBAAqB/P,KAAhH,QAAyI/B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qDAAlB,WAC9I,IAA5BJ,EAAKL,MAAMmS,aAAwB7R,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wDAAwDG,QAAS,kBAAKP,EAAKwG,aAAaxE,EAAO2D,OAAjH,UAAyI1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uDAAlB,0BAnC5LQ,aAqDVmF,eALS,SAAApG,GAAK,MAAK,CAC9B8B,QAAS9B,EAAM8B,QAAQA,QACvBO,OAAQrC,EAAM8B,QAAQO,SAGc,CAAEuE,eAAcC,eAAcC,YAAvDV,CAAoE6L,ICpD7EI,eACF,SAAAA,EAAY7S,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyS,IACf5S,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2S,GAAAtS,KAAAH,KAAMJ,KACDQ,MAAQ,CACTsS,eAAe,EACfC,iBAAiB,GAJN9S,mFAQfG,KAAKJ,MAAMoH,eACX,IAAMnB,EAAaZ,IACnBjF,KAAKQ,SAASqF,wCAGL7D,GACThC,KAAKJ,MAAMqH,aAAajF,gDAEPS,GACjBzC,KAAKJ,MAAMsH,SAASzE,oCAGf,IAAAhC,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,aACCZ,KAAKJ,MAAMsC,QAAQoB,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,mBAA+B9B,IAAI,SAAAzD,GACvE,OACI/B,EAAAC,EAAAC,cAAA,MAAIuF,IAAK1D,EAAO2D,IAAKvF,UAAU,oBAC3BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uCAAuC4B,EAAOyF,MAC5DxH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4CACoB,IAA7BJ,EAAKL,MAAMsS,cAAyBhS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sDAAsDG,QAAS,kBAAKP,EAAK+R,qBAAqB/P,KAAhH,QAAyI/B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qDAAlB,WAC9I,IAA/BJ,EAAKL,MAAMuS,gBAA2BjS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wDAAwDG,QAAS,kBAAKP,EAAKwG,aAAaxE,EAAO2D,OAAjH,UAAyI1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uDAAlB,0BAhC5LQ,aAiDbmF,eALS,SAAApG,GAAK,MAAK,CAC9B8B,QAAS9B,EAAM8B,QAAQA,QACvBO,OAAQrC,EAAM8B,QAAQO,SAGc,CAAEuE,eAAcC,eAAcC,YAAvDV,CAAoEiM,IC/C7EG,wLAEO5Q,EAAI6Q,GAEb,IAAIC,EAAWC,SAAS/Q,EAAI,IAAM,EACb,aAAlB6Q,GACC7S,KAAKJ,MAAMoT,gBAAgBF,oCAI1B,IAAAjT,EAAAG,KACL,OACAU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,WACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAAA,MAAIoB,GAAG,IAAInB,UAAW,OAASb,KAAKJ,MAAMmS,KAAM/Q,QAAS,kBAAMnB,EAAKoT,aAAa,IAAKpT,EAAKD,MAAMmS,QAAjG,aACArR,EAAAC,EAAAC,cAAA,MAAIoB,GAAG,IAAInB,UAAW,OAASb,KAAKJ,MAAMoS,KAAMhR,QAAS,kBAAMnB,EAAKoT,aAAa,IAAKpT,EAAKD,MAAMoS,QAAjG,aACAtR,EAAAC,EAAAC,cAAA,MAAIoB,GAAG,IAAInB,UAAW,OAASb,KAAKJ,MAAMsT,KAAMlS,QAAS,kBAAMnB,EAAKoT,aAAa,IAAKpT,EAAKD,MAAMsT,QAAjG,IAA2GlT,KAAKJ,MAAM+R,SAAtH,QAIRjR,EAAAC,EAAAC,cAAA,WAASC,UAAW,gBAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAWb,KAAKJ,MAAMqS,OAAS,kBAArC,IAAwDvR,EAAAC,EAAAC,cAACuS,GAAD,MAAxD,KACAzS,EAAAC,EAAAC,cAAA,QAAMC,UAAWb,KAAKJ,MAAMsS,OAAS,kBAArC,IAAwDxR,EAAAC,EAAAC,cAACwS,GAAD,MAAxD,KACA1S,EAAAC,EAAAC,cAAA,QAAMC,UAAWb,KAAKJ,MAAMyT,OAAS,kBAArC,IAAwD3S,EAAAC,EAAAC,cAAC0S,GAAD,MAAxD,eA5BCjS,aA+CNmF,eAVS,SAAApG,GAAK,MAAK,CAC9B2R,KAAM3R,EAAM8B,QAAQqR,KAAK,GACzBvB,KAAM5R,EAAM8B,QAAQqR,KAAK,GACzBL,KAAM9S,EAAM8B,QAAQqR,KAAK,GACzBtB,OAAQ7R,EAAM8B,QAAQsR,OAAO,GAC7BtB,OAAQ9R,EAAM8B,QAAQsR,OAAO,GAC7BH,OAAQjT,EAAM8B,QAAQsR,OAAO,GAC7B7B,SAAUvR,EAAM8B,QAAQyP,WAGY,CAAEqB,gBdkBX,SAAChR,GAAD,OAAQ,SAAAc,GAC/BA,EAAS,CACL/B,KHrDY,WGsDZ4C,QAAS3B,OcrBNwE,CAA+CoM,aCXxDzL,GAASC,EAAQ,IAEVqM,GAAqB,kBAAM,SAAA3Q,GACpClB,IACKmB,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGpB,IAAIwQ,EAAsB,GACP1Q,EAAIT,KAAK2D,IAAI,SAAArD,GAAI,OAAIA,EAAKX,QAAQoB,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,qBAC/DwC,QAAQ,SAAAmJ,GAAK,OAAIA,EAAMzN,IAAI,SAAAzD,GAAM,OAAIiR,EAAoBnI,KAAK9I,EAAO2D,SAEnFtD,EAAS,CACL/B,KlBvDiB,wBkBwDjB4C,QAAS,CACL8C,MAAOzD,EAAIT,KACX4M,cAAeuE,SAmJ1BE,GAAc,SAACf,EAAegB,GAAhB,OAA4B,SAAA/Q,GACnD,GAAsB,YAAlB+P,EACA/P,EAAS,CACL/B,KlBpKwB,uBkBqKxB4C,QAAS,CACLmQ,MAAO,SACPrN,MAAO,SACPvE,QAAS,SACT6R,KAAM,SACNC,MAAO,iBAIf,OAAQH,GACJ,IAAK,QACL/Q,EAAS,CACL/B,KlBjLoB,uBkBkLpB4C,QAAS,CACLmQ,MAAO,UACPrN,MAAO,SACPvE,QAAS,SACT6R,KAAM,SACNC,MAAO,YAIf,MAEA,IAAK,QACDlR,EAAS,CACL/B,KlB/LgB,uBkBgMhB4C,QAAS,CACLmQ,MAAO,SACPrN,MAAO,UACPvE,QAAS,SACT6R,KAAM,SACNC,MAAO,YAGnB,MAEA,IAAK,UACDlR,EAAS,CACD/B,KlB5MY,uBkB6MZ4C,QAAS,CACLmQ,MAAO,SACPrN,MAAO,SACPvE,QAAS,UACT6R,KAAM,SACNC,MAAO,YAGvB,MAEA,IAAK,OACLlR,EAAS,CACL/B,KlBzNoB,uBkB0NpB4C,QAAS,CACLmQ,MAAO,SACPrN,MAAO,SACPvE,QAAS,SACT6R,KAAM,UACNC,MAAO,YAGf,MAEA,IAAK,QACLlR,EAAS,CACL/B,KlBtOoB,uBkBuOpB4C,QAAS,CACLmQ,MAAO,SACPrN,MAAO,SACPvE,QAAS,SACT6R,KAAM,SACNC,MAAO,aAGf,MAEA,QACA,UAwhCCC,GAAmB,SAACC,GAAD,OAAa,SAAApR,GACzCA,EAAS,CACL/B,KlB9uC0B,qBkB+uC1B4C,QAASuQ,MAaJC,GAAgB,SAACjS,GAAD,OAAa,SAAAY,GACtCA,EAAS,CACL/B,KlBxxC+B,0BkByxC/B4C,QAASzB,MAIJkS,GAAoB,SAACC,EAAW9R,GAAZ,OAAqB,SAAAO,GAClDA,EAAS,CACL/B,KlBhwC2B,sBkBiwC3B4C,QAAS,CACLpD,OAAQ8T,EACR9R,KAAMA,OC/0CZ+R,8MAkBF7O,YAAc,SAACnD,GACXzC,EAAKD,MAAMgD,QAAQN,uFAhBnBtC,KAAKJ,MAAM2U,gEAGE1B,EAAe1G,GAC5B,IAAIkI,EAC8BA,EAAZ,YAAlBxB,EAA0C,SAC3B,UAEnB,IAAI2B,EAAgBxU,KAAKJ,MAAM6U,eAAeC,MAAM,EAAGvI,GACnDwI,EAAe3U,KAAKJ,MAAM6U,eAAeC,MAAMvI,EAAM,GACrDyI,EAAQ9U,OAAA0E,EAAA,EAAA1E,CAAO0U,GAAP/P,OAAA,CAAsB4P,GAAtBvU,OAAA0E,EAAA,EAAA1E,CAAoC6U,IAEhD3U,KAAKJ,MAAMiV,cAAcD,uCAOjBE,GAAQ,IAAArU,EAAAT,KAChB,OAAOF,OAAOiV,OAAOD,GAAQ5O,IAAI,SAACrD,EAAM6J,GACpC,OACQhM,EAAAC,EAAAC,cAAA,UAAQuF,IAAKtD,EAAKuD,IAAKvF,UAAU,kCAAkCG,QAAS,kBAAKP,EAAKgF,YAAY5C,EAAKuD,OAAvG,IAA+GvD,EAAKuD,IAApH,2CAKJ0O,GAAQ,IAAAE,EAAAhV,KAChB,OAAOF,OAAOyN,QAAQzN,OAAOiV,OAAOD,GAAQ,IAAI5O,IAAI,SAAA+O,EAAevI,GAAM,IAAAwI,EAAApV,OAAAqV,GAAA,EAAArV,CAAAmV,EAAA,GAAnB9O,EAAmB+O,EAAA,GAAdrM,EAAcqM,EAAA,GACrE,OACIxU,EAAAC,EAAAC,cAAA,OAAKuF,IAAMuG,GACPhM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBsF,EAA9B,KACAzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVmU,EAAKI,YAAYvM,0CAQ3BiM,GAAQ,IAAAO,EAAArV,KAEf,OADqBsE,IAAEC,OAAOzE,OAAOiV,OAAOD,IAASQ,UAC/BpP,IAAI,SAACqP,EAAM7I,GAC7B,OACIhM,EAAAC,EAAAC,cAAA,OAAKuF,IAAKuG,GACNhM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAYf,OAAOuN,KAAKkI,IACtC7U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBG,QAAS,kBAAKqU,EAAKG,iBAAiBH,EAAKzV,MAAM6U,eAAe/H,GAAIA,KAApG,IAA2I,YAAjC2I,EAAKzV,MAAM6U,eAAe/H,GAAmB,SAAW,WAEtKhM,EAAAC,EAAAC,cAAA,OAAKC,UAAWwU,EAAKzV,MAAM6U,eAAiBY,EAAKzV,MAAM6U,eAAe/H,GAAK,uBACtE2I,EAAKI,YAAYF,wCAQlC,OACI7U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACPH,EAAAC,EAAAC,cAAA,WACKZ,KAAK0V,WAAW1V,KAAKJ,MAAM+V,uBAjEzBtU,aAoFZmF,eANS,SAAApG,GAAK,MAAK,CAC9BuV,aAAcvV,EAAMwV,MAAMD,aAC1BlB,eAAgBrU,EAAMwV,MAAMnB,iBAIQ,CAAEF,qBDbN,kBAAM,SAAAzR,GAEtC,IAAM+S,EAAW,SAACC,GACd,OAAQA,GACJ,IAAK,KACL,MAAgB,UAEhB,IAAK,KACL,MAAgB,WAEhB,IAAK,KACL,MAAgB,QAEhB,IAAK,KACL,MAAgB,QAEhB,IAAK,KACL,MAAgB,MAEhB,IAAK,KACL,MAAgB,OAEhB,IAAK,KACL,MAAgB,OAEhB,IAAK,KACL,MAAgB,SAEhB,IAAK,KACL,MAAgB,YAEhB,IAAK,KACL,MAAgB,UAEhB,IAAK,KACL,MAAgB,WAEhB,IAAK,KACL,MAAgB,WAEhB,QACA,SAKFC,EAAa,SAAClT,GAAD,OAAUA,EAAKmT,UAAU,EAAG,IACzCC,EAAc,SAACpT,GAAD,OAAUA,EAAKmT,UAAU,EAAE,IA2B/CpU,IACKmB,KAAK,SAAAC,GACF,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGpB,IACIyS,EAhCM,SAAChC,GASnB,IARA,IAAImB,EACJnB,EAAMzG,OAAO,SAACgJ,EAASrT,GAGnB,OAFAqT,EAASH,EAAWlT,EAAKuD,MAAQ8P,EAASH,EAAWlT,EAAKuD,OAAS,GACnE8P,EAASH,EAAWlT,EAAKuD,MAAMmF,KAAK1I,GAC7BqT,GACL,IAEFC,EAAiB,GACZzJ,EAAI,EAAGA,EAAI5M,OAAOiV,OAAOD,GAAQpR,OAAQgJ,IAAK,CAEnD,IAAI0J,EAAWtW,OAAOiV,OAAOD,GAAQpI,GAAGQ,OAAO,SAACmJ,EAAWxT,GAIvD,OAFAwT,EAAUR,EAASI,EAAYpT,EAAKuD,OAASiQ,EAAUR,EAASI,EAAYpT,EAAKuD,QAAU,GAC3FiQ,EAAUR,EAASI,EAAYpT,EAAKuD,OAAOmF,KAAK1I,GACzCwT,GACL,IAINF,EAAe5K,KAAfzL,OAAAwR,GAAA,EAAAxR,CAAA,GAAsBA,OAAOuN,KAAKyH,GAAQpI,GAAK0J,IAE/C,OAAOD,EAUgBG,CADHtT,EAAIT,KAAKe,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,KAAOe,KAASmB,OAAO,iBAEhEiO,EAAQzW,OAAOuN,KAAKvN,OAAOiV,OAAOY,IAAezP,IAAI,SAAAyF,GAAC,OAAA7L,OAAAqV,GAAA,EAAArV,CAAU,UAAV,MAAU,YAEpEgD,EAAS,CACL/B,KlBhKmB,0BkBiKnB4C,QACI,CACId,KAAM8S,EACN/H,WAAY2I,SC5EwB1B,cDmFnC,SAAClB,GAAD,OAAW,SAAA7Q,GACpCA,EAAS,CACD/B,KlBrI0B,yBkBsI1B4C,QAASgQ,MCtF0D/Q,WAAhE4D,CAA4E8N,IClFrFkC,eACF,SAAAA,EAAY5W,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwW,IACf3W,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0W,GAAArW,KAAAH,KAAMJ,KACDQ,MAAQ,CACTqW,WAAW,EACXzG,YAAY,GAJDnQ,mFAQf,IAAMgG,EAAaZ,IACnBa,QAAQC,IAAI,6BAA8BF,GAC1C7F,KAAKQ,SAASqF,mCAGV7B,EAAUjD,EAAM2V,GACpB,IAAIpU,EAAStC,KAAKJ,MAAMiD,KAAKuD,IAC7B,OAAQrF,GACJ,IAAK,gBACL,IAAI4V,EAAaD,EAAe,EAC5BE,EAAc5W,KAAKJ,MAAMiD,KAAKgU,WAAa,EAC/C,QAAQ,GACJ,KAAKD,EAAc5W,KAAKJ,MAAMiD,KAAKiU,YACnC9W,KAAKJ,MAAMgE,aAAatB,EAAO,CAACuU,WAAYD,EAAaG,IAAK,OAAQC,aAAc,CAACvU,OAAQuB,EAAUT,SAAU,CAAC0T,MAAON,MACzH,MAEA,KAAKC,EAAc5W,KAAKJ,MAAMiD,KAAKiU,YACnC9W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACuU,WAAYD,EAAaG,IAAK,QAASC,aAAc,CAACvU,OAAQuB,EAAUT,SAAU,CAAC0T,MAAON,MAC3H,MAEA,KAAKC,IAAgB5W,KAAKJ,MAAMiD,KAAKiU,YACrC9W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACuU,WAAYD,EAAaG,IAAK,MAAOC,aAAc,CAACvU,OAAQuB,EAAST,SAAU,CAAC0T,MAAON,MACxH,MAEA,QACA,OAEJ,MAEA,IAAK,iBAGL,OAFAA,EAAaD,EAAe,EAC5BE,EAAc5W,KAAKJ,MAAMiD,KAAKiU,YAAc,GACpC,GACJ,KAAKF,EAAc5W,KAAKJ,MAAMiD,KAAKgU,WACnC7W,KAAKJ,MAAMgE,aAAatB,EAAO,CAACwU,YAAaF,EAAaG,IAAK,QAASC,aAAc,CAACvU,OAAQuB,EAAUT,SAAU,CAAC0T,MAAON,MAC3H,MAEA,KAAKC,EAAc5W,KAAKJ,MAAMiD,KAAKgU,WACnC7W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACwU,YAAaF,EAAaG,IAAK,OAAQC,aAAc,CAACvU,OAAQuB,EAAUT,SAAU,CAAC0T,MAAON,MAC3H,MAEA,KAAKC,IAAgB5W,KAAKJ,MAAMiD,KAAKgU,WACrC7W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACwU,YAAaF,EAAaG,IAAK,MAAOC,aAAc,CAACvU,OAAQuB,EAAST,SAAU,CAAC0T,MAAON,MACzH,MAEA,QACA,OAEJ,MAEA,IAAK,sBAGL,GAFAA,EAAaD,EAAe,EAC5BE,EAAc5W,KAAKJ,MAAMiD,KAAKgU,WAAa,EACvCF,GAAc,GAAKC,GAAe,EAClC,QAAQ,GACJ,KAAKA,EAAc5W,KAAKJ,MAAMiD,KAAKiU,YACnC9W,KAAKJ,MAAMgE,aAAatB,EAAO,CAACuU,WAAYD,EAAaG,IAAK,OAAQC,aAAc,CAACvU,OAAQuB,EAAUT,SAAU,CAAC0T,MAAON,MACzH,MAEA,KAAKC,EAAc5W,KAAKJ,MAAMiD,KAAKiU,YACnC9W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACuU,WAAYD,EAAaG,IAAK,QAASC,aAAc,CAACvU,OAAQuB,EAAUT,SAAU,CAAC0T,MAAON,MAC3H,MAEA,KAAKC,IAAgB5W,KAAKJ,MAAMiD,KAAKiU,YACrC9W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACuU,WAAYD,EAAaG,IAAK,MAAOC,aAAc,CAACvU,OAAQuB,EAAST,SAAU,CAAC0T,MAAON,MACxH,MAEA,QACA,OAGR,MAEA,IAAK,uBAGL,GAFAA,EAAaD,EAAe,EAC5BE,EAAc5W,KAAKJ,MAAMiD,KAAKiU,YAAc,EACxCH,GAAc,GAAKC,GAAe,EAClC,QAAQ,GACJ,KAAKA,EAAc5W,KAAKJ,MAAMiD,KAAKgU,WACnC7W,KAAKJ,MAAMgE,aAAatB,EAAO,CAACwU,YAAaF,EAAaG,IAAK,QAASC,aAAc,CAACvU,OAAQuB,EAAUT,SAAU,CAAC0T,MAAON,MAC3H,MAEA,KAAKC,EAAc5W,KAAKJ,MAAMiD,KAAKgU,WACnC7W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACwU,YAAaF,EAAaG,IAAK,OAAQC,aAAc,CAACvU,OAAQuB,EAAUT,SAAU,CAAC0T,MAAON,MAC3H,MAEA,KAAKC,IAAgB5W,KAAKJ,MAAMiD,KAAKgU,WACrC7W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACwU,YAAaF,EAAaG,IAAK,MAAOC,aAAc,CAACvU,OAAQuB,EAAST,SAAU,CAAC0T,MAAON,MACzH,MAEA,QACA,OAGR,MAEA,IAAK,aACL,IAAIO,EAAeR,EAAe,EAClC1W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAAC4T,QAASD,KACvE,MAGA,IAAK,oBACLA,EAAeR,EAAe,IACV,GAChB1W,KAAKJ,MAAMgE,aAAatB,EAAQ,CAACG,OAAQuB,EAAUT,SAAU,CAAC4T,QAASD,KAE3E,MAEA,QACA,yCAKC,IAAAzW,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACZH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWb,KAAKJ,MAAMiD,KAAKuD,KACzC1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,OAAiCH,EAAAC,EAAAC,cAAA,WAAMZ,KAAKJ,MAAMiD,KAAKgU,YACvDnW,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,UACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,SACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,aAGRH,EAAAC,EAAAC,cAAA,aACKZ,KAAKJ,MAAMsC,QAAWlC,KAAKJ,MAAMsC,QAC7BoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA+C,SAAzBlC,EAAOc,SAASC,OACvE0C,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYsF,IAAK1D,EAAO2D,KAClC1F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA2B4B,EAAOyF,MAEhDxH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACe,IAAzBJ,EAAKL,MAAMqW,UAAqB/V,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAW,0BAA4BJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAKP,EAAK2W,QAAQ3U,EAAO2D,IAAI,gBAAgB3D,EAAOc,SAAS0T,UAAa,KACtNvW,EAAAC,EAAAC,cAAA,OAAKC,UAAW4B,EAAOc,SAAS0T,MAAQ,EAAI,YAAc,aAAiBxU,EAAOc,SAAS0T,QACjE,IAAzBxW,EAAKL,MAAMqW,UAAqB/V,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,0BAA4BJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAKP,EAAK2W,QAAQ3U,EAAO2D,IAAI,sBAAsB3D,EAAOc,SAAS0T,UAAc,OAItOvW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACe,IAAzBJ,EAAKL,MAAMqW,UAAqB/V,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAW,2BAA6BJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAKP,EAAK2W,QAAQ3U,EAAO2D,IAAI,aAAa3D,EAAOc,SAAS4T,YAAgB,KACvNzW,EAAAC,EAAAC,cAAA,OAAKC,UAAW4B,EAAOc,SAAS4T,QAAU,EAAI,YAAc,aAAiB1U,EAAOc,SAAS4T,UACnE,IAAzB1W,EAAKL,MAAMqW,UAAqB/V,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAW,2BAA6BJ,EAAKb,MAAMmH,WAAa/F,QAAS,kBAAKP,EAAK2W,QAAQ3U,EAAO2D,IAAI,mBAAmB3D,EAAOc,SAAS4T,YAAe,UAM9O,QAKhBzW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,QAAkCH,EAAAC,EAAAC,cAAA,WAAMZ,KAAKJ,MAAMiD,KAAKiU,aACxDpW,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,UACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,SACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,aAGRH,EAAAC,EAAAC,cAAA,aACKZ,KAAKJ,MAAMsC,QAAWlC,KAAKJ,MAAMsC,QAC7BoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAA+C,UAAzBlC,EAAOc,SAASC,OACvE0C,IAAI,SAAAzD,GACD,OACI/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYsF,IAAK1D,EAAO2D,KAClC1F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA2B4B,EAAOyF,MAEhDxH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACe,IAAzBJ,EAAKL,MAAMqW,UAAqB/V,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAcwD,KAAK,KAAKjJ,UAAW,eAAiBJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAKP,EAAK2W,QAAQ3U,EAAO2D,IAAI,iBAAiB3D,EAAOc,SAAS0T,UAAa,KACtNvW,EAAAC,EAAAC,cAAA,OAAKC,UAAW4B,EAAOc,SAAS0T,MAAQ,EAAI,YAAc,aAAiBxU,EAAOc,SAAS0T,QACjE,IAAzBxW,EAAKL,MAAMqW,UAAqB/V,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAewD,KAAK,KAAKjJ,UAAW,eAAiBJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAKP,EAAK2W,QAAQ3U,EAAO2D,IAAI,uBAAuB3D,EAAOc,SAAS0T,UAAa,OAIrOvW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACe,IAAzBJ,EAAKL,MAAMqW,UAAqB/V,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAcwD,KAAK,KAAKjJ,UAAW,gBAAkBJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAKP,EAAK2W,QAAQ3U,EAAO2D,IAAI,aAAa3D,EAAOc,SAAS4T,YAAe,KACrNzW,EAAAC,EAAAC,cAAA,OAAKC,UAAW4B,EAAOc,SAAS4T,QAAU,EAAI,YAAc,aAAiB1U,EAAOc,SAAS4T,UACnE,IAAzB1W,EAAKL,MAAMqW,UAAqB/V,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAewD,KAAK,KAAKjJ,UAAW,gBAAkBJ,EAAKb,MAAMmH,WAAY/F,QAAS,kBAAKP,EAAK2W,QAAQ3U,EAAO2D,IAAI,mBAAmB3D,EAAOc,SAAS4T,YAAe,UAM5O,WAOL,IAA1BnX,KAAKI,MAAM4P,WAAsBtP,EAAAC,EAAAC,cAACkQ,GAAD,MAAa,aAtNtCzP,aAmOVmF,eAPS,SAAApG,GAAK,MAAK,CAC9ByC,KAAMzC,EAAMqG,MAAM0C,MAClBjH,QAAS9B,EAAMqG,MAAM0C,MAAMjH,QAC3B6E,WAAY3G,EAAMqG,MAAMM,aAIY,CAAEnD,gBAA3B4C,CAA4CgQ,ICjO5Ca,oLATP,OACI3W,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,sFAJWQ,aCSrBiW,oLAEF,OACI5W,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,eACAH,EAAAC,EAAAC,cAAC2W,GAAD,OAEsC,YAAzCvX,KAAKJ,MAAMgO,WAAWxK,eACtB1C,EAAAC,EAAAC,cAAA,WAASC,UAAW,aAAeb,KAAKJ,MAAMgO,WAAWxK,gBACtD1C,EAAAC,EAAAC,cAAC4W,GAAD,OAEH9W,EAAAC,EAAAC,cAAA,WAASC,UAAW,aAAeb,KAAKJ,MAAMgO,WAAWzK,WACtDzC,EAAAC,EAAAC,cAAC6W,GAAD,gBAfApW,aA6BLmF,eALS,SAAApG,GAAK,MAAK,CAC9BwN,WAAYxN,EAAMqG,MAAMmH,aAIY,CAAE4H,iBJgCV,SAACzE,GAAD,OAAkB,SAAAjO,GACzB,WAAjBiO,GACAjO,EAAS,CACL/B,KlB/BuB,2BsBJpByF,CAAiD8Q,IChC1DnQ,GAASC,EAAQ,IACjBsQ,eACF,SAAAA,EAAY9X,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0X,IACf7X,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4X,GAAAvX,KAAAH,KAAMJ,KACDQ,MAAQ,GAGbP,EAAK8X,kBAAoB9X,EAAK8X,kBAAkBnQ,KAAvB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KACzBA,EAAK+X,gBAAkB/X,EAAK+X,gBAAgBpQ,KAArB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KACvBA,EAAK6H,aAAe7H,EAAK6H,aAAaF,KAAlB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KAPLA,iFAUDoC,GACdjC,KAAKQ,SAAS,CACVqX,UAAW5V,4CAIHA,GACZjC,KAAKQ,SAAS,CACVsX,QAAS7V,yCAIJ4F,GACTA,EAAMC,iBACN,IAAI+P,EAAY1Q,GAAOnH,KAAKI,MAAMyX,WAAWvP,OAAO,cAChDwP,EAAU3Q,GAAOnH,KAAKI,MAAM0X,SAASxP,OAAO,cAChDtI,KAAKJ,MAAMmY,gBAAgBF,EAAWC,oCAKtC,OACIpX,EAAAC,EAAAC,cAAA,OAAKC,UAAW,oBAAsBb,KAAKJ,MAAMoY,aAC7CtX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,QAAM4H,SAAUxI,KAAK0H,cACjBhH,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,WACRtB,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACIC,gBAAgB,mBAChBC,SAAU3I,KAAKI,MAAMyX,UACrBI,cAAY,EACZJ,UAAW7X,KAAKI,MAAMyX,UACtBC,QAAS9X,KAAKI,MAAM0X,QACpBlP,SAAU5I,KAAK2X,kBACfO,aAAa,IAGjBxX,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CACIC,gBAAgB,qBAChBC,SAAU3I,KAAKI,MAAM0X,QACrBK,YAAU,EACVN,UAAW7X,KAAKI,MAAMyX,UACtBC,QAAS9X,KAAKI,MAAM0X,QACpBlP,SAAU5I,KAAK4X,gBACfM,aAAa,IAEbxX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQoB,GAAG,eAAenB,UAAU,oCAAoCqH,KAAK,SAASnH,KAAK,UAA3F,sBAzDRM,aA0ETmF,eALS,SAAApG,GAAK,MAAK,CAC9B4X,YAAa5X,EAAMwV,MAAMoC,cAIW,CAAED,gBLoOX,SAACK,EAAOC,GAAR,OAAgB,SAAAvV,GAC7B,iBAAVsV,IAA2BA,EAAQ,cAC3B,iBAARC,IAAyBA,EAAMlR,KAASmB,OAAO,eACnDxF,EAAS,CACL/B,KlBjRsB,iBkBkRtB4C,QAAS,CACL2U,KAAMF,EACNG,GAAIF,QK3OD7R,CAA+CkR,IC3ExDc,+LAGExY,KAAKJ,MAAM6T,yDAGHZ,GACR7S,KAAKJ,MAAMgU,YAAYf,EAAe,0CAGjC,IAAAhT,EAAAG,KACL,OACQU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYG,QAAS,kBAAKnB,EAAK+T,YAAY/T,EAAKD,MAAMoY,eAApE,IAA+G,WAA3BhY,KAAKJ,MAAMoY,YAA2BtX,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAU,gBAAkBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,aAAazF,UAAU,gBAAvO,kBAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBAAkBb,KAAKJ,MAAMoY,aACzCtX,EAAAC,EAAAC,cAAA,OAAKC,UAAW,sBAAwBb,KAAKJ,MAAMoY,aAC/CtX,EAAAC,EAAAC,cAAC6X,GAAD,iBArBLpX,aAyCZmF,eALS,SAAApG,GAAK,MAAK,CAC9BsY,SAAUtY,EAAMwV,MAAM+C,gBACtBX,YAAa5X,EAAMwV,MAAMoC,cAGW,CAAEvE,sBAAoBG,gBAA/CpN,CAA+DgS,ICjDjEI,GAAmB,SAACC,EAAgBC,GAE7C,GAAIA,EAAapV,OAAS,GAAKmV,EAAenV,OAAS,EAAG,CAEtD,IAAIqV,EAA2B,GAsG/B,OApGAF,EAAerO,QAAQ,SAACwO,GAIpB,IAAIC,EAAcH,EAAaxV,OAAO,SAAAT,GAAI,OAAIA,EAAKX,QAAQoB,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQ4S,EAAY5S,MAAK,KAE5G,GAAI6S,EAAYvV,OAAS,EAAG,CACxB,IAAIwV,EAAgBD,EAAY/L,OAAO,SAAChL,EAASW,GAE7C,IAAIU,EAAWV,EAAKX,QAAQoB,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQ4S,EAAY5S,MAAKF,IAAI,SAAAzD,GAAM,OAAIA,EAAOc,WAgClG,GA5BArB,EAAQgG,KAAO8Q,EAAY9Q,KAC3BhG,EAAQkE,IAAM4S,EAAY5S,IAC1BlE,EAAQ8F,iBAAmBgR,EAAYhR,iBACvC9F,EAAQkG,kBAAoB4Q,EAAY5Q,kBAExClG,EAAQ+W,YAAc/W,EAAQ+W,aAAe,IAChB,IAA1B1V,EAAS,GAAGoB,YACC,EACZzC,EAAQ+W,YAAY1N,KADR,IAIhBrJ,EAAQ+U,MAAQ/U,EAAQ+U,OAAS,IACJ,IAA1B1T,EAAS,GAAGoB,WACXzC,EAAQ+U,MAAM1L,KAAKhI,EAAS,GAAG0T,OAGnC/U,EAAQiV,QAAUjV,EAAQiV,SAAW,IACP,IAA1B5T,EAAS,GAAGoB,WACZzC,EAAQiV,QAAQ5L,KAAKhI,EAAS,GAAG4T,SAGrCjV,EAAQiX,KAAOjX,EAAQiX,MAAQ,IACF,IAA1B5V,EAAS,GAAGoB,WAAsB9B,EAAKkU,MAAQxT,EAAS,GAAGC,OACrD,MACLtB,EAAQiX,KAAK5N,KADR,QAITrJ,EAAQkX,OAASlX,EAAQkX,QAAU,IACN,IAA1B7V,EAAS,GAAGoB,WAAmC,QAAb9B,EAAKkU,KAAiBlU,EAAKkU,MAAQxT,EAAS,GAAGC,KAAK,CAErFtB,EAAQkX,OAAO7N,KADL,QAKd,GADArJ,EAAQmX,KAAOnX,EAAQmX,MAAQ,IACF,IAA1B9V,EAAS,GAAGoB,WAAmC,QAAb9B,EAAKkU,IAAc,CAEpD7U,EAAQmX,KAAK9N,KADJ,OAIb,OAAOrJ,GACJ,IAEHoX,EAAsBJ,EAAcD,YAAcC,EAAcD,YAAYvV,OAAS,EACrF6V,EAAgBL,EAAcC,KAAKzV,OACnC8V,EAAkBN,EAAcE,OAAO1V,OACvC+V,EAAgBP,EAAcG,KAAK3V,OACnCgW,EAAaJ,EAAsB,EAAIlO,KAAKC,MAAO6N,EAAcC,KAAKzV,OAASwV,EAAcD,YAAYvV,OAAU,KAAO,MAC1HiW,EAAcL,EAAsB,EAAIlO,KAAKC,MAAO6N,EAAcE,OAAO1V,OAASwV,EAAcD,YAAYvV,OAAU,KAAO,MAC7HkW,EAAaN,EAAsB,EAAIlO,KAAKC,MAAO6N,EAAcG,KAAK3V,OAASwV,EAAcD,YAAYvV,OAAU,KAAO,MAC1HmW,EAAiBX,EAAcjC,MAAQiC,EAAcjC,MAAM/J,OAAO,SAACvM,EAAEmZ,GAAH,OAASnZ,EAAImZ,GAAG,GAAK,EACvFC,EAAmBb,EAAc/B,QAAU+B,EAAc/B,QAAQjK,OAAO,SAACvM,EAAGmZ,GAAJ,OAAUnZ,EAAImZ,GAAG,GAAK,EAC9FE,EAAMV,EAAsB,EAAIW,WAAYJ,EAAiBP,GAAwB,MACrFY,EAAMZ,EAAsB,EAAIW,WAAYF,EAAmBT,GAAwB,MAE3FJ,EAAcD,YAAcK,EAC5BJ,EAAcC,KAAOI,EACrBL,EAAcE,OAASI,EACvBN,EAAcG,KAAOI,EACrBP,EAAcQ,WAAaA,EAC3BR,EAAcS,YAAcA,EAC5BT,EAAcU,WAAaA,EAC3BV,EAAcjC,MAAQ4C,EACtBX,EAAc/B,QAAU4C,EACHb,EAAcc,IAAvB,QAARA,EAAqCG,OAAOC,UAAUJ,GAAOA,EAAMA,EAAIK,QAAQ,GAA+BL,EAC7Fd,EAAcgB,IAAvB,QAARA,EAAqCC,OAAOC,UAAUF,GAAOA,EAAMA,EAAIG,QAAQ,GAA+BH,EAElHnB,EAAyBxN,KAAK2N,OAC3B,CACH,IAAIoB,EAAsB,CACtBpS,KAAM8Q,EAAY9Q,KAClB+Q,YAAa,EACbhC,MAAO,MACPE,QAAS,MACTnP,iBAAkBgR,EAAYhR,iBAC9B0R,WAAY,MACZC,YAAa,MACbC,WAAY,MACZ7C,IAAK,MACLwD,KAAM,MACNC,IAAK,MACLR,IAAK,MACLE,IAAK,MACL9T,IAAK4S,EAAY5S,KAErB2S,EAAyBxN,KAAK+O,MAG/BvB,IAIF0B,GAAkB,SAACC,GAC5B,IAAIC,EAAS,GACTC,EAAa,GACbC,EAAe,GACfC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAW,GACXC,EAAW,GAkGX,OAjGJT,EAAalQ,QAAQ,SAAAmB,GACjBgP,EAAOpP,KAAKI,EAAEzD,MACd0S,EAAWrP,KAAKI,EAAEsL,OAClB4D,EAAatP,KAAKI,EAAEwL,SACpB2D,EAAiBvP,KAAKI,EAAEsN,aACxB8B,EAAgBxP,KAAKI,EAAE+N,YACvBsB,EAAiBzP,KAAKI,EAAEgO,aACxBsB,EAAgB1P,KAAKI,EAAEiO,YACvBsB,EAAS3P,KAAKI,EAAEqO,KAChBmB,EAAS5P,KAAKI,EAAEuO,OAGF,CACdS,OAAQA,EAERS,SAAU,CACN,CACIC,MAAO,QACP9Y,KAAMqY,EACNU,gBAAiB,0BACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,0BACtBC,iBAAkB,2BAEtB,CACIL,MAAO,UACP9Y,KAAMsY,EACNS,gBAAiB,0BACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,0BACtBC,iBAAkB,0BAClBC,aAAc,IAElB,CACIN,MAAO,QACP9Y,KAAMuY,EACNQ,gBAAiB,0BACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,0BACtBC,iBAAkB,0BAClBC,aAAc,IAElB,CACIN,MAAO,WACP9Y,KAAMwY,EACNO,gBAAiB,uBACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,uBAClBC,aAAc,IAElB,CACIN,MAAO,aACP9Y,KAAMyY,EACNM,gBAAiB,UACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,UACtBC,iBAAkB,UAClBC,aAAc,IAElB,CACIN,MAAO,WACP9Y,KAAM0Y,EACNK,gBAAiB,UACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,UACtBC,iBAAkB,UAClBC,aAAc,IAElB,CACIN,MAAO,MACP9Y,KAAM2Y,EACNI,gBAAiB,wBACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,wBACtBC,iBAAkB,wBAClBC,aAAc,IAElB,CACIN,MAAO,MACP9Y,KAAM4Y,EACNG,gBAAiB,0BACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,0BACtBC,iBAAkB,0BAClBE,QAAS,CAACD,aAAc,SCpMlCE,+LAGE7b,KAAKJ,MAAM6T,0DAGF5Q,GAET7C,KAAKJ,MAAMkc,aAAajZ,GACxB,IAAIiW,EAAe9Y,KAAKJ,MAAMmc,cAAczY,OAAO,SAAA0Y,GAAK,OAAIA,EAAM5V,MAAQvD,EAAKuD,MAC3E6V,EAAarD,GAAiB5Y,KAAKJ,MAAMsc,gBAAiBpD,GAG9D,GAFA9Y,KAAKJ,MAAMuU,cAAe8H,GAEtBnD,EAAapV,OAAS,EAAG,CAGzB,IAAIyY,EAAY1B,GAAgBwB,GAChCjc,KAAKJ,MAAMqU,iBAAiBkI,QAG5BrW,QAAQC,IAAI,wEAIN+S,GAAc,IAAAjZ,EAAAG,KAExB8Y,EAAatO,QAAQ,SAAA3H,GAAI,OAAIhD,EAAKuc,eAAevZ,KACjD,IAAIoZ,EAAarD,GAAiB5Y,KAAKJ,MAAMsc,gBAAiBpD,GAG9D,GAFA9Y,KAAKJ,MAAMuU,cAAe8H,GAEtBjc,KAAKJ,MAAMyc,mBAAqB,EAAG,CACnC,IAAIF,EAAY1B,GAAiBwB,GACjCjc,KAAKJ,MAAMqU,iBAAiBkI,QAG5BrW,QAAQC,IAAI,0DAIR8M,GACR7S,KAAKJ,MAAMgU,YAAYf,EAAe,gDAG3BtS,GACXP,KAAKJ,MAAM0c,eAAe/b,GAE1BP,KAAKuc,cAAcvc,KAAKJ,MAAM+Y,4DAGhB,IAAAlY,EAAAT,KACdA,KAAKJ,MAAM4c,mBACXxc,KAAKJ,MAAM+Y,gBAAgBnO,QAAQ,SAAA3H,GAAI,OAAIpC,EAAKb,MAAMkc,aAAajZ,KACnE7C,KAAKuc,cAAc,2CAIR1Z,GACM7C,KAAKJ,MAAMmc,cAAc7V,IAAI,SAAAuW,GAAa,OAAIA,EAAcrW,MAC5DsW,SAAS7Z,EAAKuD,MAC3BpG,KAAKJ,MAAM+c,WAAW9Z,4CAIbA,GACb,IAAI8L,EAAa3O,KAAKJ,MAAMgd,gBAAgB1W,IAAI,SAAA2W,GAAe,OAAIA,EAAgBzW,MACnFN,QAAQC,IAAI,oCAAqC4I,GAC3CA,EAAW+N,SAAS7Z,EAAKuD,MAC3BpG,KAAKJ,MAAMkc,aAAajZ,oCAIvB,IAAAmS,EAAAhV,KACL,OACQU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYG,QAAS,kBAAKgU,EAAKpB,YAAYoB,EAAKpV,MAAMkd,eAApE,IAA+G,WAA3B9c,KAAKJ,MAAMkd,YAA2Bpc,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAU,gBAAkBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,aAAazF,UAAU,gBAAvO,kBAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAWb,KAAKJ,MAAMkd,YAAc,aACrCpc,EAAAC,EAAAC,cAAA,OAAKC,UAAWb,KAAKJ,MAAMkd,YAAc,eACrCpc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACuB,oBAAjCb,KAAKJ,MAAMmd,kBACRrc,EAAAC,EAAAC,cAAA,UAAQC,UAAW,iCAAmCb,KAAKJ,MAAMmd,kBAAmB/b,QAAS,kBAAMgU,EAAKsH,eAAetH,EAAKpV,MAAMmd,qBAAlI,UAA6Jrc,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,OAAOzF,UAAU,qBAApM,KAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAW,iCAAmCb,KAAKJ,MAAMmd,kBAAmB/b,QAAS,kBAAMgU,EAAKwH,qBAAxG,UAAmI9b,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,QAAQzF,UAAU,qBAA3K,OAMZH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,wBAA0Bb,KAAKJ,MAAMkd,aAC5C9c,KAAKJ,MAAM+Y,gBAAgBjV,OAAS,EACjC1D,KAAKJ,MAAM+Y,gBACVzS,IAAI,SAAArD,GAAI,OAAgD,IAA5CmS,EAAKpV,MAAMmc,cAAc1R,QAAQxH,GAC7CnC,EAAAC,EAAAC,cAAA,UAAQuF,IAAKtD,EAAKuD,IAAKvF,UAAU,qCAAqCG,QAAS,kBAAMgU,EAAKuH,cAAL,CAAoB1Z,GAApB4B,OAAA3E,OAAA0E,EAAA,EAAA1E,CAA6BkV,EAAKpV,MAAMmc,mBAA7H,IAAgJlZ,EAAKuD,IAArJ,IAA0J1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,OAAOzF,UAAU,qBAAjM,KAEAH,EAAAC,EAAAC,cAAA,UAAQuF,IAAKtD,EAAKuD,IAAKvF,UAAU,mCAAmCG,QAAS,kBAAMgU,EAAK8G,aAAajZ,KAArG,IAA8GA,EAAKuD,IAAnH,IAAwH1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,QAAQzF,UAAU,qBAAhK,OAEHH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,mDAnGPQ,aA6HZmF,eAXS,SAAApG,GAAK,MAAK,CAC9B2b,cAAe3b,EAAMwV,MAAMmG,cAC3BG,gBAAiB9b,EAAMwV,MAAMsG,gBAC7BG,mBAAoBjc,EAAMwV,MAAMsG,gBAAkB9b,EAAMwV,MAAMsG,gBAAgBxY,OAAS,EACvFkZ,gBAAiBxc,EAAMwV,MAAMgH,gBAC7BjE,gBAAiBvY,EAAMwV,MAAM+C,gBAC7BmE,YAAa1c,EAAMwV,MAAMkH,YACzBE,UAAW5c,EAAMwV,MAAMoH,UACvBD,kBAAmB3c,EAAMwV,MAAMmH,oBAGK,CAAEtJ,sBAAoBkJ,WRyCpC,SAAC3a,GAAD,OAAQ,SAAAc,GAC9BA,EAAS,CACL/B,KlB3I4B,uBkB4I5B4C,QAAS3B,MQ5CyD8Z,aRgD9C,SAACjZ,GAAD,OAAU,SAAAC,GAClCA,EAAS,CACL/B,KlBjJiC,4BkBkJjC4C,QAASd,MQnDuEyZ,eR+sC1D,SAAC/b,GAAD,OAAY,SAAAuC,GACtCA,EAAS,CACL/B,KlB7wCmB,ckB8wCnB4C,QAASpD,MQltCuFic,iBRstCxE,kBAAM,SAAA1Z,GAClCA,EAAS,CACL/B,KlBnxC0B,yB0B2DwF6S,eAAaO,iBAAeF,qBAAvIzN,CAA4JqV,ICtHrKoB,+LAGEjd,KAAKJ,MAAMoH,sDAGAvE,GAGX,GAFAzC,KAAKJ,MAAMsd,eAAeza,GAC1BzC,KAAKJ,MAAMud,uBAAuB1a,GAC7BzC,KAAKJ,MAAMwd,iBAAmB,EAAI,CACnC,IAAIjB,EAAY1B,GAAgBza,KAAKJ,MAAMsc,gBAAgB5Y,OAAO,SAAA0V,GAAW,OAAIA,EAAY5S,MAAQ3D,EAAO2D,OAC5GpG,KAAKJ,MAAMqU,iBAAiBkI,QAE5BrW,QAAQC,IAAI,2FAIPiT,GACThZ,KAAKoc,eAAepD,GACpB,IAAIiD,EAAarD,GAAiB5Y,KAAKJ,MAAMsc,gBAAgBzX,OAAOuU,GAAchZ,KAAKJ,MAAMmc,eAC7F/b,KAAKJ,MAAMuU,cAAe8H,GAC1Bjc,KAAKqd,kBAAmBpB,uCAGhBpJ,GACR7S,KAAKJ,MAAMgU,YAAYf,EAAe,oDAIzBmE,GAAa,IAAAnX,EAAAG,KAC1B,OAAQgX,GACJ,IAAK,oBACLhX,KAAKJ,MAAM0d,gBAAgBtG,GAE3B,IAAIuG,EAAkCvd,KAAKJ,MAAMgN,WAAWtJ,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,mBAA+BvD,OAAOzE,KAAKJ,MAAMsc,gBAAgB5Y,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,oBAC7KhI,KAAKwd,mBAAmBD,EAAiC,UACzD,MAEA,IAAK,kBACLvd,KAAKJ,MAAM0d,gBAAgBtG,GAC3BhX,KAAKyd,cAAc,UACnB,MAEA,IAAK,wBACLzd,KAAKJ,MAAM0d,gBAAgBtG,GAE3B,IAAI0G,EAAkC1d,KAAKJ,MAAMgN,WAAWtJ,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,kBAAiCnI,EAAKD,MAAM+d,oBAAoBjB,SAASja,EAAO2D,OAAM3B,OAAOzE,KAAKJ,MAAMsc,gBAAgB5Y,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,oBACpOhI,KAAKwd,mBAAmBE,EAAiC,UACzD,MAEA,IAAK,sBACL1d,KAAKJ,MAAM0d,gBAAgBtG,GAC3BhX,KAAKyd,cAAc,cACnB,MAEA,QACA,mDAKW5E,EAAgB9X,GAAM,IAAAN,EAAAT,KACxB,WAATe,GACA8X,EAAerO,QAAQ,SAAAwO,GAAW,OAAIvY,EAAK2b,eAAepD,KAE9D,IAAIiD,EAAarD,GAAiBC,EAAgB7Y,KAAKJ,MAAMmc,eAChD,WAAThb,GACAf,KAAKJ,MAAMuU,cAAe8H,GAC1Bjc,KAAKqd,kBAAmBpB,IAEV,aAATlb,GACLf,KAAKqd,kBAAmBpB,yCAKlBlb,GAAK,IAAAiU,EAAAhV,KACfA,KAAKJ,MAAM6d,cAAc1c,GACzBf,KAAKJ,MAAMsc,gBAAgB5Y,OAAO,SAAAb,GAAM,OAAIA,EAAOuF,mBAAqBjH,IAAMyJ,QAAQ,SAAAwO,GAAW,OAAIhE,EAAKkI,eAAelE,KACzHhZ,KAAKwd,mBAAmBxd,KAAKJ,MAAMsc,gBAAgB5Y,OAAO,SAAAb,GAAM,OAAIA,EAAOuF,mBAAqBjH,IAAO,sDAGzF8X,GACd,GAAK7Y,KAAKJ,MAAMwd,iBAAmB,EAAI,CACnC,IAAIjB,EAAY1B,GAAgB5B,GAChC7Y,KAAKJ,MAAMqU,iBAAiBkI,2CAOrB1Z,GACMzC,KAAKJ,MAAMsc,gBAAgBhW,IAAI,SAAA8S,GAAW,OAAIA,EAAY5S,MAC1DsW,SAASja,EAAO2D,MAC7BpG,KAAKJ,MAAMge,aAAanb,oCAGvB,IAAA4S,EAAArV,KACL,OACQU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYG,QAAS,kBAAKqU,EAAKzB,YAAYyB,EAAKzV,MAAMie,iBAApE,IAAmH,WAA7B7d,KAAKJ,MAAMie,cAA6Bnd,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAU,gBAAkBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,aAAazF,UAAU,gBAA3O,oBAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAWb,KAAKJ,MAAMie,cAAgB,eACvCnd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAW,mCAAqCb,KAAKJ,MAAMke,gBAAiB9c,QAAS,kBAAMqU,EAAK0I,iBAAiB1I,EAAKzV,MAAMke,mBAApI,YAA+L,sBAA/B9d,KAAKJ,MAAMke,gBAA0Cpd,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,OAAOzF,UAAU,uBAAyBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,QAAQzF,UAAU,wBAC7TH,EAAAC,EAAAC,cAAA,UAAQC,UAAW,mCAAqCb,KAAKJ,MAAMoe,mBAAoBhd,QAAS,kBAAMqU,EAAK0I,iBAAiB1I,EAAKzV,MAAMoe,sBAAvI,gBAA4M,0BAAlChe,KAAKJ,MAAMoe,mBAAiDtd,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,OAAOzF,UAAU,uBAAyBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,QAAQzF,UAAU,0BAItVH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBAAqBb,KAAKJ,MAAMie,eACvC7d,KAAKJ,MAAMgN,WAAWlJ,OAAS,EAC5B1D,KAAKJ,MAAMgN,WACVtJ,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,mBACxB9B,IAAI,SAAAzD,GAAM,OAAoD,IAAhD4S,EAAKzV,MAAMsc,gBAAgB7R,QAAQ5H,GACjD/B,EAAAC,EAAAC,cAAA,UAAQuF,IAAK1D,EAAO2D,IAAKvF,UAAU,yCAAyCG,QAAS,kBAAMqU,EAAKuI,aAAanb,KAA7G,IAAwHA,EAAOyF,KAA/H,IAAqIxH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,OAAOzF,UAAU,uBAA5K,KAEAH,EAAAC,EAAAC,cAAA,UAAQuF,IAAK1D,EAAO2D,IAAKvF,UAAU,uCAAuCG,QAAS,kBAAMqU,EAAK6H,eAAeza,KAA7G,IAAwHA,EAAOyF,KAA/H,IAAqIxH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,QAAQzF,UAAU,uBAA7K,OACDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,2CAEHb,KAAKJ,MAAMgN,WAAWlJ,OAAS,EAC5B1D,KAAKJ,MAAMgN,WACVtJ,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,kBAAiCqN,EAAKzV,MAAM+d,oBAAoBjB,SAASja,EAAO2D,OACxGF,IAAI,SAAAzD,GAAM,OAAoD,IAAhD4S,EAAKzV,MAAMsc,gBAAgB7R,QAAQ5H,GACjD/B,EAAAC,EAAAC,cAAA,UAAQuF,IAAK1D,EAAO2D,IAAKvF,UAAU,6CAA6CG,QAAS,kBAAMqU,EAAKuI,aAAanb,KAAjH,IAA4HA,EAAOyF,KAAnI,IAAyIxH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,OAAOzF,UAAU,uBAAhL,KAEAH,EAAAC,EAAAC,cAAA,UAAQuF,IAAK1D,EAAO2D,IAAKvF,UAAU,2CAA2CG,QAAS,kBAAMqU,EAAK6H,eAAeza,KAAjH,IAA4HA,EAAOyF,KAAnI,IAAyIxH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,QAAQzF,UAAU,uBAAjL,OACDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,qDApIPQ,aA2JdmF,eAdS,SAAApG,GAAK,MAAK,CAC9B2b,cAAe3b,EAAMwV,MAAMmG,cAC3BqB,iBAAkBhd,EAAMwV,MAAMmG,cAAgB3b,EAAMwV,MAAMmG,cAAcrY,OAAS,EACjFwY,gBAAiB9b,EAAMwV,MAAMsG,gBAC7BG,mBAAoBjc,EAAMwV,MAAMsG,gBAAkB9b,EAAMwV,MAAMsG,gBAAgBxY,OAAS,EACvFua,kBAAmB7d,EAAMwV,MAAMqI,kBAC/BH,gBAAiB1d,EAAMwV,MAAMkI,gBAC7BE,mBAAoB5d,EAAMwV,MAAMoI,mBAChCpR,WAAYxM,EAAM8B,QAAQA,QAC1Byb,oBAAqBvd,EAAMwV,MAAM+H,oBACjCE,cAAezd,EAAMwV,MAAMiI,cAC3Bb,UAAW5c,EAAMwV,MAAMoH,YAGa,CAChChW,eACA4W,aTgBoB,SAACnb,GAAD,OAAY,SAAAK,GACpCA,EAAS,CACL/B,KlBvJ8B,yBkBwJ9B4C,QAAS,CAACgF,SAAUlG,OSlBpBya,eTsBsB,SAACza,GAAD,OAAY,SAAAK,GACtCA,EAAS,CACL/B,KlB7JmC,8BkB8JnC4C,QAAS,CAACgF,SAAUlG,OSxBpBmR,eACAsK,oBTiH2B,SAACzb,GAAD,OAAY,SAAAK,GAC3CA,EAAS,CACL/B,KlBvP0B,qBkBwP1B4C,QAASlB,MSnHT0a,uBTuH8B,SAAC1a,GAAD,OAAY,SAAAK,GAC9CA,EAAS,CACL/B,KlB7P6B,wBkB8P7B4C,QAASlB,MSxHT6a,gBT8kCuB,SAACa,GAAD,OAAY,SAAArb,GACvC,OAAQqb,GACJ,IAAK,oBACLrb,EAAS,CACL/B,KlBjsCqB,oBkBksCrB4C,QAAS,CACLlB,OAAQ,SACRqb,gBAAiB,qBAEzB,MAEA,IAAK,kBACLhb,EAAS,CACL/B,KlB1sCqB,oBkB2sCrB4C,QAAS,CACLlB,OAAQ,SACRqb,gBAAiB,uBAGzB,MAEA,IAAK,wBACLhb,EAAS,CACL/B,KlBptCqB,oBkBqtCrB4C,QAAS,CACLlB,OAAQ,YACRub,mBAAoB,yBAE5B,MAEA,IAAK,sBACLlb,EAAS,CACL/B,KlB7tCqB,oBkB8tCrB4C,QAAS,CACLlB,OAAQ,YACRub,mBAAoB,2BAE5B,MAEA,QACA,USrnCAI,gBTynCuB,SAAClK,GAAD,OAAa,SAAApR,GACxCA,EAAS,CACL/B,KlBxuCyB,oBkByuCzB4C,QAASuQ,MS3nCTD,oBACAwJ,cTqoCqB,SAAC1c,GAAD,OAAU,SAAA+B,GACnCA,EAAS,CACL/B,KlBpvCsB,iBkBqvCtB4C,QAAS5C,MSvoCToT,kBAZO3N,CAaPyW,sBCxLFoB,oLAEO,IAAAxe,EAAAG,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAC0d,GAAA,EAAD,CAAOC,OAAQve,KAAKJ,MAAM4e,YAAaC,OAAQze,KAAKye,OAAQC,UAAU,EAAM5U,KAAM,MAC9EpJ,EAAAC,EAAAC,cAAC0d,GAAA,EAAD,CAAazd,UAAU,gBAAvB,IAAwCb,KAAKJ,MAAM+e,gBAAgBzW,KAAnE,KACAxH,EAAAC,EAAAC,cAAC0d,GAAA,EAAD,KACI5d,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACIrc,KAAMvC,KAAKJ,MAAM+e,gBAAgBpc,KACjCqZ,QAAS,CACDiD,YAAY,EACZC,qBAAqB,MAIrCpe,EAAAC,EAAAC,cAAC0d,GAAA,EAAD,KACI5d,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAgCG,QAAS,kBAAKnB,EAAKD,MAAMwU,mBAAkB,EAAO,CAAClM,KAAM,GAAI3F,KAAK,OAApH,qBAjBOlB,aA8BhBmF,eALS,SAAApG,GAAK,MAAK,CAC9Boe,YAAape,EAAMwV,MAAM4I,YACzBG,gBAAiBve,EAAMwV,MAAM+I,kBAGO,CAAEvK,sBAA3B5N,CAAiD6X,IC1B1DU,uLACUlM,GACR7S,KAAKJ,MAAMgU,YAAYf,EAAe,2CAE/BmM,EAAKnM,EAAeoM,GAC3Bjf,KAAKJ,MAAMsf,kBAAkBF,EAAKnM,EAAeoM,2CAGrCE,EAAYnb,GAGxB,IAAIob,EAAcpf,KAAKJ,MAAMyf,mBAAmBnS,OAAO,SAAC8L,EAAanW,GAKjE,GAJAmW,EAAY9Q,KAAOiX,EACnBnG,EAAYC,YAAcD,EAAYC,aAAe,GACrDD,EAAY/B,MAAQ+B,EAAY/B,OAAS,GACzC+B,EAAY7B,QAAU6B,EAAY7B,SAAW,GAC+D,IAAxGtU,EAAKX,QAAQoB,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQpC,IAA0C,IAA9BvB,EAAOc,SAASoB,YAAoBjB,OAAc,CAC3GsV,EAAYC,YAAY1N,KAAK1I,EAAKuD,KAGlC,IAAI7C,EAAWV,EAAKX,QAAQoB,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQpC,IAAUkC,IAAI,SAAAzD,GAAM,OAAIA,EAAOc,WAC3FyV,EAAY/B,MAAM1L,KAAMhI,EAAS,GAAG0T,OACpC+B,EAAY7B,QAAQ5L,KAAMhI,EAAS,GAAG4T,SAE1C,OAAO6B,GACJ,IAEHsG,EAAa,CACbpX,KAAMiX,EACN5c,KAAM,CACFoY,OAAQyE,EAAYnG,YACpBmC,SAAU,CACN,CACIC,MAAO,QACP9Y,KAAM6c,EAAYnI,MAClBqE,gBAAiB,0BACjBC,YAAa,0BACbC,YAAa,EACb+D,MAAM,EACN9D,qBAAsB,0BACtBC,iBAAkB,0BAClB8D,YAAa,GAEjB,CACInE,MAAO,UACP9Y,KAAM6c,EAAYjI,QAClBmE,gBAAiB,0BACjBC,YAAa,0BACbC,YAAa,EACb+D,MAAM,EACN9D,qBAAsB,0BACtBC,iBAAkB,0BAClB8D,YAAa,MAM7Bxf,KAAKJ,MAAMwU,mBAAkB,EAAMkL,oCAG9B,IAAAzf,EAAAG,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaG,QAAS,kBAAKnB,EAAK+T,YAAY/T,EAAKD,MAAM6f,sBAArE,IAA8H,WAAlCzf,KAAKJ,MAAM6f,mBAAkC/e,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAU,gBAAkBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,aAAazF,UAAU,gBAAtP,qBAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAA6C,WAAlCb,KAAKJ,MAAM6f,oBAAmCzf,KAAKJ,MAAM8f,aAAe,EAAK,kBAAoB,kBAC7Ghf,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBAAqBb,KAAKJ,MAAM6f,oBAExC/e,EAAAC,EAAAC,cAAA,UAAQC,UAAWb,KAAKJ,MAAM+f,eAAeC,MAAQ,cAAe5e,QAAS,kBAAKnB,EAAKggB,WAAW,KAAMhgB,EAAKD,MAAM+f,eAAeC,MAAO/f,EAAKD,MAAM+f,eAAeG,YAAnK,OAAkLpf,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,sBAAsBzF,UAAWb,KAAKJ,MAAM+f,eAAeI,UAAY,mBAAjI,IAAsJrf,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAWb,KAAKJ,MAAM+f,eAAeG,SAAW,mBAAhP,KAAlL,KACApf,EAAAC,EAAAC,cAAA,UAAQC,UAAWb,KAAKJ,MAAM+f,eAAeK,SAAW,cAAehf,QAAS,kBAAKnB,EAAKggB,WAAW,QAAShgB,EAAKD,MAAM+f,eAAeK,SAAUngB,EAAKD,MAAM+f,eAAeM,YAA5K,iBAAqMvf,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,sBAAsBzF,UAAWb,KAAKJ,MAAM+f,eAAeO,UAAY,mBAAjI,IAAsJxf,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAWb,KAAKJ,MAAM+f,eAAeM,SAAW,mBAAhP,KAArM,KACAvf,EAAAC,EAAAC,cAAA,UAAQC,UAAWb,KAAKJ,MAAM+f,eAAeQ,QAAU,cAAenf,QAAS,kBAAKnB,EAAKggB,WAAW,OAAQhgB,EAAKD,MAAM+f,eAAeQ,QAAStgB,EAAKD,MAAM+f,eAAeS,WAAzK,cAA8L1f,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,sBAAsBzF,UAAWb,KAAKJ,MAAM+f,eAAeU,SAAW,mBAAhI,IAAqJ3f,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAWb,KAAKJ,MAAM+f,eAAeS,QAAU,mBAA9O,KAA9L,KACA1f,EAAAC,EAAAC,cAAA,UAAQC,UAAWb,KAAKJ,MAAM+f,eAAeW,UAAY,cAAetf,QAAS,kBAAKnB,EAAKggB,WAAW,SAAUhgB,EAAKD,MAAM+f,eAAeW,UAAWzgB,EAAKD,MAAM+f,eAAeY,aAA/K,eAAuM7f,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,sBAAsBzF,UAAWb,KAAKJ,MAAM+f,eAAea,WAAa,mBAAlI,IAAuJ9f,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAWb,KAAKJ,MAAM+f,eAAeY,UAAY,mBAAlP,KAAvM,KACA7f,EAAAC,EAAAC,cAAA,UAAQC,UAAWb,KAAKJ,MAAM+f,eAAec,QAAU,cAAezf,QAAS,kBAAKnB,EAAKggB,WAAW,OAAQhgB,EAAKD,MAAM+f,eAAec,QAAS5gB,EAAKD,MAAM+f,eAAee,WAAzK,eAA+LhgB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,sBAAsBzF,UAAWb,KAAKJ,MAAM+f,eAAegB,SAAW,mBAAhI,IAAqJjgB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAWb,KAAKJ,MAAM+f,eAAee,QAAU,mBAA9O,KAA/L,KACAhgB,EAAAC,EAAAC,cAAA,UAAQC,UAAWb,KAAKJ,MAAM+f,eAAeiB,SAAW,cAAe5f,QAAS,kBAAKnB,EAAKggB,WAAW,QAAShgB,EAAKD,MAAM+f,eAAeiB,SAAU/gB,EAAKD,MAAM+f,eAAekB,YAA5K,UAA8LngB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,sBAAsBzF,UAAWb,KAAKJ,MAAM+f,eAAemB,UAAY,mBAAjI,IAAsJpgB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAWb,KAAKJ,MAAM+f,eAAekB,SAAW,mBAAhP,KAA9L,KACAngB,EAAAC,EAAAC,cAAA,UAAQC,UAAWb,KAAKJ,MAAM+f,eAAeoB,OAAS,cAAe/f,QAAS,kBAAKnB,EAAKggB,WAAW,MAAOhgB,EAAKD,MAAM+f,eAAeoB,OAAQlhB,EAAKD,MAAM+f,eAAeqB,UAAtK,QAAoLtgB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,sBAAsBzF,UAAWb,KAAKJ,MAAM+f,eAAesB,QAAU,mBAA/H,IAAoJvgB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAWb,KAAKJ,MAAM+f,eAAeqB,OAAS,mBAA5O,KAApL,KACAtgB,EAAAC,EAAAC,cAAA,UAAQC,UAAWb,KAAKJ,MAAM+f,eAAeuB,WAAa,cAAelgB,QAAS,kBAAKnB,EAAKggB,WAAW,UAAWhgB,EAAKD,MAAM+f,eAAeuB,WAAYrhB,EAAKD,MAAM+f,eAAewB,cAAlL,YAAwMzgB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,sBAAsBzF,UAAWb,KAAKJ,MAAM+f,eAAeyB,YAAc,mBAAnI,IAAwJ1gB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAWb,KAAKJ,MAAM+f,eAAewB,WAAa,mBAApP,KAAxM,KACAzgB,EAAAC,EAAAC,cAAA,UAAQC,UAAWb,KAAKJ,MAAM+f,eAAe0B,OAAS,cAAergB,QAAS,kBAAKnB,EAAKggB,WAAW,MAAOhgB,EAAKD,MAAM+f,eAAe0B,OAAQxhB,EAAKD,MAAM+f,eAAe2B,UAAtK,OAAmL5gB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,IAAoCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,sBAAsBzF,UAAWb,KAAKJ,MAAM+f,eAAe4B,QAAU,mBAA/H,IAAoJ7gB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,oBAAoBzF,UAAWb,KAAKJ,MAAM+f,eAAe2B,OAAS,mBAA5O,KAAnL,MAGR5gB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEdb,KAAKJ,MAAM4hB,cAAgBxhB,KAAKJ,MAAM4hB,cAActb,IAAI,SAAA4O,GACrD,OACIpU,EAAAC,EAAAC,cAAA,OAAKuF,IAAK2O,EAAO1O,IAAKvF,UAAWiU,EAAO1M,oBAAsBvI,EAAKD,MAAM6hB,mBAAqB,gCAAkC,4BAA8BzgB,QAAS,kBAAKnB,EAAK6hB,gBAAgB5M,EAAO5M,KAAM4M,EAAO1O,OACjN1F,EAAAC,EAAAC,cAAA,OAAKC,UAAuC,WAA5BiU,EAAO9M,iBAAgC,6BAA+B,iCAElFtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeiU,EAAO5M,KAArC,IAA2CxH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,IAAgCH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,SAASzF,UAAWiU,EAAO1M,oBAAjF,MAC3C1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,iBAAH,IAAgDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASiU,EAAOmE,aAAhF,IAAqGpZ,EAAKD,MAAMmc,cAAcrY,QAC9HhD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,UAAH,IAAyCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAgC,QAAtBiU,EAAO4E,WAAuB5E,EAAO4E,WAAa,IAAM5E,EAAO4E,WAAzF,MAAiI,QAAvB5E,EAAO6E,YAAwB7E,EAAO6E,YAAc,IAAM7E,EAAO6E,YAA3K,MAAmN,QAAtB7E,EAAO8E,WAAuB9E,EAAO8E,WAAa,IAAM9E,EAAO8E,WAA5P,KAAzC,KACAlZ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,UAAH,IAAyCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAgC,IAAvBiU,EAAOmE,YAAoBnE,EAAOmC,MAAQ,OAC5GvW,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,2BAAyCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAgC,IAAvBiU,EAAOmE,YAAoBnE,EAAOkF,IAAM,SAC/GtZ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,YAAH,IAA2CH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAgC,IAAvBiU,EAAOmE,YAAoBnE,EAAOqC,QAAU,OAChHzW,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,2BAAyCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAgC,IAAvBiU,EAAOmE,YAAoBnE,EAAOoF,IAAM,cAKvH,OAGhBxZ,EAAAC,EAAAC,cAAC+gB,GAAD,CAAkBpD,OAAQve,KAAKJ,MAAM4e,sBAzG9Bnd,aA8HRmF,eAfS,SAAApG,GAAK,MAAK,CAC9B2b,cAAe3b,EAAMwV,MAAMmG,cAC3BsD,mBAAoB/a,IAAEC,OAAOnE,EAAMwV,MAAMmG,cAAc,OACvDG,gBAAiB9b,EAAMwV,MAAMsG,gBAC7BuD,mBAAoBrf,EAAMwV,MAAM6J,mBAChC+B,cAAephB,EAAMwV,MAAMgM,sBAC3BlC,aAActf,EAAMwV,MAAMgM,sBAAwBxhB,EAAMwV,MAAMgM,sBAAsBle,OAAS,EAC7Fic,eAAgBvf,EAAMwV,MAAM+J,eAC5BkC,iBAAkBzhB,EAAMwV,MAAMkM,UAAUD,iBACxCE,iBAAkB3hB,EAAMwV,MAAMkM,UAAUC,iBACxCC,gBAAiB5hB,EAAMwV,MAAMkM,UAAUE,gBACvCP,mBAAoBrhB,EAAMwV,MAAMkM,UAAUL,mBAC1CjD,YAAape,EAAMwV,MAAM4I,cAGW,CAAE5K,eAAasL,kBXyLtB,SAACF,EAAKnM,EAAeoM,GAArB,OAAkC,SAAAnc,GAC/D,OAAOkc,GACH,IAAK,KAEDlc,EADiB,mBAAlB+P,EACU,CACL9R,KlB/QY,ekBgRZ4C,QAAS,CACLoc,UAAW,SACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,eACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAIO,iBAAlBxO,GAAiD,WAAboM,EAChC,CACLle,KlBjTY,ekBkTZ4C,QAAS,CACLoc,UAAW,SACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,eACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAMP,CACLtgB,KlBrVW,ckBsVX4C,QAAS,CACLoc,UAAW,WACXD,SAAU,SACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,eACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,oBAIpB,MAEA,IAAK,QAEDve,EADiB,mBAAlB+P,EACU,CACL9R,KlBvXe,kBkBwXf4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,SACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,eACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAIO,iBAAlBxO,GAAiD,WAAboM,EAChC,CACLle,KlBzZe,kBkB0Zf4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,SACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,eACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAMP,CACLtgB,KlB7bc,iBkB8bd4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,SACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,eACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,oBAIpB,MAEA,IAAK,OAEDve,EADiB,mBAAlB+P,EACU,CACL9R,KlB/dc,iBkBged4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,SACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,eACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAIO,iBAAlBxO,GAAiD,WAAboM,EAChC,CACLle,KlBjgBc,iBkBkgBd4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,SACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,eACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAMP,CACLtgB,KlBriBa,gBkBsiBb4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,SACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,eACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,oBAIpB,MAGA,IAAK,SAEDve,EADiB,mBAAlB+P,EACU,CACL9R,KlBxkBgB,mBkBykBhB4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,SACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,eACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAIO,iBAAlBxO,GAAiD,WAAboM,EAChC,CACLle,KlB1mBgB,mBkB2mBhB4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,SACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,eACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAMP,CACLtgB,KlB9oBe,kBkB+oBf4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,SACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,eACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,oBAIpB,MAIA,IAAK,OAEDve,EADiB,mBAAlB+P,EACU,CACL9R,KlBlrBc,iBkBmrBd4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,SACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,eACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAIO,iBAAlBxO,GAAiD,WAAboM,EAChC,CACLle,KlBptBc,iBkBqtBd4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,SACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,eACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAMP,CACLtgB,KlBxvBa,gBkByvBb4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,SACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,eACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,oBAIpB,MAEA,IAAK,QAEDve,EADiB,mBAAlB+P,EACU,CACL9R,KlB1xBe,kBkB2xBf4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,SACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,eACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAIO,iBAAlBxO,GAAiD,WAAboM,EAChC,CACLle,KlB5zBe,kBkB6zBf4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,SACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,eACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,mBAMP,CACLtgB,KlBh2Bc,iBkBi2Bd4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,SACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,eACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,oBAIpB,MAEA,IAAK,MAEDve,EADiB,mBAAlB+P,EACU,CACL9R,KlBl4Ba,gBkBm4Bb4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,SACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,eACRG,WAAY,iBACZG,OAAQ,mBAIO,iBAAlBxO,GAAiD,WAAboM,EAChC,CACLle,KlBp6Ba,gBkBq6Bb4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,SACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,eACRG,WAAY,iBACZG,OAAQ,mBAMP,CACLtgB,KlBx8BY,ekBy8BZ4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,SACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,eACRG,WAAY,iBACZG,OAAQ,oBAIpB,MAGA,IAAK,UAEDve,EADiB,mBAAlB+P,EACU,CACL9R,KlB3+BiB,oBkB4+BjB4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,SACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,eACZG,OAAQ,mBAIO,iBAAlBxO,GAAiD,WAAboM,EAChC,CACLle,KlB7gCiB,oBkB8gCjB4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,SACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,eACZG,OAAQ,mBAMP,CACLtgB,KlBjjCgB,mBkBkjChB4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,SACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,eACZG,OAAQ,oBAIpB,MAEA,IAAK,MAEDve,EADiB,mBAAlB+P,EACU,CACL9R,KlBnlCa,gBkBolCb4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,SACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,iBAIO,iBAAlBxO,GAAiD,WAAboM,EAChC,CACLle,KlBrnCa,gBkBsnCb4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,SACTD,OAAQ,WACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,iBAMP,CACLtgB,KlBzpCY,ekB0pCZ4C,QAAS,CACLoc,UAAW,WACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,SACR1B,MAAO,iBACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,kBAIpB,MAEA,QACA,UW1nCkEjN,sBAA3D5N,CAAkFuY,ICjI3FkD,2LAEcC,EAAS3hB,GACrB,OAAQ2hB,GACJ,IAAK,UACU,aAAX3hB,EACAP,KAAKJ,MAAMuiB,0BAA0B,CAACC,QAAS,aAAcC,QAASriB,KAAKJ,MAAMyiB,QAASC,OAAQtiB,KAAKJ,MAAM0iB,SAG7GtiB,KAAKJ,MAAMuiB,0BAA0B,CAACC,QAAS,WAAYC,QAASriB,KAAKJ,MAAMyiB,QAASC,OAAQtiB,KAAKJ,MAAM0iB,SAG/G,MAEA,IAAK,UACU,aAAX/hB,EACAP,KAAKJ,MAAMuiB,0BAA0B,CAACE,QAAS,aAAcD,QAASpiB,KAAKJ,MAAMwiB,QAASE,OAAQtiB,KAAKJ,MAAM0iB,SAI7GtiB,KAAKJ,MAAMuiB,0BAA0B,CAACE,QAAS,WAAYD,QAASpiB,KAAKJ,MAAMwiB,QAASE,OAAQtiB,KAAKJ,MAAM0iB,SAG/G,MAEA,IAAK,SACU,aAAX/hB,EACAP,KAAKJ,MAAMuiB,0BAA0B,CAACG,OAAQ,aAAcD,QAASriB,KAAKJ,MAAMyiB,QAASD,QAASpiB,KAAKJ,MAAMwiB,UAI7GpiB,KAAKJ,MAAMuiB,0BAA0B,CAACG,OAAQ,WAAYD,QAASriB,KAAKJ,MAAMyiB,QAASD,QAASpiB,KAAKJ,MAAMwiB,UAG/G,MAEA,QACA,4CAKIvP,GACR7S,KAAKJ,MAAMgU,YAAYf,EAAe,8CAE5BhL,GAAO,IAAA0a,EACXnR,EAASvJ,EAAMuJ,OACfvI,EAAQuI,EAAOvI,MACfX,EAAOkJ,EAAOlJ,KACpB,OAAQA,GACJ,IAAK,WACLlI,KAAKJ,MAAM4iB,4BAAXD,EAAA,GAAAziB,OAAAwR,GAAA,EAAAxR,CAAAyiB,EAAwCra,EAAOW,GAA/C/I,OAAAwR,GAAA,EAAAxR,CAAAyiB,EAAA,cAAmEviB,KAAKJ,MAAM6iB,aAA9EF,IACA,MAEA,IAAK,cACLviB,KAAKJ,MAAM4iB,2BAAX1iB,OAAAwR,GAAA,EAAAxR,CAAA,CAAuC4iB,SAAU1iB,KAAKJ,MAAM8iB,UAAWxa,EAAOW,IAC9E,MAEA,QACA,yCAGC,IAAAhJ,EAAAG,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaG,QAAS,kBAAKnB,EAAK+T,YAAY/T,EAAKD,MAAM6f,sBAArE,IAA8H,WAAlCzf,KAAKJ,MAAM6f,mBAAkC/e,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAU,gBAAkBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,aAAazF,UAAU,gBAAtP,aAGZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBAAqBb,KAAKJ,MAAM6f,oBAC5C/e,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcG,QAAS,kBAAKnB,EAAK8iB,gBAAgB,UAAY9iB,EAAKD,MAAMwiB,WAAmC,aAAvBpiB,KAAKJ,MAAMwiB,QAAyB1hB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAU,aAAeH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAMsc,KAAU/hB,UAAU,aAA/O,qBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcG,QAAS,kBAAKnB,EAAK8iB,gBAAgB,UAAY9iB,EAAKD,MAAMyiB,WAAmC,aAAvBriB,KAAKJ,MAAMyiB,QAAyB3hB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAU,aAAgBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAMsc,KAAU/hB,UAAU,aAAhP,qBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcG,QAAS,kBAAKnB,EAAK8iB,gBAAgB,SAAW9iB,EAAKD,MAAM0iB,UAAiC,aAAtBtiB,KAAKJ,MAAM0iB,OAAwB5hB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,eAAezF,UAAU,aAAgBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAMsc,KAAU/hB,UAAU,aAA7O,eAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,cACIH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,SACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBqH,KAAK,WAAWU,SAAU,SAACf,GAAD,OAAWhI,EAAK0c,cAAc1U,IAAQgB,MAAQ7I,KAAKJ,MAAM8iB,UACjHhiB,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,KAAd,eACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,KAAd,gBAEJnI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBqH,KAAK,cAAcU,SAAU,SAACf,GAAD,OAAWhI,EAAK0c,cAAc1U,IAAQgB,MAAQ7I,KAAKJ,MAAM6iB,aACpH/hB,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,OAAd,UACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,SACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,SACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,SACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,SACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,SACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,SACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,SACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,SACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,MAAd,SACAnI,EAAAC,EAAAC,cAAA,UAAQiI,MAAM,KAAd,SAhBJ,6BApFVxH,aA+HPmF,eAbS,SAAApG,GAAK,MAAK,CAC9BohB,cAAephB,EAAMwV,MAAM4L,cAC3BxJ,YAAa5X,EAAMwV,MAAMoC,YACzB+D,cAAe3b,EAAMwV,MAAMmG,cAC3BG,gBAAiB9b,EAAMwV,MAAMsG,gBAC7BuD,mBAAoBrf,EAAMwV,MAAM6J,mBAChC2C,QAAShiB,EAAMwV,MAAMiN,cAAcT,QACnCC,QAASjiB,EAAMwV,MAAMiN,cAAcR,QACnCC,OAAQliB,EAAMwV,MAAMiN,cAAcP,OAClCI,SAAUtiB,EAAMwV,MAAMkN,YAAYJ,SAClCD,YAAariB,EAAMwV,MAAMkN,YAAYL,cAGD,CAAE7O,eAAauO,0BZkuCd,SAACrN,GAAD,OAAY,SAAAhS,GACjD,IAAI4f,EACAK,EAEmB,eAAnBjO,EAAOsN,QACgB,eAAnBtN,EAAOuN,QACe,eAAlBvN,EAAOwN,QACPI,EAAW,OACXK,EAAa,SAGbL,EAAW,OACXK,EAAa,UAIK,eAAlBjO,EAAOwN,QACPI,EAAW,OACXK,EAAa,YAGbL,EAAW,MACXK,EAAa,WAKE,eAAnBjO,EAAOuN,QACe,eAAlBvN,EAAOwN,QACPI,EAAW,OACXK,EAAa,YAGbL,EAAW,MACXK,EAAa,WAIK,eAAlBjO,EAAOwN,QACPI,EAAW,MACXK,EAAa,WAGbL,EAAW,OACXK,EAAa,QAKzBjgB,EAAS,CACL/B,KlBt0CqC,gCkBu0CrC4C,QAAS,CACL+e,SAAUA,EACVK,WAAYA,EACZF,cAAe/N,OYxxCuD0N,2BZ6xCxC,SAAC1N,GAAD,OAAY,SAAAhS,GAClDgD,QAAQC,IAAI,mDAAoD+O,GAChEhS,EAAS,CACL/B,KlBj1CsC,iCkBk1CtC4C,QAASmR,OYjyCFtO,CAAkGyb,IC9H3Ge,uLAEUnQ,GACR7S,KAAKJ,MAAMgU,YAAYf,EAAe,0CAGlC,IAAAhT,EAAAG,KAEJ,OACQU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaG,QAAS,kBAAKnB,EAAK+T,YAAY/T,EAAKD,MAAMqjB,gBAArE,IAAkH,WAA5BjjB,KAAKJ,MAAMqjB,aAA4BviB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,cAAczF,UAAU,gBAAkBH,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAiBC,KAAK,aAAazF,UAAU,gBAA1O,gBAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,UACXb,KAAKJ,MAAMod,WAAyC,WAA5Bhd,KAAKJ,MAAMqjB,aACpCviB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACIrc,KAAMvC,KAAKJ,MAAMsjB,iBACjBC,OAA+C,GAArCnjB,KAAKJ,MAAMod,UAAUrC,OAAOjX,OACtC7C,UAAab,KAAKJ,MAAMqjB,aACxBrH,QAAS,CACDiD,YAAY,EACZC,qBAAqB,EACrBnD,aAAc,QAGrB,eA9Bbta,aAqDTmF,eARS,SAAApG,GAAK,MAAK,CAC9BohB,cAAephB,EAAMwV,MAAM4L,cAC3BxE,UAAW5c,EAAMwV,MAAMoH,UACvBkG,iBAAkB9iB,EAAMwV,MAAMsN,iBAC9BD,aAAc7iB,EAAMwV,MAAMqN,aAC1BG,gBAAiBhjB,EAAMwV,MAAMwN,kBAGO,CAAExP,gBAA3BpN,CAA2Cwc,ICpDpDK,oLAGF,OACA3iB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,kBAEAH,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAE0iB,GAAF,OAGJ5iB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAE2iB,GAAF,OAGJ7iB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAE4iB,GAAF,OAGJ9iB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAE6iB,GAAF,OAGJ/iB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAE8iB,GAAF,OAGJhjB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAE+iB,GAAF,gBA9BMtiB,aA4CPmF,eALS,SAAApG,GAAK,MAAK,CAC9BqG,MAAOrG,EAAMqG,MAAMA,QAIRD,CAA0B6c,IC/CnCO,eAEF,SAAAA,EAAYhkB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4jB,IACf/jB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8jB,GAAAzjB,KAAAH,KAAMJ,KACD2H,aAAe1H,EAAK0H,aAAaC,KAAlB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KACpBA,EAAK6H,aAAe7H,EAAK6H,aAAaF,KAAlB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KACpBA,EAAKqR,aAAerR,EAAKqR,aAAa1J,KAAlB1H,OAAA2H,EAAA,EAAA3H,QAAA2H,EAAA,EAAA3H,CAAAD,KAJLA,4EAMNgI,GACTA,EAAMC,sDAEGD,GACT,IAAMuJ,EAASvJ,EAAMuJ,OACfvI,EAAQuI,EAAOvI,MACfX,EAAOkJ,EAAOlJ,KAChB2b,EAAU/jB,OAAAsJ,GAAA,EAAAtJ,CAAA,GAAOE,KAAKJ,MAAMkkB,KAAlBhkB,OAAAwR,GAAA,EAAAxR,CAAA,GAAyBoI,EAAOW,IAC9C7I,KAAKJ,MAAMmkB,eAAeF,wCAKjBhc,GAKT,GAJAA,EAAMC,iBAIgB,SAAlB9H,KAAKJ,MAAMokB,GAAe,CAC1Ble,QAAQC,IAAI,0BACZ,IAAI+d,EAAO,CACPG,SAAUjkB,KAAKJ,MAAMkkB,KAAKG,SAC1BC,SAAUlkB,KAAKJ,MAAMkkB,KAAKI,UAE9BlkB,KAAKJ,MAAMukB,iBAAiB,QAASL,OAEpC,CACD,IAAIM,EAAU,CACVH,SAAUjkB,KAAKJ,MAAMkkB,KAAKG,SAC1BC,SAAUlkB,KAAKJ,MAAMkkB,KAAKI,SAC1BxS,MAAO1R,KAAKJ,MAAMkkB,KAAKpS,MACvB2S,UAAW,QAGfrkB,KAAKJ,MAAM0kB,cAAcF,qCAOxB,IAAA3jB,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAM4H,SAAUxI,KAAK0H,cACjBhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACLmH,KAAK,WACLW,MAAQ7I,KAAKJ,MAAMkkB,KAAKG,SACxBrb,SAAU,SAACf,GAAD,OAAWpH,EAAK8G,aAAaM,OAI/CnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACLmH,KAAK,WACLW,MAAQ7I,KAAKJ,MAAMkkB,KAAKI,SACxBtb,SAAU,SAACf,GAAD,OAAWpH,EAAK8G,aAAaM,OAI5B,SAAlB7H,KAAKJ,MAAM2kB,GACR7jB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SACIG,KAAK,OACLmH,KAAK,QACLW,MAAQ7I,KAAKJ,MAAMkkB,KAAKpS,MACxB9I,SAAU,SAACf,GAAD,OAAWpH,EAAK8G,aAAaM,OAG/C,KACJnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACQ,SAAlBb,KAAKJ,MAAMokB,GACRtjB,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAAS8H,MAAM,SAAShI,UAAU,kBAA/C,aAEAH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAAS8H,MAAM,SAAShI,UAAU,kBAA/C,aAEJH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAAS8H,MAAM,SAAShI,UAAU,iBAAiBG,QAAS,SAAC6G,GAAD,OAAWpH,EAAKyQ,aAAarJ,KAAtG,uBA3FJxG,aAiHTmF,eANS,SAAApG,GAAK,MAAK,CAC9B0jB,KAAM1jB,EAAMokB,aAAaV,KACzBE,GAAI5jB,EAAMokB,aAAajR,KAAK,GAC5BgR,GAAInkB,EAAMokB,aAAajR,KAAK,KAGQ,CAAEwQ,eC/GZ,SAACxhB,GAAD,OAAU,SAAAO,GACpCA,EAAS,CACL/B,KlC8EwB,mBkC7ExB4C,QAASpB,MD4GyC+hB,cCxG7B,SAAEF,GAAF,OAAe,SAAAthB,GACxClB,EAAgBwiB,GAASrhB,KAAK,SAAAC,GAC1B,GAAkB,MAAfA,EAAIzC,OACH,MAAM,IAAI0C,MAAMD,EAAIE,YAGpBJ,EAAS,CACL/B,KlCmEY,ekClEZ4C,QAASX,EAAIT,WDgG4C4hB,iBCnFzC,SAACM,EAAQX,GAAT,OAAkB,SAAAhhB,GAC9CgD,QAAQC,IAAI,oDAAqD+d,GAClD,UAAXW,GACA7iB,EAAqB,QAASkiB,GAAM/gB,KAAK,SAAAC,GACrC,IAAKA,EAAIT,KAAKmiB,OAMV,OALA5e,QAAQC,IAAI,qCAAsC/C,EAAIT,MAK9CS,EAAIT,KAAK8hB,WACb,IAAK,cjCnCA,SAACjkB,GACtB,IACI,IAAM8E,EAAkBG,KAAKsf,UAAUvkB,GACvC+E,eAAeyf,QAAQ,QAAS1f,GAClC,MAAOK,GACLO,QAAQC,IAAIR,IiC+BAsf,CAAU,CACNC,YAAY,EACZ9b,YAAY,EACZC,oBAAoB,EACpB3B,YAAY,EACZ3B,YAAY,EACZ8Q,WAAW,EACXzG,YAAY,EACZiB,cAAc,EACdqB,YAAY,EACZC,cAAc,EACdG,eAAe,EACfC,iBAAiB,IAGrB,MAEA,QACA,aDqDLnM,CAA+Eod,IE/GxFmB,wLAGO/iB,EAAI6Q,GAEb,IAAIC,EAAWC,SAAS/Q,EAAI,IAAM,EACb,aAAlB6Q,GACC7S,KAAKJ,MAAMoT,gBAAgBF,oCAI1B,IAAAjT,EAAAG,KACL,OACAU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,QAAMoB,GAAG,IAAInB,UAAW,YAAcb,KAAKJ,MAAMmS,KAAO/Q,QAAS,kBAAMnB,EAAKoT,aAAa,IAAKpT,EAAKD,MAAMmS,QAAzG,aACArR,EAAAC,EAAAC,cAAA,QAAMoB,GAAG,IAAInB,UAAW,YAAcb,KAAKJ,MAAMoS,KAAOhR,QAAS,kBAAMnB,EAAKoT,aAAa,IAAKpT,EAAKD,MAAMoS,QAAzG,cAEJtR,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gBACZH,EAAAC,EAAAC,cAACokB,GAAD,gBAtBI3jB,aAqCLmF,eANS,SAAApG,GAAK,MAAK,CAC9B2R,KAAM3R,EAAMokB,aAAajR,KAAK,GAC9BvB,KAAM5R,EAAMokB,aAAajR,KAAK,KAIM,CAAEP,gBDhBX,SAAChR,GAAD,OAAQ,SAAAc,GACnCA,EAAS,CACL/B,KlC2DiB,YkC1DjB4C,QAAS3B,OCaFwE,CAAgDue,gCCxBzD5d,GAASC,EAAQ,IAEjB6d,GAAe,CACjBxe,MAAO,GACPR,cAAe,GACfM,UAAW,GACXhD,SAAU,CACN0T,MAAO,EACPE,QAAS,EACTtS,YAAa,EACbG,aAAc,EACdL,WAAW,EACXnB,KAAM,OAEVoK,WAAY,CACRO,IAAK,SACLqC,KAAM,SACN3C,OAAQ,SACR1K,UAAW,SACXC,eAAgB,UAEpBqG,SAAU,GACVN,MAAO,GACPO,mBAAoB,GACpByF,cAAe,GACfvF,qBAAsB,GACtBgF,kBAAmB,GACnB7H,WAAY,UACZkI,4BAA6B,OAC7BD,0BAA2B,OAC3BjF,UAAW,QACXgE,YAAa,CACTC,KAAM,iBACNE,MAAO,mBAEXtJ,OAAQ,GACRG,SAAU,ICxDRkgB,GAAe,CACjB3U,QAAS,SACTzJ,oBAAqB,UACrBC,gBAAiB,SACjBd,WAAY,WACZY,UAAW,OACXD,MARWS,EAAQ,GAQZD,GAASmB,OAAO,eCNrB2c,GAAe,CACjB/iB,QAAS,GACTO,OAAQ,CACJyF,KAAM,GACNuJ,SAAU,GACVrJ,kBAAmB,UACnBJ,iBAAkB,SAClB0J,MAAO,GACPvJ,YAAa,MAGjBoL,KAAM,CAAC,WAAW,WAAW,YAC7BC,OAAQ,CAAC,UAAW,SAAU,UAE9B7B,SAAU,OC6BRxK,GAASC,EAAQ,IAEjB6d,GAAe,CACjBrX,WAAY,SACZwE,QAAS,yEACTuG,gBAAiB,GACjBuM,iBAAkB,GAClBvP,aAAc,GACdlB,eAAgB,GAChBsH,cAAe,GACfa,gBAAiB,GACjBV,gBAAiB,GACjB+B,kBAAmB,GACnBjG,YAAa,UACb8E,YAAa,SACbe,cAAe,SACf4B,mBAAoB,SACpBwD,aAAc,SACdzB,cAAe,GACf7D,oBAAqB,GACrBgC,eACI,CACII,UAAW,SACXD,SAAU,WACVI,UAAW,WACXD,SAAU,WACVa,UAAW,WACXD,SAAU,WACVI,QAAS,WACTD,OAAQ,WACRX,SAAU,WACVD,QAAS,WACTI,WAAY,WACZD,UAAW,WACXI,SAAU,WACVD,QAAS,WACTU,YAAa,WACbD,WAAY,WACZI,QAAS,WACTD,OAAQ,WACR1B,MAAO,eACPI,SAAU,iBACVG,QAAS,iBACTG,UAAW,iBACXG,QAAS,iBACTG,SAAU,iBACVG,OAAQ,iBACRG,WAAY,iBACZG,OAAQ,kBAEhB+B,gBAAiB,CACbpD,SAAU,uBACVG,QAAS,sBACTS,SAAU,uBACVG,OAAQ,qBACRG,WAAY,yBACZG,OAAQ,sBAEZrE,UAAW,CACPrC,OAAQ,GACRS,SAAU,CACN,CACIC,MAAO,QACP9Y,KAAM,GACN+Y,gBAAiB,0BACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,0BACtBC,iBAAkB,2BAEtB,CACIL,MAAO,UACP9Y,KAAM,GACN+Y,gBAAiB,0BACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,0BACtBC,iBAAkB,0BAClBC,aAAc,IAElB,CACIN,MAAO,QACP9Y,KAAM,GACN+Y,gBAAiB,0BACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,0BACtBC,iBAAkB,0BAClBC,aAAc,IAElB,CACIN,MAAO,WACP9Y,KAAM,GACN+Y,gBAAiB,uBACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,uBAClBC,aAAc,IAElB,CACIN,MAAO,aACP9Y,KAAM,GACN+Y,gBAAiB,UACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,UACtBC,iBAAkB,UAClBC,aAAc,IAElB,CACIN,MAAO,WACP9Y,KAAM,GACN+Y,gBAAiB,UACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,UACtBC,iBAAkB,UAClBC,aAAc,IAElB,CACIN,MAAO,MACP9Y,KAAM,GACN+Y,gBAAiB,wBACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,wBACtBC,iBAAkB,wBAClBC,aAAc,IAElB,CACIN,MAAO,MACP9Y,KAAM,GACN+Y,gBAAiB,0BACjBC,YAAa,sBACbC,YAAa,EACbC,qBAAsB,0BACtBC,iBAAkB,0BAClBE,QAAS,CAACD,aAAc,QAIpCmC,gBAAiB,oBACjBE,mBAAoB,wBACpB8D,UAAW,CACPD,iBAAkB,qBAClBG,gBAAiB,oBACjBD,iBAAkB,qBAClBN,mBAAoB,OAExBjD,aAAa,EACbG,gBAAiB,GACjB5B,kBAAmB,kBACnB8F,cAAe,CACPT,QAAS,WACTC,QAAS,WACTC,OAAQ,YAEhBQ,YAAa,CACLJ,SAAU,IACVD,YAAa,MCxMnBwC,GAAe,CACjBnB,KACI,CACAG,SAAU,GACVC,SAAU,GACVxS,MAAO,IAEX6B,KAAM,CAAC,WAAW,aCNP4R,gBAAgB,CAC3B1e,MLsDW,WAAuC,IAA9BrG,EAA8BglB,UAAA1hB,OAAA,QAAA2hB,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAAc1W,EAAQ6W,UAAA1hB,OAAA,EAAA0hB,UAAA,QAAAC,EAClD,OAAO9W,EAAOxN,MACV,IpChEmB,coCiEnB,OAAOjB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIqG,MAAO8H,EAAO5K,QACdsC,cAAesI,EAAO5K,QAAQL,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,KAAOe,KAASmB,OAAO,gBACzE/B,UAAWjC,IAAEC,OAAOgK,EAAO5K,QAAQL,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,IAAMe,KAASmB,OAAO,gBAAe,OAAOgN,YAGvG,IpCrEmB,coCsEnB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIwN,WAAYqX,GAAarX,WACzBnH,MAAOrG,EAAMqG,MAAMnD,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,MAAQmI,EAAO5K,QAAQyC,MAC9DH,cAAe7F,EAAM6F,cAAc3C,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,MAAQmI,EAAO5K,QAAQyC,MAC9EG,UAAWjC,IAAEC,OAAOnE,EAAMmG,UAAUjD,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,MAAQmI,EAAO5K,QAAQyC,MAAK,OAAOkP,UAC3FvO,WAAY,SACZgD,UAAWkb,GAAalb,UACxBgE,YAAakX,GAAalX,cAI9B,IpCpFgB,WoCqFhB,OAAOjO,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIqG,MAAOnC,IAAEC,OAAFzE,OAAA0E,EAAA,EAAA1E,CAAaM,EAAMqG,OAAnBhC,OAAA,CAA0B8J,EAAO5K,UAAU,aAClDsC,cAAesI,EAAO5K,QAAQyC,KAAOe,KAASmB,OAAO,cAAgBhE,IAAEC,OAAF,CAAUgK,EAAO5K,SAAjBc,OAAA3E,OAAA0E,EAAA,EAAA1E,CAA6BM,EAAM6F,gBAAgB,aAAe7F,EAAM6F,cAC7IM,UAAWgI,EAAO5K,QAAQyC,IAAMe,KAASmB,OAAO,cAAgBhE,IAAEC,OAAF,CAAUgK,EAAO5K,SAAjBc,OAAA3E,OAAA0E,EAAA,EAAA1E,CAA6BM,EAAMmG,YAAY,aAAa+O,UAAYlV,EAAMmG,YAGlJ,IpC3FgB,WoC4FhB,OAAOzG,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI2J,UAAWkb,GAAalb,UACxBN,SAAU8E,EAAO5K,QAAQd,KAAKuD,IAC9B+C,MAAOoF,EAAO5K,QAAQd,KAEtBkE,YAAgD,IAApCwH,EAAO5K,QAAQd,KAAK+M,YAAuB,SAAW,UAClElG,mBAAwD,SAApCtJ,EAAM4O,0BAAuCT,EAAO5K,QAAQd,KAAKX,QAAQoB,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,mBAA+D,IAA9BvF,EAAOc,SAASoB,YAAuBsgB,GAAavb,mBAC1ME,qBAAsBqb,GAAarb,qBAEnCgF,kBAAmBL,EAAO5K,QAAQd,KAAKX,QAAQoB,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,mBACvE4F,WAAY,CACRO,IAAK,UACLqC,KAAM,UACN3C,OAAQ,UACR1K,UAAWoL,EAAO5K,QAAQR,UAC1BC,eAAgBmL,EAAO5K,QAAQP,kBAIvC,IpC1GsB,iBoC2GtB,OAAOtD,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI+I,MAAOoF,EAAO5K,QAAQd,OAG1B,IpC7Ga,QoC8Gb,OAAO/C,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI+I,MAAOoF,EAAO5K,QACd+F,mBAAoBub,GAAavb,mBACjCE,qBAAsBqb,GAAarb,qBACnCgF,kBAAmBqW,GAAarW,kBAChChK,OAA4B,SAApBxE,EAAM2J,UAAuBzF,IAAEC,OAAOgK,EAAO5K,QAAQzB,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAAsD,IAAhClC,EAAOc,SAASsB,cAAmB,SAACC,GAAD,OAASA,EAAIvB,SAASsB,cAAeP,IAAEC,OAAOgK,EAAO5K,QAAQzB,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAAuD,IAAjClC,EAAOc,SAASyB,eAAoB,SAACF,GAAD,OAASA,EAAIvB,SAASyB,eACrVD,SAA8B,SAApB3E,EAAM2J,UAAuBzF,IAAEC,OAAOgK,EAAO5K,QAAQzB,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAAsD,IAAhClC,EAAOc,SAASsB,cAAoB,QAAUP,IAAEC,OAAOgK,EAAO5K,QAAQzB,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAAuD,IAAjClC,EAAOc,SAASyB,eAAqB,UAG5S,IpClH+B,0BoCmH/B,OAAOlF,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIsJ,mBAAwD,SAApCtJ,EAAM4O,0BAAuCT,EAAO5K,QAAQzB,QAAQoB,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,mBAA+D,IAA9BvF,EAAOc,SAASoB,YAAuBsgB,GAAavb,mBACrMP,MAAOoF,EAAO5K,UAGlB,IpCxHmC,8BoCyHnC,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GAMAM,EANP,CAOI+I,MAAOoF,EAAO5K,QAAQI,SACtB6F,qBAA4D,SAAtCxJ,EAAM6O,4BAAyC3K,IAAEC,OAAFzE,OAAA0E,EAAA,EAAA1E,CAAaM,EAAMwJ,sBAAnBnF,OAAA,CAAyCrE,EAAM+O,cAAc7L,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQlB,SAAQ,KAAI,QAAUwiB,GAAarb,qBACpNgF,kBAAmBxO,EAAMwO,kBAAkBtL,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQlB,WAG9F,IpCxI6B,wBoCyI7B,OAAO3C,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAGIsJ,mBAAwD,SAApCtJ,EAAM4O,0BAAwC5O,EAAM+I,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAAmD,WAA5BlC,EAAOuF,kBAAiCvF,EAAO2D,MAAQmI,EAAO5K,QAAQlB,SAAWwiB,GAAavb,mBAC5OP,MAAOoF,EAAO5K,QAAQd,OAG1B,IpClJgC,2BoCmJhC,OAAO/C,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIsJ,mBAAoBtJ,EAAM+I,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,MAAgC,WAA5BA,EAAOuF,mBAA+D,IAA9BvF,EAAOc,SAASoB,YACjHqK,0BAA2B,SAG/B,IpCxJgC,2BoCyJhC,OAAOlP,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIsJ,mBAAoBub,GAAavb,mBACjCsF,0BAA2B,SAG/B,IpC1JwB,mBoC2JxB,OAAOlP,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI+O,cAAeZ,EAAO5K,QAAQ0L,IAC9BzF,qBAAsB2E,EAAO5K,QAAQ2L,IACrCL,4BAA6B,SAGjC,IpCjKwB,mBoCkKxB,OAAOnP,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIwJ,qBAAsBqb,GAAarb,qBACnCqF,4BAA6B,SAGjC,IpC5KsB,iBoC6KtB,OAAOnP,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI+I,MAAOoF,EAAO5K,QAAQzB,QACtB0H,qBAAsBxJ,EAAMwJ,qBAAqBtG,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQlB,OAAO2D,MACvGwI,kBAAiB,CAAGL,EAAO5K,QAAQlB,QAAlBgC,OAAA3E,OAAA0E,EAAA,EAAA1E,CAA6BM,EAAMwO,sBAGxD,IpC3LsB,iBoCiMtB,IpChMwB,mBoCiMxB,OAAO9O,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI2G,YAA+B,IAAnBwH,EAAO5K,QAAmB,SAAW,YAGrD,IpC1KyB,oBoC2KzB,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI2J,UAAWwE,EAAO5K,QAAQH,KAC1BuK,YAAaQ,EAAO5K,QAAQ0K,QAC5BT,WAAY,CAACO,IAAK,SAAUqC,KAAM,UAAW3C,OAAQ,WAErDjJ,OAAgC,SAAxB2J,EAAO5K,QAAQH,KAAkBc,IAAEC,OAAOnE,EAAM+I,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAAsD,IAAhClC,EAAOc,SAASsB,cAAmB,SAACC,GAAD,OAASA,EAAIvB,SAASsB,cAAeP,IAAEC,OAAOnE,EAAM+I,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAAuD,IAAjClC,EAAOc,SAASyB,eAAoB,SAACF,GAAD,OAASA,EAAIvB,SAASyB,eACnVD,SAAkC,SAAxBwJ,EAAO5K,QAAQH,KAAkBc,IAAEC,OAAOnE,EAAM+I,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAAsD,IAAhClC,EAAOc,SAASsB,cAAoB,QAAUP,IAAEC,OAAOnE,EAAM+I,MAAMjH,QAAQoB,OAAO,SAAAb,GAAM,OAAkC,IAA9BA,EAAOc,SAASoB,WAAuD,IAAjClC,EAAOc,SAASyB,eAAqB,UAG1S,IpCpL0B,qBoCqL1B,OAAOlF,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI2J,UAAW,QACX6D,WAAY,CAACO,IAAK,UAAWqC,KAAM,UAAW3C,OAAQ,WACtDE,YAAakX,GAAalX,cAG9B,IpC3LgB,WoC4LhB,OAAOjO,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI+I,MAAOoF,EAAO5K,QAAQd,KACtB+B,OAAQ2J,EAAO5K,QAAQiB,OACvBG,SAAUwJ,EAAO5K,QAAQoB,WAI7B,QACA,OAAO3E,IKpOXsG,QJGW,WAAuC,IAA9BtG,EAA8BglB,UAAA1hB,OAAA,QAAA2hB,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAC5B,QADkDG,UAAA1hB,OAAA,EAAA0hB,UAAA,QAAAC,GACpCtkB,MACV,IrCQmB,cqCPnB,OAAOjB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIyG,oBAAqB,UACrBC,gBAAiB,SACjBd,WAAY,WACZY,UAAW,OACX0J,QAAS,WAGb,IrCDiB,YqCEjB,OAAOxQ,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIyG,oBAAqB,SACrBC,gBAAiB,UACjBd,WAAY,OACZY,UAAW,WACX0J,QAAS,SAGb,QACA,OAAOlQ,IIzBX8B,QHUW,WAAuC,IAA9B9B,EAA8BglB,UAAA1hB,OAAA,QAAA2hB,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAAc1W,EAAQ6W,UAAA1hB,OAAA,EAAA0hB,UAAA,QAAAC,EAClD,OAAO9W,EAAOxN,MACV,ItCSqB,gBsCRrB,OAAOjB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI8B,QAASqM,EAAO5K,UAGpB,ItCKkB,asCJlB,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIqC,OAAQwiB,GAAaxiB,OACrBP,QAASoC,IAAEC,OAAFzE,OAAA0E,EAAA,EAAA1E,CAAaM,EAAM8B,SAAnBuC,OAAA,CAA4B8J,EAAO5K,UAAU,UAG1D,ItCHqB,gBsCIrB,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIklB,cAAe/W,EAAO5K,QACtBzB,QAAS9B,EAAM8B,QAAQoB,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQyC,QAG1E,ItCRmB,csCSnB,OAAOtG,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIqC,OAAQwiB,GAAaxiB,OACrBP,QAASoC,IAAEC,OAAF,CAAUgK,EAAO5K,SAAjBc,OAAA3E,OAAA0E,EAAA,EAAA1E,CAA6BM,EAAM8B,QAAQoB,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQyC,QAAO,UAG9G,ItCxBgB,WsCyBhB,OAAOtG,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEImT,KAAMnT,EAAMmT,KAAKrN,IAAI,SAAC8Y,EAAKvU,GAAW,OAAGA,IAAU8D,EAAO5K,QAAuB,WAA+B,aAChH6P,OAAQpT,EAAMoT,OAAOtN,IAAI,SAACqf,EAAO9a,GAAW,OAAGA,IAAU8D,EAAO5K,QAAyB,SAA+B,cAG5H,ItC9BkB,asC+BlB,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIqC,OAAQwiB,GAAaxiB,OACrBkP,SAAU,MACV4B,KAAM0R,GAAa1R,KACnBC,OAAQyR,GAAazR,SAGzB,ItCrCiB,YsCsCjB,OAAO1T,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuR,SAAU,OACV4B,KAAM,CAAC,WAAW,WAAW,YAC7BC,OAAQ,CAAC,SAAU,SAAU,WAC7B/Q,OAAQ8L,EAAO5K,UAGnB,ItC7CoB,esC8CpB,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIqC,OAAQ8L,EAAO5K,UAGnB,QACA,OAAOvD,IGtEXwV,MFuMW,WAAuC,IAA9BxV,EAA8BglB,UAAA1hB,OAAA,QAAA2hB,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAAc1W,EAAQ6W,UAAA1hB,OAAA,EAAA0hB,UAAA,QAAAC,EAClD,OAAO9W,EAAOxN,MACV,IvCxK2B,sBuCyK3B,OAAOjB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIwN,WAAY,YAGhB,IvCrN+B,0BuCsN/B,OAAO9N,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuV,aAAcpH,EAAO5K,QAAQd,KAC7B4R,eAAgBlG,EAAO5K,QAAQiK,aAGnC,IvC3N6B,wBuC4N7B,OAAO9N,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI8kB,iBAAkB5gB,IAAEC,OAAOgK,EAAO5K,QAAQ8C,MAAMnD,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,IAAMe,KAASmB,OAAO,gBAAe,OAAOgN,UAChHqD,gBAAiBrU,IAAEC,OAAOgK,EAAO5K,QAAQ8C,MAAMnD,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,IAAMe,KAASmB,OAAO,gBAAe,OAAOgN,UAC/GqI,oBAAqBpP,EAAO5K,QAAQwL,gBAGxC,IvC5L8B,yBuC6L9B,OAAOrP,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIqU,eAAgBlG,EAAO5K,UAG3B,IvCjM4B,uBuCkM5B,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI2b,cAAcjc,OAAA0E,EAAA,EAAA1E,CAAKM,EAAM2b,eAAZtX,OAAA,CAA2B8J,EAAO5K,UAC/CiZ,gBAAiBxc,EAAMwc,gBAAgBtZ,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,MAAQmI,EAAO5K,QAAQyC,MAClFuZ,eAAgBsF,GAAatF,eAC7BkD,cAAeoC,GAAapC,cAC5BC,YAAamC,GAAapC,gBAG9B,IvC1MiC,4BuC2MjC,OAAO/iB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI2b,cAAe3b,EAAM2b,cAAczY,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,MAAQmI,EAAO5K,QAAQyC,MAC9EwW,gBAAgB9c,OAAA0E,EAAA,EAAA1E,CAAKM,EAAMwc,iBAAZnY,OAAA,CAA6B8J,EAAO5K,UACnDgc,eAAgBsF,GAAatF,eAC7BkD,cAAeoC,GAAapC,cAC5BC,YAAamC,GAAanC,cAG9B,IvCnN8B,yBuCoN9B,OAAOhjB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI8b,gBAAgBpc,OAAA0E,EAAA,EAAA1E,CAAKM,EAAM8b,iBAAZzX,OAAA,CAA6B8J,EAAO5K,QAAQgF,WAC3DsV,kBAAmB7d,EAAM6d,kBAAkB3a,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQgF,SAASvC,MACnGuZ,eAAgBsF,GAAatF,eAC7BkD,cAAeoC,GAAapC,cAC5BC,YAAamC,GAAanC,cAG9B,IvC5NmC,8BuC6NnC,OAAOhjB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI8b,gBAAiB9b,EAAM8b,gBAAgB5Y,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQgF,SAASvC,MAC/F6X,kBAAkBne,OAAA0E,EAAA,EAAA1E,CAAKM,EAAM6d,mBAAZxZ,OAAA,CAA+B8J,EAAO5K,QAAQgF,WAC/DgX,eAAgBsF,GAAatF,eAC7BkD,cAAeoC,GAAapC,cAC5BC,YAAamC,GAAanC,cAG9B,IvCrO4B,uBuCsO5B,OAAOhjB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI4X,YAAazJ,EAAO5K,QAAQmQ,MAC5BgJ,YAAavO,EAAO5K,QAAQ8C,MAC5BoX,cAAetP,EAAO5K,QAAQzB,QAC9Bud,mBAAoBlR,EAAO5K,QAAQoQ,KACnCkP,aAAc1U,EAAO5K,QAAQqQ,QAGjC,IvC7O0B,qBuC8O1B,OAAOlU,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIohB,cAAeld,IAAEC,OAAFzE,OAAA0E,EAAA,EAAA1E,CAAaM,EAAMohB,eAAnB/c,OAAA,CAAkC8J,EAAO5K,UAAS,QACjEie,sBAAuBtd,IAAEC,OAAFzE,OAAA0E,EAAA,EAAA1E,CAAaM,EAAMohB,eAAnB/c,OAAA,CAAkC8J,EAAO5K,UAAS,UAG7E,IvCnP6B,wBuCoP7B,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIohB,cAAeld,IAAEC,OAAOnE,EAAMohB,cAAcle,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQyC,MAAK,QAChGwb,sBAAuBtd,IAAEC,OAAOnE,EAAMohB,cAAcle,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQyC,MAAK,UAG5G,IvCzP+B,0BuC0P/B,OAAOtG,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIohB,cAAeld,IAAEC,OAAOgK,EAAO5K,QAAS,QACxCie,sBAAuBtd,IAAEC,OAAOgK,EAAO5K,QAAS,UAGpD,IvC9PmB,cuC+PnB,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAuB,QAAQtM,YAGzE,IvCpQoB,euCqQpB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAuB,UAGjE,IvC1QsB,iBuC2QtB,OAAO9hB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAA2B,QAAvBA,EAAOwW,cAAwB,iBAGhH,IvChRuB,kBuCiRvB,OAAOnZ,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAA2B,QAAvBA,EAAOwW,cAAwB,eAAe3D,YAG/H,IvCtRqB,gBuCuRrB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAA0B,QAAtBA,EAAOiX,aAAuB,gBAG/G,IvC5RsB,iBuC6RtB,OAAO5Z,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAA0B,QAAtBA,EAAOiX,aAAuB,cAAcpE,YAG7H,IvClSuB,kBuCmSvB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAA2B,QAAvBA,EAAOkX,cAAwB,iBAGhH,IvCxSwB,mBuCySxB,OAAO7Z,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAA2B,QAAvBA,EAAOkX,cAAwB,eAAerE,YAG/H,IvC9SqB,gBuC+SrB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAA0B,QAAtBA,EAAOmX,aAAuB,gBAG/G,IvCpTsB,iBuCqTtB,OAAO9Z,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAA0B,QAAtBA,EAAOmX,aAAuB,cAActE,YAG7H,IvC1TsB,iBuC2TtB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAAqB,QAAjBA,EAAOwU,QAAkB,WAG1G,IvChUuB,kBuCiUvB,OAAOnX,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAAqB,QAAjBA,EAAOwU,QAAkB,SAAS3B,YAGnH,IvCpUwB,mBuCqUxB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAAuB,QAAnBA,EAAO0U,UAAoB,aAG5G,IvC1UyB,oBuC2UzB,OAAOrX,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAAuB,QAAnBA,EAAO0U,UAAoB,WAAW7B,YAIvH,IvCrVoB,euCsVpB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAAmB,QAAfA,EAAOuX,MAAgB,SAGxG,IvC3VqB,gBuC4VrB,OAAOla,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAAmB,QAAfA,EAAOuX,MAAgB,OAAO1E,YAG/G,IvC/VoB,euCgWpB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAAmB,QAAfA,EAAOyX,MAAgB,SAGxG,IvCrWqB,gBuCsWrB,OAAOpa,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIuf,eAAgBpR,EAAO5K,QACvBie,sBAAuBtd,IAAEC,OAAOnE,EAAMwhB,sBAAsBte,OAAO,SAAAb,GAAM,MAAmB,QAAfA,EAAOyX,MAAgB,OAAO5E,YAG/G,IvC3YsB,iBuC4YtB,OAAOxV,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIolB,UAAWjX,EAAO5K,QAClBgV,gBAAiBvY,EAAM8kB,iBAAiB5hB,OAAO,SAAAT,GAAI,OAAIA,EAAKuD,KAAOmI,EAAO5K,QAAQ2U,MAAQzV,EAAKuD,KAAOmI,EAAO5K,QAAQ4U,OAGzH,IvChXyB,oBuCiXzB,OAAOzY,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI0d,gBAA2C,WAA1BvP,EAAO5K,QAAQlB,OAAsB8L,EAAO5K,QAAQma,gBAAkB1d,EAAM0d,gBAC7FE,mBAA8C,WAA1BzP,EAAO5K,QAAQlB,OAAsB8L,EAAO5K,QAAQqa,mBAAqB5d,EAAM4d,qBAGvG,IvCpXyB,oBuCqXzB,OAAOle,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAGIohB,cAAejT,EAAO5K,QAAQc,OAAOrE,EAAMohB,cAAcle,OAAO,SAAAb,GAAM,OAAIA,EAAO2D,MAAQmI,EAAO5K,QAAQyC,SAG5G,IvC1X0B,qBuC2X1B,OAAOtG,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI4c,UAAWzO,EAAO5K,QAClBuf,iBAAkB3U,EAAO5K,UAG7B,IvChYsB,iBuCiYtB,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIohB,cAAeld,IAAEC,OAAOnE,EAAMohB,cAAcle,OAAO,SAAAb,GAAM,OAAIA,EAAOuF,mBAAqBuG,EAAO5K,UAAU,UAG9G,IvClY2B,sBuCmY3B,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIoe,YAAajQ,EAAO5K,QAAQpD,OAC5Boe,gBAAiBpQ,EAAO5K,QAAQpB,OAEpC,IvC3YmB,cuC4YnB,OAAOzC,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI2c,kBAAsC,oBAAnBxO,EAAO5K,QAAgC,gBAAkB,oBAGhF,IvChZ0B,qBuCiZ1B,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI2b,cAAekJ,GAAalJ,cAC5Ba,gBAAiBxc,EAAM8kB,iBACvBnI,kBAAmB,oBAGvB,IvCrZqC,gCuCsZrC,OAAOjd,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI0iB,YAAamC,GAAanC,YAC1BnD,eAAgBsF,GAAatF,eAC7BkD,cAAetU,EAAO5K,QAAQkf,cAE9BjB,sBAAmD,SAA5BrT,EAAO5K,QAAQ+e,SAAsBpe,IAAEC,OAAOnE,EAAMohB,cAAcle,OAAO,SAAAb,GAAM,OAAIA,EAAO2F,oBAAsBmG,EAAO5K,QAAQof,aAAY,QAAUze,IAAEC,OAAOnE,EAAMohB,cAAcle,OAAO,SAAAb,GAAM,OAAIA,EAAO2F,oBAAsBmG,EAAO5K,QAAQof,aAAY,UAGtR,IvC9ZsC,iCuC+ZtC,OAAOjjB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEIyiB,cAAeoC,GAAapC,cAC5BlD,eAAgBsF,GAAatF,eAC7BmD,YAAavU,EAAO5K,QACpBie,sBAAmD,MAA5BrT,EAAO5K,QAAQ+e,SAAmBpe,IAAEC,OAAOnE,EAAMohB,cAAcle,OAAO,SAAAb,GAAM,OAAIA,EAAOwW,YAAc7Y,EAAM2b,cAAcrY,OAAS6K,EAAO5K,QAAQ8e,YAAc,MAAM,QAAUne,IAAEC,OAAOnE,EAAMohB,cAAcle,OAAO,SAAAb,GAAM,OAAIA,EAAOwW,YAAc7Y,EAAM2b,cAAcrY,OAAS6K,EAAO5K,QAAQ8e,YAAc,MAAM,UAG7U,QACA,OAAOriB,IEnfXokB,aDOW,WAAuC,IAA9BpkB,EAA8BglB,UAAA1hB,OAAA,QAAA2hB,IAAAD,UAAA,GAAAA,UAAA,GAAtBH,GAAc1W,EAAQ6W,UAAA1hB,OAAA,EAAA0hB,UAAA,QAAAC,EAClD,OAAO9W,EAAOxN,MACV,IxCqEwB,mBwCpExB,OAAOjB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI0jB,KAAMvV,EAAO5K,UAGjB,IxCgEoB,ewC/DpB,OAAO7D,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEI0jB,KAAMmB,GAAanB,OAGvB,IxC2DiB,YwC1DjB,OAAOhkB,OAAAsJ,GAAA,EAAAtJ,CAAA,GACAM,EADP,CAEImT,KAAMnT,EAAMmT,KAAKrN,IAAI,SAAC8Y,EAAKvU,GAAW,OAAGA,IAAU8D,EAAO5K,QAAuB,WAA+B,eAGpH,QACA,OAAOvD,MEpCT6kB,GAAe,GACfQ,GAAa,CAACC,MAKpB,GAAIjkB,OAAOkkB,UAAUC,UAAUlJ,SAAS,WAAwC,0BAA3Bjb,OAAOC,SAASC,OACjE,IAAIkkB,GAAQC,aACRC,GACAd,GACAe,aACIC,KAAete,WAAf,EAAmB8d,IACnBhkB,OAAOykB,8BAAgCzkB,OAAOykB,sCAItDL,GAAQC,aACJC,GACAd,GACAe,aACIC,KAAete,WAAf,EAAmB8d,MAMhBI,4BCWfM,KAAQC,IAAIC,KAAaC,KAAeC,KAAeC,KAAejd,KAAuBkd,KAAmBC,KAAcC,KAAcJ,KAAeK,KAASC,KAAQC,KAAaC,KAAcC,KAAkBC,KAAoBC,KAAUC,KAAQC,KAA4BC,MAG3R,IAoBeC,GApBH,kBACV5mB,EAAAC,EAAAC,cAAC2mB,EAAA,EAAD,CAAU1B,MAAOA,IACfnlB,EAAAC,EAAAC,cAAC4mB,EAAA,EAAD,KACE9mB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6mB,EAAA,EAAD,KACE/mB,EAAAC,EAAAC,cAAC8mB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQvmB,IAC9BZ,EAAAC,EAAAC,cAAC8mB,EAAA,EAAD,CAAOE,KAAK,SAASE,UAAW/X,KAChCrP,EAAAC,EAAAC,cAAC8mB,EAAA,EAAD,CAAOE,KAAK,UAAUE,UAAWlV,KACjClS,EAAAC,EAAAC,cAAC8mB,EAAA,EAAD,CAAOE,KAAK,SAASE,UAAWxQ,KAChC5W,EAAAC,EAAAC,cAAC8mB,EAAA,EAAD,CAAOE,KAAK,WAAWE,UAAWzE,KAElC3iB,EAAAC,EAAAC,cAAC8mB,EAAA,EAAD,CAAOE,KAAK,SAASE,UAAW/C,KAChCrkB,EAAAC,EAAAC,cAAC8mB,EAAA,EAAD,CAAOE,KAAK,KAAKE,UAAWxmB,SC9ChCymB,GAAcC,QACW,cAA7BvmB,OAAOC,SAASumB,UAEe,UAA7BxmB,OAAOC,SAASumB,UAEhBxmB,OAAOC,SAASumB,SAASjM,MACvB,2DAsCN,SAASkM,GAAgBC,GACvBxC,UAAUyC,cACPC,SAASF,GACTplB,KAAK,SAAAulB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpoB,QACfulB,UAAUyC,cAAcO,WAK1B7iB,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB6iB,MAAM,SAAAC,GACL/iB,QAAQ+iB,MAAM,4CAA6CA,KCzEjEC,IAASjB,OAAOnnB,EAAAC,EAAAC,cAACmoB,GAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBtD,UAAW,CAGzE,GADkB,IAAIuD,IAAIC,GAAwB1nB,OAAOC,UAC3CC,SAAWF,OAAOC,SAASC,OAIvC,OAGFF,OAAO2nB,iBAAiB,OAAQ,WAC9B,IAAMjB,EAAK,GAAA1jB,OAAM0kB,GAAN,sBAEPpB,IAiDV,SAAiCI,GAE/BkB,MAAMlB,GACHplB,KAAK,SAAAumB,GAGkB,MAApBA,EAAS/oB,SACuD,IAAhE+oB,EAASC,QAAQxnB,IAAI,gBAAgBsI,QAAQ,cAG7Csb,UAAUyC,cAAcoB,MAAMzmB,KAAK,SAAAulB,GACjCA,EAAamB,aAAa1mB,KAAK,WAC7BtB,OAAOC,SAASgoB,aAKpBxB,GAAgBC,KAGnBS,MAAM,WACL9iB,QAAQC,IACN,mEArEA4jB,CAAwBxB,GAIxBxC,UAAUyC,cAAcoB,MAAMzmB,KAAK,WACjC+C,QAAQC,IACN,+GAMJmiB,GAAgBC,MCzCxByB,uBCPAC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.b29f98c4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport SmallLogo from \"../components/images/logo_sm.jpeg\"\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            navDisplay: \"noShow\",\n            navItemsVisibility: \"hidden\"\n        }\n    }\n\n    changeStatus(status) {\n        this.setState({ navDisplay: status === \"noShow\" ? \"show\" : \"noShow\", navItemsVisibility: status === \"noShow\" ? \"visible\" : \"hidden\" })\n    }\n\n    render() {\n        return (\n            <nav>\n                <div className={this.state.navDisplay + \" darkNavBar\"}>\n                    <h4 className={this.state.navItemsVisibility + \" nav_title\"}>Summit Broomball</h4>\n                    <div className={this.state.navItemsVisibility + \" navbar-nav\"}>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/\">Home</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Player\">Players</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Draft\">Draft</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Stats\">Stats</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Records\">Records</a>\n                        <a className={this.state.navItemsVisibility + \" nav-item nav-link\"} href=\"/Login\">Login</a>\n                    </div>\n                </div>\n\n                <div className=\"navbar bg\">\n                    <button className=\"navbar-toggler\" type=\"button\">\n                        <img onClick={() => this.changeStatus(this.state.navDisplay)} className=\" toggler_img\" src={SmallLogo} alt=\"logo\" />\n                    </button>\n                </div>\n            </nav>\n            )\n        }\n}\n\n\nexport default NavBar\n","import React from \"react\";\nimport NavBar from \"../components/NavBar.js\";\n\nimport \"../styles/css/home.css\";\n\nconst Home = () => (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Summit Broomball</h1>\n            <div className=\"instructions_div\">\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Create, Manage, and Edit Players:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"/Player\"><button className=\"btn contrast_color menu_button\">Players</button></a>\n                    </div>\n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Schedule Games and Draft Teams:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Draft\"><button className=\"btn contrast_color menu_button\">Draft</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instructions_text\">Enter Stats for Games:</p>\n                    </div>\n                    <div className=\"instruction\">\n                        <a href=\"./Stats\"><button className=\"btn contrast_color menu_button\" >Stats</button></a>\n                    </div>\n                    \n                </div>\n\n                <div className=\"page_div\">\n                    <div className=\"instruction\">\n                        <p className=\"instruction instructions_text\">Visualize Recorded Stats:</p>\n                    </div> \n                    <div className=\"instruction\">\n                        <a href=\"./Records\"><button className=\"btn contrast_color menu_button\" >Records</button></a>\n                    </div>\n                    \n                </div>\n            </div>\n                \n                \n                <div className=\"container\">\n                    <div className=\"welcome_text\">\n                        <p className=\"text_center\">\n                        Click on the logo at any time to switch page.\n                        </p>\n                    </div>\n                </div>\n            </div>        \n        </div>\n\n)\nexport default Home;\n","import axios from \"axios\";\n// Transforming the current url in order to query the public API locally \n// (Express port 3001 changed to React port 3000 where the API exists).\n// Once deployed, it should reset to the domain name used.\nlet currentURL = window.location.origin\nif (currentURL === \"http://localhost:3000\") {\n    currentURL = \"http://localhost:8080\"\n    } \n// For Passport.js: \n/* Server sends SetCookie header then the browser handle to store it, and then the cookie is sent with requests made to \nthe same server inside a Cookie HTTP header.\nhttps://stackoverflow.com/questions/45536831/node-express-passport-req-user-undefined-but-works-in-postman\n\nconst config = {\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    }\n}\n*/\nexport default {\n    getGames: () => {       \n        const url = currentURL + \"/api/game/\"\n        return axios.get(url)\n        },\n    getGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.get(url)\n    },\n    addGame: (date, players) => {\n        const url = currentURL + \"/api/game/\"\n        return axios.post(url, { game_date: date, players: players})\n        },\n    deleteGame: (id) => {\n        const url = currentURL + \"/api/game/\" + id\n        return axios.delete(url)\n        },\n    editGame: (gameId, data) => {\n        const url = currentURL + \"/api/game/\" + gameId\n        return axios.put(url, { data })\n        },\n    getPlayers: () => {\n        const url = currentURL + \"/api/player/\"\n        return axios.get(url)\n        },\n    addPlayer: (player) => {\n        const url = currentURL + \"/api/player/\"\n        return axios.post(url, { player })\n        },\n    editPlayer: (id, data) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.put(url, { data })\n        },\n    deletePlayer: (id) => {\n        const url = currentURL + \"/api/player/\" + id\n        return axios.delete(url)\n    },\n    addNewUser: (userData) => {\n        const url = currentURL + \"/users\"\n        return axios.post(url, {userData})\n    },\n    authenticateUser: (mode, userData) => {\n        const url = currentURL + \"/login\"\n        if (mode === \"local\") {\n            return axios.post(url, userData)\n        }\n        }\n    }\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    GET_GAME, \n    DELETE_GAME, \n    EDIT_GAME_INFO, \n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE, \n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS, \n    HIDE_NON_MEMBERS,\n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO, \n    UNLOCK_GAME_INFO,\n    RESET,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n    \n} from './types';\n\nimport API from \"../../utils/API\"\nimport _ from \"underscore\"\n\nexport const fetchGames = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_GAMES,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deleteGame = (id) => dispatch => {\n    API.deleteGame(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_GAME,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addGame = (date, players, player, members) => dispatch => {\n    API.addGame(date, players, player, members)\n            .then(res => {\n                if(res.status !== 200) {\n                    throw new Error(res.statusText)\n                    }\n                else {\n                    let newGame = res.data\n                    // console.log(\"res.data: \", res.data)\n                    if(newGame.name){\n                        console.log(\"Error Message: the app encountered an error creating this game in the database\")\n                    }\n                    else {\n                        console.log(\"Game successfully added to db\")\n                        dispatch({\n                            type: NEW_GAME,\n                            payload: res.data\n                        })\n                        }\n                    }\n            })\n        }\n\nexport const getGame = (game) => dispatch => {\n    API.getGame(game)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                /* We need to know if drafting has happened for the Stats page to display properly */\n                let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\")\n                let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\")\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }\n\n                dispatch({\n                    type: GET_GAME,\n                    payload: {\n                        game: res.data,\n                        gameStats: gameStats,\n                        noStatsMessage: noStatsMessage\n                    }\n                })\n            }\n        })\n}\n\nexport const editGameInfo = (game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get full game data from the API's response\n            /*\n            // Then we need to check if the locker can be displayed\n            let darkPlayers = res.data.players.filter(player => player.gameInfo.team === \"Dark\" && player.gameInfo.available === true)\n            let whitePlayers = res.data.players.filter(player => player.gameInfo.team === \"White\" && player.gameInfo.available === true)\n                // console.log(\"Array lengths: \", darkPlayers.length, \" and \", whitePlayers.length)\n                let gameStats\n                let noStatsMessage\n                if (darkPlayers.length > 0 && whitePlayers.length > 0) {\n                    gameStats = \"visible\";\n                    noStatsMessage = \"hidden\";\n                }\n                else {\n                    gameStats = \"hidden\";\n                    noStatsMessage = \"visible\";\n                }*/\n            \n            dispatch({\n                type: EDIT_GAME_INFO,\n                payload: {\n                    game: res.data,\n                    // gameStats: gameStats,\n                    // noStatsMessage: noStatsMessage\n                    }\n            })\n        }\n    })\n}\n\nexport const setMemberUnavailable = (game, data) => dispatch => {\n        API.editGame(game, data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_MEMBER_UNAVAILABLE,\n                    payload: res.data\n                    })\n                }\n            })\n    }\nexport const setTenBuckerUnavailable = (gameId, gameData, playerID) => dispatch => {\n    API.editGame(gameId, gameData)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                // we get the game info\n                // console.log(\"res.data: \", res.data)\n                dispatch({\n                    type: MAKE_TEN_BUCKER_UNAVAILABLE,\n                    payload: {\n                        gameData: res.data,\n                        player: playerID\n                        }\n                    })\n                }\n            })\n        }\nexport const setAvailable = (game, data) => dispatch => {\n    // console.log(\"data.player: \", data.player, \"\\n(is the id of player to add)\")\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // we get the game info\n            // console.log(\"res.data: \", res.data)\n            dispatch({\n                type: MAKE_MEMBER_AVAILABLE,\n                payload: {\n                    player: data.player,\n                    game: res.data\n                    }\n            })\n        }\n    })\n}\n\n\nexport const showUnavailable = () => dispatch => {\n    dispatch({\n        type: SHOW_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const hideUnavailable = () => dispatch => {\n    dispatch({\n        type: HIDE_UNAVAILABLE_MEMBERS\n    })\n}\n\nexport const showNonMembers = (allTenBuckers, notPlayingTenBuckers) => dispatch => {\n    dispatch({\n        type: SHOW_NON_MEMBERS,\n        payload: {\n            all: allTenBuckers,\n            new: notPlayingTenBuckers\n                }\n    })\n}\n\nexport const hideNonMembers = () => dispatch => {\n    dispatch({\n        type: HIDE_NON_MEMBERS\n    })\n}\n// Adds a Ten Bucker to the list of players\nexport const addNonMember = (game, newPlayer, existingPlayers) => dispatch => {\n    let newRoster = _.sortBy([...existingPlayers, newPlayer], \"name\")\n    API.editGame(game, {players: newRoster})\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NON_MEMBER,\n                payload: {players: res.data, player: newPlayer}\n            })\n        }\n    })\n}\n\nexport const lockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: true}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: LOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const unlockGameInfo = (game) => dispatch => {\n    let lock = {lock_status: false}\n    API.editGame(game, lock)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error (res.statusText)\n        }\n        else {\n            dispatch({\n                type: UNLOCK_GAME_INFO,\n                payload: res.data.lock_status,\n            })\n        }\n    })\n}\n\nexport const triggerPickMode = (team) => dispatch => {\n    // console.log(\"team in triggerPickMode from gameActions.js: \", team)\n    switch (team) {\n        case \"Dark\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        left: \"Exit\",\n                        right: \"Set White Picks\"\n                        }\n                    }\n                })\n                break;\n\n        case \"White\":\n        dispatch({\n                type: TRIGGER_PICK_MODE,\n                payload: \n                    {\n                        team: team,\n                        buttons: \n                        {\n                        right: \"Exit\",\n                        left: \"Set Dark Picks\"\n                        },\n                        // set: \"player.gameInfo.whitePickNum\"\n                    }\n                })\n                break;\n        default:\n            console.log(\"There was an error in the dispatcher\")\n    }\n    }\n\nexport const triggerDraftMode = () => dispatch => {\n    dispatch({\n        type: TRIGGER_DRAFT_MODE\n        })\n}\n\nexport const setPick = (team, game, data) => dispatch => {\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data.players: \", res.data.players)\n            let available = res.data.players.filter(player => player.gameInfo.available === true)\n            switch (team) {\n                case \"Dark\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.darkPickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                case \"White\":\n                dispatch({\n                    type: SET_PICK,\n                    payload: \n                    {\n                        game: res.data,\n                        picked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n                        unpicked: _.sortBy(available.filter(player => player.gameInfo.whitePickNum === 0),\"name\")\n                    }\n                })\n                break;\n\n                default:\n                return;\n                }\n            }\n        })\n    } \n\nexport const reset = (game, data) => dispatch => {\n    // console.log('Data received in reset gameActions.js: ', data)\n    API.editGame(game, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            // console.log(\"res.data in the reset gameAction.js function: \", res.data)\n            dispatch({\n                type: RESET,\n                payload: res.data\n            })\n            }\n    })\n}","export const FETCH_GAMES = 'FETCH_GAMES'\nexport const NEW_GAME = 'NEW_GAME'\nexport const GET_GAME = 'GET_GAME'\nexport const DELETE_GAME = 'DELETE_GAME'\n\nexport const GET_GAMES_AND_TRANSFORM = 'GET_GAMES_AND_TRANSFORM'\nexport const GET_GAMES_IN_TIMESPAN = 'GET_GAMES_IN_TIMESPAN'\n\nexport const EDIT_GAME_INFO = 'EDIT_GAME_INFO'\nexport const LOCK_GAME_INFO = 'LOCK_GAME_INFO'\nexport const UNLOCK_GAME_INFO = 'UNLOCK_GAME_INFO'\nexport const RESET = 'RESET'\n\nexport const SHOW_UNAVAILABLE_MEMBERS = 'SHOW_UNAVAILABLE_MEMBERS'\nexport const HIDE_UNAVAILABLE_MEMBERS = 'HIDE_UNAVAILABLE_MEMBERS'\nexport const MAKE_MEMBER_AVAILABLE = 'MAKE_MEMBER_AVAILABLE'\nexport const ADD_NON_MEMBER = 'ADD_NON_MEMBER'\nexport const MAKE_MEMBER_UNAVAILABLE = 'MAKE_MEMBER_UNAVAILABLE'\nexport const MAKE_TEN_BUCKER_UNAVAILABLE = 'MAKE_TEN_BUCKER_UNAVAILABLE'\nexport const SHOW_NON_MEMBERS = 'SHOW_NON_MEMBERS'\nexport const HIDE_NON_MEMBERS = 'HIDE_NON_MEMBERS'\n\nexport const SHOW_FUTURE = \"SHOW_FUTURE\"\nexport const SHOW_PAST = \"SHOW_PAST\"\n\nexport const SHOW_TAB = \"SHOW_TAB\"\nexport const RESET_TABS = \"RESET_TABS\"\n\nexport const EDIT_FORM = \"EDIT_FORM\"\nexport const UPDATE_FIELD = \"UPDATE_FIELD\"\n\nexport const FETCH_PLAYERS = \"FETCH_PLAYERS\"\nexport const DELETE_PLAYER = \"DELETE_PLAYER\"\nexport const ADD_PLAYER = \"ADD_PLAYER\"\nexport const EDIT_PLAYER = \"EDIT_PLAYER\"\n\nexport const CREATE_GAME_ROSTER = \"CREATE_GAME_ROSTER\"\n\nexport const TRIGGER_PICK_MODE = \"TRIGGER_PICK_MODE\"\nexport const TRIGGER_DRAFT_MODE = \"TRIGGER_DRAFT_MODE\"\nexport const SET_PICK = 'SET_PICK'\n\nexport const SET_DATE_RANGE = \"SET_DATE_RANGE\"\n\nexport const SHOW_GAMES_TO_STATS = \"SHOW_GAMES_TO_STATS\"\nexport const SET_YEARS_VISIBILITIES = \"SET_YEARS_VISIBILITIES\"\nexport const ADD_GAME_TO_SELECTED = \"ADD_GAME_TO_SELECTED\"\nexport const REMOVE_GAME_FROM_SELECTED = \"REMOVE_GAME_FROM_SELECTED\"\nexport const ADD_PLAYER_TO_SELECTED = \"ADD_PLAYER_TO_SELECTED\"\nexport const REMOVE_PLAYER_FROM_SELECTED = \"REMOVE_PLAYER_FROM_SELECTED\"\nexport const TOGGLE_RECORDS_VIEWS = \"TOGGLE_RECORDS_VIEWS\"\n\nexport const ADD_PLAYER_RECORDS = \"ADD_PLAYER_RECORDS\"\nexport const REMOVE_PLAYER_RECORDS = \"REMOVE_PLAYER_RECORDS\"\nexport const REPLACE_PLAYERS_RECORDS = \"REPLACE_PLAYERS_RECORDS\"\n\nexport const SORT_AZ_ASC = \"SORT_AZ_ASC\"\nexport const SORT_AZ_DESC = \"SORT_AZ_DESC\"\nexport const SORT_GAMES_ASC = \"SORT_GAMES_ASC\"\nexport const SORT_GAMES_DESC = \"SORT_GAMES_DESC\"\nexport const SORT_WINS_ASC = \"SORT_WINS_ASC\"\nexport const SORT_WINS_DESC = \"SORT_WINS_DESC\"\nexport const SORT_LOSSES_ASC = \"SORT_LOSSES_ASC\"\nexport const SORT_LOSSES_DESC = \"SORT_LOSSES_DESC\"\nexport const SORT_TIES_ASC = \"SORT_TIES_ASC\"\nexport const SORT_TIES_DESC = \"SORT_TIES_DESC\"\nexport const SORT_GOALS_ASC = \"SORT_GOALS_ASC\"\nexport const SORT_GOALS_DESC = \"SORT_GOALS_DESC\"\nexport const SORT_GPG_ASC = \"SORT_GPG_ASC\"\nexport const SORT_GPG_DESC = \"SORT_GPG_DESC\"\nexport const SORT_ASSISTS_ASC = \"SORT_ASSISTS_ASC\"\nexport const SORT_ASSISTS_DESC = \"SORT_ASSISTS_DESC\"\nexport const SORT_APG_ASC = \"SORT_APG_ASC\"\nexport const SORT_APG_DESC = \"SORT_APG_DESC\"\n\n// export const SET_CHART_DATA = \"SET_CHART_DATA\"\nexport const TOGGLE_SELECT_ALL = \"TOGGLE_SELECT_ALL\"\n// export const TOGGLE_POSITIONS = \"TOGGLE_POSITIONS\"\n\nexport const BATCH_CARD_UPDATE = \"BATCH_CARD_UPDATE\"\nexport const BATCH_CHART_UPDATE = \"BATCH_CHART_UPDATE\"\nexport const BATCH_UNSELECT = \"BATCH_UNSELECT\"\nexport const BATCH_GAMES = \"BATCH_GAMES\"\nexport const UNSELECT_ALL_GAMES = \"UNSELECT_ALL_GAMES\"\n\nexport const TOGGLE_PLAYER_MODAL = \"TOGGLE_PLAYER_MODAL\"\nexport const FILTER_PLAYER_RECORDS_BY_TYPE = \"FILTER_PLAYER_RECORDS_BY_TYPE\"\nexport const FILTER_PLAYER_RECORDS_BY_GAMES = \"FILTER_PLAYER_RECORDS_BY_GAMES\"\n\n// USERS\nexport const UPDATE_USER_FORM = \"UPDATE_USER_FORM\"\nexport const ADD_NEW_USER = \"ADD_NEW_USER\"\nexport const SIGN_MODE = \"SIGN_MODE\"\n// export const SETTING_USER_PRIVILEGES = \"SETTING_USER_PRIVILEGES\"","/* https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage */\n\nexport const loadState = () => {\n    try {\n        const serializedState = sessionStorage.getItem('state');\n        if (serializedState === null ) {\n            return undefined;\n        }\n        return JSON.parse(serializedState)\n    } catch (err) {\n        return undefined\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem(\"state\", serializedState);\n    } catch (err) {\n        console.log(err)\n    }\n}","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchGames } from '../../js/actions/gameActions'\nimport { getGame } from '../../js/actions/gameActions'\nimport { deleteGame } from '../../js/actions/gameActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass GameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleteGame: true\n        }\n    }\n    componentDidMount() {\n        this.props.fetchGames();\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    /* \n    componentDidUpdate() {\n        console.log(this.state)\n    } \n    */\n    \n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n    }\n\n    deleteGameFunc = (gameId) => {\n        this.props.deleteGame(gameId);\n    }\n\n    render() {\n        return (\n            <div className=\"show_games\">\n            <h2 className=\"h2_main\">{this.props.dateHeader} Games</h2>\n                <div className=\"list-management\">\n                    {/* showing the upcoming games when mode has been  */}\n                    {this.props.dateHeader === \"Upcoming\" ? (\n                        // need case for when there is no game scheduled\n                        this.props.upcomingGames.length > 0 ?\n                        this.props.upcomingGames\n                            .map(game =>\n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color \" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n                    ) : \n                    (\n                        this.props.pastGames.length > 0 ?\n                        this.props.pastGames\n                            .map(game => \n                                <div key={game._id}>\n                                    <button className=\"content_button game_button default_color\" onClick={() =>this.getGameInfo(game._id)}> {game._id} </button> \n                                    {this.state.deleteGame === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_game\"} onClick={() => this.deleteGameFunc(game._id)} /> : null }\n                                </div>\n                                )\n                            :\n                            <p className=\"no_game\">There is currently no game to display for the selected time span.<br />\n                            Create a game to start drafting teams!</p>\n\n                    )}\n\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    games: state.games.games,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    upcoming_visibility: state.display.upcoming_visibility,\n    past_visibility: state.display.past_visibility,\n    lockStatus: state.games.lockStatus,\n    upcomingGames: state.games.upcomingGames,\n    pastGames: state.games.pastGames\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { fetchGames, getGame, deleteGame }) (GameList)\n","import { FETCH_PLAYERS, EDIT_PLAYER, DELETE_PLAYER, ADD_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from './types';\nimport API from \"../../utils/API\"\n\nexport const fetchPlayers = () => dispatch => {\n    API.getPlayers()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                dispatch({\n                    type: FETCH_PLAYERS,\n                    payload: res.data\n                })\n            }\n        })\n    }\n\nexport const deletePlayer = (id) => dispatch => {\n    API.deletePlayer(id)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: DELETE_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const addPlayer = (data) => dispatch => {\n    console.log(\"data received: \", data)\n    API.addPlayer(data)\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n                }\n            else if (res.data.errors) {\n                console.log(res.data.message)\n            }\n            else {\n                let newPlayer = res.data\n                if(newPlayer.name !== \"MongoError\")\n                    {\n                    console.log(\"Player successfully added to db\")\n                    dispatch({\n                        type: ADD_PLAYER,\n                        payload: res.data\n                    })\n\n                    }\n                else {\n                    console.log(\"Error Message: the app encounted an error creating this player in the database\")\n                    }\n                }\n            })\n        }\n\nexport const editPlayer = (id, data) => dispatch => {\n    API.editPlayer(id, data)\n    .then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: EDIT_PLAYER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n        dispatch({\n            type: SHOW_TAB,\n            payload: id\n        })\n    }\n\nexport const resetTabs = (id) => dispatch => {\n    dispatch({\n        type: RESET_TABS\n    })\n}\n\nexport const editForm = (player) => dispatch => {\n    dispatch({\n        type: EDIT_FORM,\n        payload: player\n        })\n    }\n    \nexport const updateField = (player) => dispatch => {\n    dispatch({\n        type: UPDATE_FIELD,\n        payload: player \n        })\n    }\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addGame } from '../../js/actions/gameActions'\nimport { fetchPlayers } from '../../js/actions/playerActions'\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { loadState } from \"../sessionStorage\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\n\nconst moment = require(\"moment\");\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: \"\",\n            createGame: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        \n            this.setState(...this.state.date, privileges)\n        \n        }\n\n    handleChange(date) {\n        this.setState({\n            dateSelected: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let members = this.props.players.filter((player) => player.membershipStatus === \"Member\")\n        let membersWithGameInfo = members.map((member) => {return {\n            membershipStatus: member.membershipStatus,\n            _id: member._id,\n            name: member.name,\n            playerLevel: member.playerLevel,\n            preferredPosition: member.preferredPosition,\n            gameInfo: this.props.gameInfo\n        }})\n        let dateOfGame = moment(this.state.dateSelected).format(\"YYYY-MM-DD\")\n        this.props.addGame(dateOfGame, membersWithGameInfo)\n    }\n\n\n    render() {\n        return (\n            <div id=\"schedule_game\">\n                <div>\n                    <h2 className=\"h2_main\">Schedule a game</h2>\n                </div>\n\n                <div>\n                {this.state.createGame === true \n                    ? <form className=\"game_form\" onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                            <div className=\"calendar_component\">\n                                <DatePicker \n                                    placeholderText=\"MM DD YYYY\"\n                                    selected={this.state.dateSelected}\n                                    onChange={this.handleChange}\n                                    value={this.state.value}\n                                    />\n                            </div>\n                            \n                                <div className=\"submit_button\">\n                                    <button id=\"date_submit\" className=\"contrast_color content_button\" name=\"submit\" type=\"submit\" >Submit</button>\n                                </div> \n                            \n                        </div>\n                        </form> \n                    : <p className=\"no_game\">Login as an admin to schedule games and create team line-ups!</p> }\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    game: state.games.game,\n    players: state.players.players,\n    gameInfo: state.games.gameInfo\n    })\n\n\nexport default connect(mapStateToProps, { addGame, fetchPlayers }) (Calendar)\n    ","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { addNonMember } from '../../js/actions/gameActions'\nimport { setMemberUnavailable } from '../../js/actions/gameActions'\nimport { setTenBuckerUnavailable } from '../../js/actions/gameActions'\nimport { setAvailable } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    setUnavailable(playerID, playerStatus) {\n        let gameId = this.props.draft._id\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (playerStatus === \"Member\"){\n            this.props.setMemberUnavailable(gameId, {player: playerID, gameInfo: {available: false, team: \"N/A\"}})\n            }\n        else {\n            let gameId = this.props.draft._id\n            let gameData = {...this.props.draft, players: this.props.draft.players.filter(player => player._id !== playerID)}\n            this.props.setTenBuckerUnavailable(gameId, gameData, playerID)\n            }    \n        }\n    }\n\n    makeAvailable(playerID) {\n        let gameId = this.props.draft._id;\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            this.props.setAvailable(gameId, {player: playerID, gameInfo: {available: true, team: \"N/A\"}})    \n            }\n    }\n\n    assignTeam(playerID, team){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {team: team}})\n            }\n    }\n\n    addTenBuckerToDraft(player){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            let tenBuckerToAdd = {\n                membershipStatus: player.membershipStatus,\n                _id: player._id,\n                name: player.name,\n                playerLevel: player.playerLevel,\n                preferredPosition: player.preferredPosition,\n                gameInfo: this.props.gameInfo\n                }   \n            this.props.addNonMember(gameId, tenBuckerToAdd, this.props.draft.players)\n            }\n\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"drafter_mode\">\n                    <div className=\"col_no_bootstrap dark_draft_players\">\n                        <h1 className=\"h1_main col_header\"><br/>Dark</h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                                .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                .map(player => {\n                                    return (\n                                        <div className=\"player_div leaning_right_div\" key={player._id}>\n                                            <button className=\"player_button leaning_right_color\">{player.name}</button>\n                                            {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                        </div>\n                                        )\n                                        })\n                                ) : (<p>Data has not loaded yet</p>)\n                            }\n                    </div>\n                    <div className=\"col_no_bootstrap undraft_players\">\n                    <h1 className=\"h1_alternate col_header game_date\">{this.props.gameDate}<br/><br/></h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"N/A\")\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div leaning_center_div\" key={player._id}>\n                                        {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"Dark\")} /> : null }\n                                        <button className=\"player_button plain_color\">{player.name}</button>\n                                        {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                        {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"White\")} /> : null }\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Data has not loaded yet</p>)\n                        }\n\n                        {this.props.unavailableMembers ? (this.props.unavailableMembers\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div\" key={player._id}>   \n                                        <button className=\"player_button unavailable\" onClick={() => this.state.changeAvailability === true ? this.makeAvailable(player._id) : null } >{player.name}</button>\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Unable to retrieve unavailable Members</p>)\n                        }\n\n                        {this.props.notPlayingNonMembers ? (this.props.notPlayingNonMembers\n                            .map(player => {\n                                return (\n                                    <div className=\"player_div\" key={player._id}>   \n                                        <button className=\"player_button negative_color\" onClick={() => this.state.changeAvailability === true ? this.addTenBuckerToDraft(player) : null }>{player.name}</button>\n                                    </div>\n                                    )\n                                    })\n                            ) : (<p>Unable to retrieve Ten Buckers</p>)\n                        }\n\n\n                    </div>\n                    <div className=\"col_no_bootstrap white_drafted_players\">\n                    \n                    <h1 className=\"h1_main col_header\"><br/>White</h1>\n                        {this.props.draft.players ? (this.props.draft.players\n                                    .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                    .map(player => {\n                                        return (\n                                            <div className=\"player_div leaning_left_div\" key={player._id}>\n                                                {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} size=\"2x\" onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                                <button className={\"player_button leaning_left_color \"}>{player.name}</button>\n                                                {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            </div>\n                                            )\n                                            })\n                                    ) : (<p>Data has not loaded yet</p>)\n                                }\n                    </div>\n                </div>\n            </main>\n\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, addNonMember, setMemberUnavailable, setTenBuckerUnavailable, setAvailable, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { addNonMember } from '../../js/actions/gameActions'\nimport { setMemberUnavailable } from '../../js/actions/gameActions'\nimport { setTenBuckerUnavailable } from '../../js/actions/gameActions'\nimport { setAvailable } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { loadState } from \"../sessionStorage\"\n\nclass SmallScreenDrafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n            draftedDark: 0,\n            draftedWhite: 0,\n            undrafted: 0\n            \n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    setUnavailable(playerID, playerStatus) {\n        let gameId = this.props.draft._id\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (playerStatus === \"Member\"){\n            this.props.setMemberUnavailable(gameId, {player: playerID, gameInfo: {available: false, team: \"N/A\"}})\n            }\n        else {\n            let gameId = this.props.draft._id\n            let gameData = {...this.props.draft, players: this.props.draft.players.filter(player => player._id !== playerID)}\n            this.props.setTenBuckerUnavailable(gameId, gameData, playerID)\n            }    \n        }\n    }\n\n    makeAvailable(playerID) {\n        let gameId = this.props.draft._id;\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            this.props.setAvailable(gameId, {player: playerID, gameInfo: {available: true, team: \"N/A\"}})    \n            }\n    }\n\n    assignTeam(playerID, team){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {team: team}})\n            }\n    }\n\n    addTenBuckerToDraft(player){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            let gameId = this.props.draft._id\n            let tenBuckerToAdd = {\n                membershipStatus: player.membershipStatus,\n                _id: player._id,\n                name: player.name,\n                playerLevel: player.playerLevel,\n                preferredPosition: player.preferredPosition,\n                gameInfo: this.props.gameInfo\n                }   \n            this.props.addNonMember(gameId, tenBuckerToAdd, this.props.draft.players)\n            }\n\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"col_no_bootstrap undraft_players\">\n                    <h1 className=\"h1_alternate col_header game_date\">{this.props.gameDate}</h1>\n                    {this.props.undrafted !== 0 ? \n                    <div className=\"small_screen_team_names_header\">\n                        <div className=\"sstnh sstnhd\">\n                            <h1 className=\"h1_main col_header\"> <FontAwesomeIcon icon=\"arrow-circle-left\" className=\"arrows \"/> Dark</h1>\n                        </div>\n                        <div className=\"sstnh sstnhw\">\n                            <h1 className=\"h1_main col_header\">White <FontAwesomeIcon icon={faArrowAltCircleRight} className=\"arrows \" /></h1> \n                        </div>\n                    </div> : null }\n\n                    {this.props.draft.players ? (this.props.draft.players\n                        .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"N/A\")\n                        .map(player => {\n                            return (\n                                <div className=\"player_div leaning_center_div\" key={player._id}>\n                                    {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"Dark\")} /> : null }\n                                    <button className=\"content_button player_button plain_color\">{player.name}</button>\n                                    {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                    {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"arrows \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"White\")} /> : null }\n                                </div>\n                                )\n                                })\n                        ) : (<p>Data has not loaded yet</p>)\n                    }\n\n                    {this.props.unavailableMembers ? (this.props.unavailableMembers\n                        .map(player => {\n                            return (\n                                <div className=\"player_div\" key={player._id}>   \n                                    <button className=\"content_button player_button unavailable\" onClick={() => this.state.changeAvailability === true ? this.makeAvailable(player._id) : null } >{player.name}</button>\n                                </div>\n                                )\n                                })\n                        ) : (<p>Unable to retrieve unavailable Members</p>)\n                    }\n\n                    {this.props.notPlayingNonMembers ? (this.props.notPlayingNonMembers\n                        .map(player => {\n                            return (\n                                <div className=\"player_div\" key={player._id}>   \n                                    <button className=\"content_button player_button negative_color\" onClick={() => this.state.changeAvailability === true ? this.addTenBuckerToDraft(player) : null }>{player.name}</button>\n                                </div>\n                                )\n                                })\n                        ) : (<p>Unable to retrieve Ten Buckers</p>)\n                    }\n                </div>\n                <div className=\"small_teams\">\n                    <div className=\"col_no_bootstrap dark_draft_players\">\n                    {this.props.draftedDark || this.props.draftedWhite !== 0 ? <h1 className=\"h1_alternate col_header\"><br/>Dark</h1> : null}\n                        <div>\n                            {this.props.draft.players ? (this.props.draft.players\n                                    .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                    .map(player => {\n                                        return (\n                                            <div className=\"player_div\" key={player._id}>\n                                                {this.state.draftTeams === true ? <FontAwesomeIcon icon=\"arrow-circle-left\" className={\"small_screen_arrows sm_dark \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                                <button className=\"content_button player_button black_small_screen\">{player.name}</button>\n                                                {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            </div>\n                                            )\n                                            })\n                                    ) : (<p>Data has not loaded yet</p>)\n                                }\n                        </div>\n                    </div>\n                    \n                    <div className=\"col_no_bootstrap white_draft_players\">\n                        {this.props.draftedDark || this.props.draftedWhite !== 0 ? <h1 className=\"h1_alternate col_header\"><br/>White</h1> : null}\n                        <div>\n                        {this.props.draft.players ? (this.props.draft.players\n                                .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                .map(player => {\n                                    return (\n                                        <div className=\"player_div\" key={player._id}>\n                                            <button className=\"content_button player_button white_small_screen\">{player.name}</button>\n                                            {this.state.changeAvailability === true ? <FontAwesomeIcon icon=\"times-circle\" className={\"remove remove_player \" + this.props.lockStatus} onClick={() => this.setUnavailable(player._id, player.membershipStatus)} /> : null }\n                                            {this.state.draftTeams === true ? <FontAwesomeIcon icon={faArrowAltCircleRight} className={\"small_screen_arrows sm_white \" + this.props.lockStatus} onClick={() => this.assignTeam(player._id, \"N/A\")} /> : null }\n                                        </div>\n                                        )\n                                        })\n                                ) : (<p>Data has not loaded yet</p>)\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </main>\n\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    draftedDark: state.games.draft.players ? state.games.draft.players.filter(player => player.gameInfo.team === \"Dark\").length : 0,\n    draftedWhite: state.games.draft.players ? state.games.draft.players.filter(player => player.gameInfo.team === \"White\").length : 0,\n    undrafted: state.games.draft.players ? state.games.draft.players.filter(player => player.gameInfo.team === \"N/A\" && player.gameInfo.available === true).length : 0,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, addNonMember, setMemberUnavailable, setTenBuckerUnavailable, setAvailable }) (SmallScreenDrafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    addPick(team, playerID){\n        let gameId = this.props.draft._id\n        switch (team){\n            case \"Dark\":\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {player: playerID, gameInfo: {darkPickNum: this.props.picked.length + 1}})\n            break;\n\n            case \"White\":\n            this.props.setPick(\"White\", gameId, {player: playerID, gameInfo: {whitePickNum: this.props.picked.length + 1}})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    removePick(team, player) {\n        let gameId = this.props.draft._id\n        // we remove the player from the array of ranked players\n        let indexOfPlayerToRemove = this.props.picked.indexOf(player)\n        this.props.picked.splice(indexOfPlayerToRemove,1)\n        // we will also need to send the unavailable players, otherwise their availability cannot be reset later on\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        switch (team){\n            case \"Dark\":\n            // after removing the player from the array of ranked players, we reset their rank via their index in the array\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.darkPickNum = index + 1 }\n            })\n            // the rank of the player initially selected is reset to 0\n            player.gameInfo.darkPickNum = 0\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            case \"White\":\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.whitePickNum = index + 1 }\n            })\n            player.gameInfo.whitePickNum = 0\n            this.props.setPick(\"White\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    rankOneUp(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit > 0) {\n            switch (this.props.draftMode) {\n                case \"Dark\": \n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n            }\n        }\n    }\n\n    rankOneDown(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit < this.props.picked.length - 1) {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"picker_mode\"> \n                    <div className=\"col_no_bootstrap set_picks_col\">\n                        <h1 className=\"h1_main pick_col_header unpicked_list_header\">Set {this.props.draftMode} Picks</h1>\n                        <div className=\"list_of_unpicked_players\">\n                        {/* Mapping the unranked Players */}\n                        {this.props.unpicked ? (this.props.unpicked\n                            .map(player => {\n                                return (\n                                    <div className=\"player_picking_div\" key={player._id}>\n                                        <button className=\"content_button player_picking lighter_color\"  onClick={() => this.addPick(this.props.draftMode, player._id)} >{player.name}</button>\n                                        <FontAwesomeIcon icon=\"angle-right\" className=\"pick_arrow arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div>\n                        <div className=\"col_no_bootstrap ranks_col\">\n                            <h1 className=\"h1_main pick_col_header picked_list_header\">Ranks</h1>\n                            {/* mapping the ranked available players */}\n                            <div className=\"list_of_picked_players\">\n                            {this.props.picked ? (this.props.picked\n                                .map(player => {\n                                    return (    \n                                        <div className=\"player_picking_div\" key={player._id}>\n                                            <button className=\"content_button player_button darker_color\">{player.name}</button>\n                                            <FontAwesomeIcon icon=\"minus-circle\" className=\"remove remove_pick\" onClick={() => this.removePick(this.props.draftMode, player)} />\n                                            <div className=\"sorter\"> \n                                                <FontAwesomeIcon icon=\"chevron-up\" className=\"up_arrow\" onClick={() => this.rankOneUp(player)}/>\n                                                <FontAwesomeIcon icon=\"chevron-down\" className=\"down_arrow\" onClick={() => this.rankOneDown(player)}/>\n                                            </div>\n                                        </div>\n                                    )\n                                } )\n                            ) : ( <p>Bogus data</p> )\n                            }\n                            </div>\n                        </div> \n                </div>\n            </main>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { setPick } from '../../js/actions/gameActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nclass Drafter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            draftTeams: true,\n            changeAvailability: true,\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n\n    addPick(team, playerID){\n        let gameId = this.props.draft._id\n        switch (team){\n            case \"Dark\":\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {player: playerID, gameInfo: {darkPickNum: this.props.picked.length + 1}})\n            break;\n\n            case \"White\":\n            this.props.setPick(\"White\", gameId, {player: playerID, gameInfo: {whitePickNum: this.props.picked.length + 1}})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    removePick(team, player) {\n        let gameId = this.props.draft._id\n        // we remove the player from the array of ranked players\n        let indexOfPlayerToRemove = this.props.picked.indexOf(player)\n        this.props.picked.splice(indexOfPlayerToRemove,1)\n        // we will also need to send the unavailable players, otherwise their availability cannot be reset later on\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        switch (team){\n            case \"Dark\":\n            // after removing the player from the array of ranked players, we reset their rank via their index in the array\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.darkPickNum = index + 1 }\n            })\n            // the rank of the player initially selected is reset to 0\n            player.gameInfo.darkPickNum = 0\n            // We send the team for the reducer to create array of ranked and unranked players accordingly\n            this.props.setPick(\"Dark\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            case \"White\":\n            this.props.picked.forEach((player, index) => {\n                player = {...player.gameInfo.whitePickNum = index + 1 }\n            })\n            player.gameInfo.whitePickNum = 0\n            this.props.setPick(\"White\", gameId, {players: [player, ...this.props.picked.concat(this.props.unpicked, unavailable)]})\n            break;\n\n            default:\n            return\n        }\n    }\n\n    rankOneUp(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit > 0) {\n            switch (this.props.draftMode) {\n                case \"Dark\": \n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit - 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n            }\n        }\n    }\n\n    rankOneDown(player) {\n        let gameId = this.props.draft._id\n        let indexOfPlayerToEdit = this.props.picked.indexOf(player)\n        let unavailable = this.props.draft.players.filter(player => player.gameInfo.available === false)\n        if (indexOfPlayerToEdit < this.props.picked.length - 1) {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                // we adjust the rank of the player ranked immediately above\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.darkPickNum = indexOfPlayerToEdit + 1;\n                // we adjust the rank of the player we rank up\n                player.gameInfo.darkPickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"Dark\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                case \"White\":\n                this.props.picked[indexOfPlayerToEdit + 1].gameInfo.whitePickNum = indexOfPlayerToEdit + 1;\n                player.gameInfo.whitePickNum = indexOfPlayerToEdit + 2\n                this.props.setPick(\"White\", gameId, {players: this.props.picked.concat(this.props.unpicked, unavailable)})\n                break;\n\n                default:\n                return;\n\n            }\n        }\n    }\n\n    render() {\n        return (\n            <main>\n                <div className=\"picker_mode\"> \n                <div className=\"col_no_bootstrap ranks_col\">\n                        {this.props.picked.length !== 0 ? <h1 className=\"h1_main pick_col_header picked_list_header\">Ranks</h1> : null}\n                        {/* mapping the ranked available players */}\n                        <div className=\"list_of_picked_players\">\n                        {this.props.picked ? (this.props.picked\n                            .map(player => {\n                                return (    \n                                    <div className=\"player_picking_div\" key={player._id}>\n                                        <div className=\"pick_number\">\n                                            {this.props.draftMode === \"Dark\" ? player.gameInfo.darkPickNum : player.gameInfo.whitePickNum}\n                                        </div>\n                                        <div className=\"sorting-down\">     \n                                            <FontAwesomeIcon icon=\"chevron-down\" className=\"sm_down_arrow\" onClick={() => this.rankOneDown(player)}/>\n                                        </div>\n                                        <div className=\"pick_name_button\">\n                                            <button className=\"content_button player_button darker_color\">{player.name}</button>\n                                        </div>\n                                        <div className=\"sorting-up\">     \n                                            <FontAwesomeIcon icon=\"chevron-up\" className=\"sm_up_arrow\" onClick={() => this.rankOneUp(player)}/>\n                                        </div>\n                                        <div className=\"sm_remove_pick\">\n                                            <FontAwesomeIcon icon=\"minus-circle\" className=\"remove \" onClick={() => this.removePick(this.props.draftMode, player)} />\n                                        </div>\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div> \n\n                    <div className=\"col_no_bootstrap set_picks_col\">\n                        {this.props.unpicked.length !== 0 ? <h1 className=\"h1_main pick_col_header unpicked_list_header\">Pick {this.props.draftMode} Order</h1> : null }\n                        <div className=\"list_of_unpicked_players\">\n                        {/* Mapping the unranked Players */}\n                        {this.props.unpicked ? (this.props.unpicked\n                            .map(player => {\n                                return (\n                                    <div className=\"player_to_pick_div\" key={player._id}>\n                                        <button className=\"content_button player_picking lighter_color\"  onClick={() => this.addPick(this.props.draftMode, player._id)} >{player.name}</button>\n                                        <FontAwesomeIcon icon=\"plus-circle\" className=\"pick_arrow_plus arrows\" onClick={() => this.addPick(this.props.draftMode, player._id)} />\n                                    </div>\n                                )\n                            } )\n                        ) : ( <p>Bogus data</p> )\n                        }\n                        </div>\n                    </div>\n                    \n                </div>\n            </main>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    draft: state.games.draft,\n\n    gameDate: state.games.gameDate,\n    unavailableMembers: state.games.unavailableMembers,\n    notPlayingNonMembers: state.games.notPlayingNonMembers,\n    gameInfo: state.games.gameInfo,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    picked: state.games.picked,\n    unpicked: state.games.unpicked,\n})\n\nexport default connect(mapStateToProps, { editGameInfo, setPick }) (Drafter)\n","import React, { Component } from \"react\";\nimport _ from \"underscore\"\nimport { connect } from 'react-redux';\n\nimport { editGameInfo } from '../../js/actions/gameActions'\nimport { reset } from '../../js/actions/gameActions'\nimport { triggerPickMode } from '../../js/actions/gameActions'\nimport { triggerDraftMode } from '../../js/actions/gameActions'\n\nclass GameOptionsBottom extends Component {\n\n    resetTeams(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            switch (this.props.draftMode) {\n                case \"Dark\":\n                    let resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for Dark team\n                            gameInfo: {...member.gameInfo, darkPickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                break;\n\n                case \"White\":\n                    resetPlayers = this.props.players\n                        .map((member) => {return {  \n                            ...member,\n                            // this will only reset their rank among the picks for White team\n                            gameInfo: {...member.gameInfo, whitePickNum: 0}\n                            }\n                        })\n                    this.props.reset(game, {players: resetPlayers})\n                return;\n\n                case \"Draft\":\n                // we filter the members (but should be done from the player db, not the games.draft)\n                    resetPlayers = this.props.players\n                    .filter((player) => player.membershipStatus === \"Member\")\n                    .map((member) => {return {\n                        membershipStatus: member.membershipStatus,\n                        _id: member._id,\n                        name: member.name,\n                        playerLevel: member.playerLevel,\n                        preferredPosition: member.preferredPosition,\n                        // Resetting teams only\n                        gameInfo: {...member.gameInfo, team: \"N/A\"}\n                        }})\n                this.props.reset(game, {players: _.sortBy(resetPlayers, \"name\")})\n                break;\n                \n                default:\n                return;\n                }\n            }\n        }\n\n    autodraft(game){\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (this.props.draftMode === \"Draft\") {\n                // Autodraft feature: separates all players by level, randomly assigns them to dark or white team\n                let mixedRosters = [];\n                let arrayOfAvailablePlayers = this.props.players.filter(player => player.gameInfo.available === true)\n                // recreating our array by assigning each player to its level\n                let output = arrayOfAvailablePlayers.reduce((levels,player) => {\n                    levels[player.playerLevel] = levels[player.playerLevel] || [];\n                    levels[player.playerLevel].push({\n                        player\n                    });\n                    return levels;\n                },[])\n                \n                let numOutput = Object.keys(output).length;\n                \n                for (let i = 0; i < numOutput; i++) {\n                    // running the randomize function for each level\n                    let playersByLevel = Object.entries(output)[i]\n                    // the \"level\" is the first argument in the array, the next one is the players: that's how we access them\n                    let playersArray = playersByLevel[1]\n                    // we randomize via a custom recursive function (could also try underscore, but on such a small array, it\n                    // I doubt it makes any difference)\n                    this.randomize(playersArray, mixedRosters)\n                    }\n                    \n                for (let i = 0; i < mixedRosters.length; i++) {\n                    // assigning different team to every other player\n                    if (i%2 === 0) {mixedRosters[i].player.gameInfo.team = \"Dark\";}\n                    else {mixedRosters[i].player.gameInfo.team = \"White\"}\n                    }\n                    \n                    let arrayOfUnavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    // For a reason I haven't been able to figure out, each player information is nested \n                    // under \"{player: }\" which we then need to remove\n                    let remappedAvailablePlayers = mixedRosters.map((player) => player.player)\n                    // Once this is done, we add the unavailable players since they need to be sent to the API as well (otherwise, they just can't be added back in the draft)\n                    let allPlayers = remappedAvailablePlayers.concat(arrayOfUnavailablePlayers)\n                    allPlayers = _.sortBy(allPlayers, \"name\") \n                    \n                this.props.editGameInfo(game, {players: allPlayers})\n                // the only purpose of calling this function is to verify that teams are balanced (level wise)\n                this.filterTeams(allPlayers, \"level\")\n                }\n                else {\n                    console.log(\"Error message: go to draft mode to draft teams\")\n                    }\n            }\n        }\n\n    // helper function to randomize an array (pushes/deletes to another array recursively, until it's empty) \n    randomize = (inputArray, outputArray) => {\n        if(inputArray.length > 0) {\n            let randomPlayer = inputArray[Math.floor(Math.random()*inputArray.length)];\n            let index = inputArray.indexOf(randomPlayer);\n            outputArray.push(randomPlayer);\n            inputArray.splice(index,1)\n            this.randomize(inputArray, outputArray);\n            }\n        }\n        \n    // function to filter array of player objects into teams used for quick control. \n    filterTeams = (arrayOfPlayerObjects, mode) => {\n        if (mode === \"level\") {\n            // filter player objects according to name of the team #1\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, \"playerLevel\")\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, \"playerLevel\")\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"playerLevel\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}`);\n                })\n            }\n        else {\n            let rosterTeam1 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"Dark\")\n            rosterTeam1 = _.sortBy(rosterTeam1, (obj) => obj.gameInfo.darkPickNum)\n            console.log(`\\n************\\nDark:\\n************\\n`);\n            // display the name of the player for all players of the team\n            rosterTeam1.forEach((e) => {\n                console.log(`${e.name} (picked for Dark: #${e.gameInfo.darkPickNum})`);\n            })\n            \n            let rosterTeam2 = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"White\")\n            rosterTeam2 = _.sortBy(rosterTeam2, (obj) => obj.gameInfo.whitePickNum)\n            console.log(`\\n************\\nWhite:\\n************\\n`);\n            rosterTeam2.forEach((e) => {\n                console.log(`${e.name} (picked for White: #${e.gameInfo.whitePickNum})`);\n                })\n            \n            let unavailable = arrayOfPlayerObjects.filter((e) => e.gameInfo.team === \"N/A\")\n            unavailable = _.sortBy(unavailable, \"name\")\n            console.log(`\\n************\\nUnavailable:\\n************\\n`);\n            unavailable.forEach((e) => {\n                console.log(`${e.name} (${e.playerLevel})\\nAvailable: ${e.gameInfo.available}\\nPicked for Dark: #${e.gameInfo.darkPickNum})\\nPicked for White: #${e.gameInfo.whitePickNum})`)//.\\nPicked in position: ${e.gameInfo.captain2Pick})`);\n                })\n            }\n        }\n    \n    toggleMode(currentMode, team){\n        if (currentMode === team) {\n            this.props.triggerDraftMode()\n        }\n        else {\n            this.props.triggerPickMode(team)\n        }\n    }\n    // helper function to test if a pick is eligible to be pushed to the ranked array. If not, moves on to the next pick. \n    testPick = (inputObject, rankedPlayers) => {\n        let index = 0;\n        let picks = inputObject.picks;\n        if (rankedPlayers.indexOf(picks[index]) !== -1) {\n            picks.splice(index,1);\n            this.testPick(inputObject, rankedPlayers);\n            }\n        else {\n            let nameOfTeam = inputObject.team;\n            // assigns the name of the team to the drafted player (to filter later on)\n            picks[index].gameInfo.team = nameOfTeam;\n            // takes the pick, pushes it to the output array\n            rankedPlayers.push(picks[index]);\n            // removes the pick from the array of picks\n            picks.splice(index,1);\n            }\n        }\n\n    // function to create a \"serpentine\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 has the next 2 picks, etc. until everyone is drafted\n    serpentineDraft = (game) => {\n        // Serpentine draft sends an object to \"testPick\" to figure if a player has already been drafted. \n        // If not, the player in question gets stored in the array of drafter players (and so on, recursively). \n        // For this to happen, we need to format our objects\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        // the function will error if we try to run it more times than players have been picked. \n        // Therefore, we need a pattern to determine how many times it should be ran\n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n            // there are 4 turns to complete a round\n            let turns = 4;\n            let modulo = num % turns;\n            let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    this.testPick(darkPicks, rankedPlayers);\n                    }\n                    // and complete the rosters one player at a time\n                    switch (modulo !== 0) {\n                        case modulo === 1:\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        case modulo === 2:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        break;\n                        case modulo === 3:\n                        this.testPick(darkPicks, rankedPlayers);\n                        this.testPick(whitePicks, rankedPlayers);\n                        this.testPick(darkPicks, rankedPlayers);\n                        break;\n                        default:\n                        return;\n                        }\n                    }\n                this.filterTeams(rankedPlayers, \"pick\")\n                // we re-add the unavailable players, otherwise they cannot be reset later on\n                let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                    \n                let allPlayers = rankedPlayers.concat(unavailablePlayers)\n                this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n    \n    // function to create an \"alternate\" type draft \n    // Aka: captain #1 drafts first pick, then captain #2 drafts, etc. until everyone is drafted\n    alternateDraft = (game) => {\n        let darkPicks = {team: \"Dark\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum)};\n        let whitePicks = {team: \"White\", picks: _.sortBy(this.props.players.filter(player => player.gameInfo.available === true && player.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum)};\n        let rankedPlayers = []; \n        \n        let num;\n        let num1 = darkPicks.picks.length;\n        let num2 = whitePicks.picks.length;\n        if (num1 > num2) {\n            num = num2\n            }\n        else {\n            num = num1\n            }\n        // there are 2 turns to complete a round\n        let turns = 2;\n        let modulo = num % turns;\n        let completeRounds = (num - modulo)/turns\n        if (this.props.lockStatus === \"hidden\") {\n            console.log(\"Error message: game is locked\")\n            }\n        else {\n            if (modulo === 0) {\n                // if the num of players allows for complete rounds of serpentine draft\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                }\n            else {\n                // if not, we have to run as many complete rounds as possible\n                for (let i = 1; i <= completeRounds; i++) {\n                    this.testPick(darkPicks, rankedPlayers);\n                    this.testPick(whitePicks, rankedPlayers);\n                    }\n                // and complete the rosters with one more pick\n                this.testPick(darkPicks, rankedPlayers);\n                }\n            this.filterTeams(rankedPlayers, \"pick\")\n            // we re-add the unavailable players, otherwise they cannot be reset later on\n            let unavailablePlayers = this.props.players.filter(player => player.gameInfo.available !== true)\n                        \n            let allPlayers = rankedPlayers.concat(unavailablePlayers)\n            this.props.editGameInfo(game, {players: allPlayers})\n            }\n        }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom + \" game_options_bottom\"}>\n                <div className={this.props.visibility.bottom + \" reduced_container\"}>\n                        <div className=\"game_options_container\">\n                            <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"Dark\")}>{this.props.pickButtons.left}</button> \n                            <button className=\"content_button contrast_color pick_option\" onClick={() => this.resetTeams(this.props.gameDate)}>Reset</button> \n                            <button className=\"content_button lighter_color pick_option\" onClick={() => this.toggleMode(this.props.draftMode, \"White\")}>{this.props.pickButtons.right}</button> \n                        </div>\n                        <br />\n                        <div className={this.props.visibility.top + \" game_options_container\"}>\n                            <button className=\"content_button darker_color draft_option\" onClick={()=> this.autodraft(this.props.gameDate)} >Autodraft</button>\n                            <button className=\"content_button darker_color draft_option\" onClick={()=> this.alternateDraft(this.props.gameDate)}>Alternate Draft</button> \n                            <button className=\"content_button darker_color draft_option\" onClick={() => this.serpentineDraft(this.props.gameDate)}>Serpentine Draft</button> \n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    players: state.games.draft.players,\n    lockStatus: state.games.lockStatus,\n    gameInfo: state.games.gameInfo,\n    draftMode: state.games.draftMode,\n    pickButtons: state.games.pickButtons\n})\n\nexport default connect(mapStateToProps, { editGameInfo, reset, triggerPickMode, triggerDraftMode }) (GameOptionsBottom)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { showUnavailable } from '../../js/actions/gameActions'\nimport { hideUnavailable } from '../../js/actions/gameActions'\nimport { showNonMembers } from '../../js/actions/gameActions'\nimport { hideNonMembers } from '../../js/actions/gameActions'\n\nclass GameOptionsTop extends Component {\n    \n    unavailable(action){\n        if (action === \"Show\") {\n            /*let members = this.props.players.filter(player => player.membershipStatus === \"Member\")\n            let playingMembers = this.props.gameParticipants.map(player => player._id)\n            let notPlayingMembers = members.filter(player => playingMembers.indexOf(player._id) === -1)\n            console.log(\"notPlayingMembers: \", notPlayingMembers)\n            // this.props.showUnavailable(notPlayingMembers)*/\n            this.props.showUnavailable()\n        }\n        else {\n            this.props.hideUnavailable()\n        }\n    }\n    tenBuckers(action){\n        /* This filters all players in the DB according to their membershipStatus\n        It then gets the id of all ten_buckers already playing (that we set when we fetch the game data in GameList.js\n        via the reducer). We check the former against the latter to see who's left to potentially add */\n        if (action === \"Show\") {\n            let tenBuckers = this.props.players.filter((player) => player.membershipStatus !== \"Member\")\n            let arrayOfIds = this.props.playingNonMembers.map(player => player._id)    \n            let newTenBuckers = tenBuckers.filter((player) => arrayOfIds.indexOf(player._id) === -1)\n            this.props.showNonMembers(tenBuckers, newTenBuckers)\n        }\n        else {\n            this.props.hideNonMembers()\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"container button_container\">\n                <button className=\"content_button darker_color game_options\" onClick={()=> this.unavailable(this.props.showingUnavailableMembers)}>{this.props.showingUnavailableMembers} Unavailable</button> \n                <button className=\"content_button darker_color game_options\" onClick={()=> this.tenBuckers(this.props.showingNonPlayingTenBuckers)}>{this.props.showingNonPlayingTenBuckers} Non-Members</button> \n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    players: state.players.players,\n    gameParticipants: state.games.draft.players,\n    playingNonMembers: state.games.playingNonMembers,\n    showingNonPlayingTenBuckers: state.games.showingNonPlayingTenBuckers,\n    showingUnavailableMembers: state.games.showingUnavailableMembers\n})\n\nexport default connect(mapStateToProps, { showUnavailable, hideUnavailable, showNonMembers, hideNonMembers }) (GameOptionsTop)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { lockGameInfo } from \"../js/actions/gameActions\"\nimport { unlockGameInfo } from \"../js/actions/gameActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Locker extends Component {\n\n    lockGame(game) {\n        this.props.lockGameInfo(game)\n    }\n\n    unlockGame(game){\n        this.props.unlockGameInfo(game)\n    }\n\n    render() {\n        return (\n            <div className={this.props.visibility.bottom === \"visible\" ? \"visible\" : \"hidden\"}>\n                <div className=\"text-center lock_icons_container\">\n                    <div className=\"left_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"locked content_button lock\" : \"unlocked content_button lock\"} onClick={() => this.unlockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"unlock-alt\" /></button> \n                    </div>\n                    <div className=\"right_lock\">\n                        <button className={this.props.lockStatus === \"visible\" ? \"unlocked content_button lock\" : \"locked content_button lock\"} onClick={() => this.lockGame(this.props.gameDate)}><FontAwesomeIcon icon=\"lock\"/></button> \n                    </div>\n                </div>\n            </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    gameDate: state.games.gameDate,\n    visibility: state.games.visibility,\n    lockStatus: state.games.lockStatus,\n    draftMode: state.games.draftMode,\n    // noStatsMessage: state.stats.visibility,\n})\n\nexport default connect(mapStateToProps, { lockGameInfo, unlockGameInfo }) (Locker)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleGames } from \"../js/actions/displayActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport GameList from \"../components/DraftPageComp/GameList.js\";\nimport Calendar from \"../components/DraftPageComp/Calendar.js\";\nimport Drafter from \"../components/DraftPageComp/Drafter.js\"\nimport SmallScreenDrafter from \"../components/DraftPageComp/SmallScreenDrafter.js\"\nimport Picker from \"../components/DraftPageComp/Picker.js\"\nimport SmallScreenPicker from \"../components/DraftPageComp/SmallScreenPicker.js\"\nimport GameOptionsBottom from \"../components/DraftPageComp/GameOptionsBottom.js\"\nimport GameOptionsTop from \"../components/DraftPageComp/GameOptionsTop.js\"\nimport Locker from \"../components/Locker.js\"\nimport { loadState } from \"../components/sessionStorage\"\n\nconst screenSize = window.innerWidth\nclass Draft extends Component { \nconstructor(props) {\n    super(props);\n    this.state = {\n        changeLock: true\n    }\n}\n\ncomponentDidMount() {\n    const privileges = loadState()\n    this.setState(privileges)\n    console.log(screenSize)\n\n}\n\ntoggleGamesFunc(currentlyShowing) {\n    this.props.toggleGames(currentlyShowing)\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main\"> \n            <h1 className=\"h1_main\">Draft Teams</h1>\n            <div className= \"organizer\">\n                <div><Calendar/></div>\n                <div><GameList/></div>\n            </div>\n            <div className=\"game_toggle_container\">\n                <button className=\"contrast_color change_list_display\" onClick={() => this.toggleGamesFunc(this.props.showing)}> {this.props.buttonMsg} Games</button>\n            </div>\n        </div>\n        <div className={\"main_main \" + this.props.visibility.top}>\n            <GameOptionsTop />\n        </div>\n        <div className={\"main_main \" + this.props.visibility.main}>\n            {this.props.draftMode === \"Draft\" ? screenSize > 767 ? <Drafter /> : <SmallScreenDrafter /> : screenSize > 500 ? <Picker /> : <SmallScreenPicker />}\n        </div>\n        <div className={\"main_main \" + this.props.visibility.bottom}>\n            <GameOptionsBottom />\n            {this.state.changeLock === true ? <Locker /> : null }\n        </div>\n    </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    showing: state.display.showing,\n    dateHeader: state.display.dateHeader,\n    today: state.display.today,\n    buttonMsg: state.display.buttonMsg,\n    visibility: state.games.visibility,\n    draftMode: state.games.draftMode,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleGames} ) (Draft)\n","import { SHOW_FUTURE, SHOW_PAST } from './types';\n\nexport const toggleGames = (currentState) => dispatch => {\n    if (currentState === \"past\") {\n        dispatch({\n            type: SHOW_FUTURE\n        })\n    }\n    else {\n        dispatch({\n            type: SHOW_PAST\n        })\n    }\n    }","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { addPlayer } from '../../js/actions/playerActions'\nimport { editPlayer } from '../../js/actions/playerActions'\nimport { resetTabs } from '../../js/actions/playerActions'\nimport { updateField } from '../../js/actions/playerActions'\n\nimport { loadState } from \"../sessionStorage\"\n\nclass Form extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            createPlayer: true\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    componentDidMount() {\n        const privileges = loadState()\n        this.setState(privileges)\n    }\n    handleCancel(event) {\n        event.preventDefault()\n        this.props.resetTabs()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedPlayer = {...this.props.player, [name]: value}\n        this.props.updateField(editedPlayer)\n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        /* If a player is a goalie, their level needs to be set as \"Goalie\" */\n        let assignedLevel;\n        if ( this.props.player.preferredPosition === \"Goalie\") {assignedLevel = \"Goalie\"}\n        else {assignedLevel = this.props.player.playerLevel}\n        let newPlayer = {\n            name: this.props.player.name,\n            fullName: this.props.player.fullName,\n            playerLevel: assignedLevel,\n            preferredPosition: this.props.player.preferredPosition,\n            membershipStatus: this.props.player.membershipStatus,\n            email: this.props.player.email\n            }\n        \n        if (this.props.formMode === \"Add\") {\n            this.props.addPlayer(newPlayer)\n            }\n        else {\n            let id = this.props.player._id\n            this.props.editPlayer(id, newPlayer)\n        }\n\n        // go back to tab#1\n        this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n            {this.state.createPlayer === true ? \n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"name\"\n                                value= {this.props.player.name}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Full Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"fullName\"\n                                value= {this.props.player.fullName}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Preferred Position: </label>\n                            <select name=\"preferredPosition\" onChange={(event) => this.handleChange(event)} value={this.props.player.preferredPosition}>\n                                <option defaultValue=\"Forward\">Forward</option>\n                                <option value=\"Defense\">Defense</option>\n                                <option value=\"Goalie\">Goalie</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Membership Status:</label>\n                            <select name=\"membershipStatus\" onChange={(event) => this.handleChange(event)} value= {this.props.player.membershipStatus}>\n                                <option defaultValue=\"Member\">Member</option>\n                                <option value=\"Ten Bucker\">Ten Bucker</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\"> \n                            <label>Level: </label>\n                            <select name=\"playerLevel\" onChange={(event) => this.handleChange(event)} value= {this.props.player.playerLevel}>\n                                <option value=\"A+\">A+</option>\n                                <option value=\"A\">A</option>\n                                <option value=\"A-\">A-</option>\n                                <option defaultValue=\"B+\">B+</option>\n                                <option value=\"B\">B</option>\n                                <option value=\"B-\">B-</option>\n                                <option value=\"C+\">C+</option>\n                                <option value=\"C\">C</option>\n                                <option value=\"C-\">C-</option>\n                                <option value=\"D+\">D+</option>\n                                <option value=\"D\">D</option>\n                                <option value=\"D-\">D-</option>\n                            </select>\n                        </div>\n\n                        <div className=\"field\">\n                            <label>Email: </label>\n                            <input \n                                type=\"text\" \n                                name=\"email\"\n                                value= {this.props.player.email}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        <div className=\"button_container\">\n                            <button type=\"submit\" value=\"Submit\" className=\"contrast_color\"> Submit </button>\n                            <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                        </div>\n                    </form>\n                </div> : \n            <div className=\"unfortunately\">\n                <p className=\"no_game\">Login as an admin to add players!</p>\n            </div> }\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tab1,\n    tab2: state.players.tab2,\n    panel1: state.players.panel1,\n    panel2: state.players.panel2,\n    player: state.players.player,\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { addPlayer, editPlayer, resetTabs, updateField }) (Form)","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\nimport { loadState } from '../sessionStorage'\n\nclass MemberList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editMember: true,\n            deleteMember: false,\n        }\n    }\n    \n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        console.log(\"Need a warning that deleting is permanent...\")\n        console.log(\"Active/Inactive?\")\n        // this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"player_table\">\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus === \"Member\").map(player => {\n                            return (\n                                <tr key={player._id} className=\"player_table_row\"> \n                                    <td className=\"player_table_data player_table_name\">{player.name}</td>\n                                    <td className=\"player_table_data player_manage_buttons\"> \n                                        {this.state.editMember === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button>}\n                                        {this.state.deleteMember === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (MemberList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { deletePlayer } from '../../js/actions/playerActions'\nimport { editForm } from '../../js/actions/playerActions'\n\nimport { loadState } from '../sessionStorage'\n\nclass TenBuckerList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editTenBucker: true,\n            deleteTenBucker: false\n        }\n    }\n    componentDidMount() {\n        this.props.fetchPlayers()\n        const privileges = loadState()\n        this.setState(privileges)\n        }\n    \n    deletePlayer(id){\n        this.props.deletePlayer(id)\n    }\n    sendPlayerToEditForm(player){\n        this.props.editForm(player)\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"player_table\">\n                    <tbody>\n                    {this.props.players.filter(player => player.membershipStatus !== \"Member\").map(player => {\n                            return (\n                                <tr key={player._id} className=\"player_table_row\"> \n                                    <td className=\"player_table_data player_table_name\">{player.name}</td>\n                                    <td className=\"player_table_data player_manage_buttons\"> \n                                        {this.state.editTenBucker === true ? <button className=\"content_button darker_color button_space_playerList\" onClick={()=> this.sendPlayerToEditForm(player)}>Edit</button> : <button className=\"content_button light_grey button_space_playerList\"> Edit </button> }\n                                        {this.state.deleteTenBucker === true ? <button className=\"content_button negative_color button_space_playerList\" onClick={()=> this.deletePlayer(player._id)}>Delete</button> : <button className=\"content_button regular_grey button_space_playerList\"> Delete </button> }\n                                    </td>\n                                </tr>)\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    players: state.players.players,\n    player: state.players.player    \n})\n\nexport default connect(mapStateToProps, { fetchPlayers, deletePlayer, editForm }) (TenBuckerList)\n","\nimport React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from '../js/actions/playerActions';\n\nimport NavBar from \"../components/NavBar.js\";\nimport Form from \"../components/PlayerPageComp/Form.js\";\nimport MemberList from \"../components/PlayerPageComp/MemberList.js\"\nimport TenBuckerList from \"../components/PlayerPageComp/TenBuckerList.js\"\n\nclass Player extends Component {\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide_tab\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n        \nrender() {\n    return (\n    <div>\n        <NavBar />\n        <main className=\"main_alternate\">\n            <h1 className=\"h1_alternate\">Players</h1>\n            <table className=\"player_table_head\">\n                <thead>\n                    <tr className=\"tab_centering\">\n                        <th id=\"1\" className={\"tab \" + this.props.tab1} onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Members </th>\n                        <th id=\"2\" className={\"tab \" + this.props.tab2} onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Buckers </th>\n                        <th id=\"3\" className={\"tab \" + this.props.tab3} onClick={() => this.toggleStatus(\"3\", this.props.tab3) }> {this.props.formMode} </th>\n                    </tr>\n                </thead>\n            </table>\n                <section className= \"main_for_tab\">\n                    <span className={this.props.panel1 + \" full_tab_size\"}> <MemberList /> </span> \n                    <span className={this.props.panel2 + \" full_tab_size\"}> <TenBuckerList /> </span> \n                    <span className={this.props.panel3 + \" full_tab_size\"}> <Form /> </span> \n                </section>\n        </main>\n    </div>\n    \n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tab1: state.players.tabs[0],\n    tab2: state.players.tabs[1],\n    tab3: state.players.tabs[2],\n    panel1: state.players.panels[0],\n    panel2: state.players.panels[1],\n    panel3: state.players.panels[2],\n    formMode: state.players.formMode\n})\n\nexport default connect(mapStateToProps, { toggleTabStatus }) (Player)\n","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES, \n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES,\n} from './types';\n\nimport API from \"../../utils/API\"\n\nconst moment = require(\"moment\");\n// need a separate function to fetch games within a time span\nexport const getGamesForRecords = () => dispatch => {\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let arrayOfTenBuckerIDs = []\n                let allTenBuckers= res.data.map(game => game.players.filter(player => player.membershipStatus !== \"Member\"))\n                allTenBuckers.forEach(array => array.map(player => arrayOfTenBuckerIDs.push(player._id)))\n\n                dispatch({\n                    type: GET_GAMES_IN_TIMESPAN,\n                    payload: { \n                        games: res.data,\n                        allTenBuckers: arrayOfTenBuckerIDs\n                    }\n                })\n            }\n        })\n    }\n\n\nexport const toggleVisibility = (currentState) => dispatch => {\n    if (currentState === \"hidden\") {\n        dispatch({\n            type: SHOW_GAMES_TO_STATS\n            })\n        }\n    }\n\nexport const getGamesAndTransform = () => dispatch => {\n    \n    const monthify = (string) => {\n        switch (string) {\n            case \"01\":\n            return string = \"January\"\n            \n            case \"02\":\n            return string = \"February\"\n            \n            case \"03\":\n            return string = \"March\"\n            \n            case \"04\":\n            return string = \"April\"\n            \n            case \"05\":\n            return string = \"May\"\n            \n            case \"06\":\n            return string = \"June\"\n            \n            case \"07\":\n            return string = \"July\"\n            \n            case \"08\":\n            return string = \"August\"\n            \n            case \"09\":\n            return string = \"September\"\n            \n            case \"10\":\n            return string = \"October\"\n            \n            case \"11\":\n            return string = \"November\"\n            \n            case \"12\":\n            return string = \"December\"\n            \n            default: \n            return\n\n        }\n        }\n\n    const yearString = (game) => game.substring(0, 4)\n    const monthString = (game) => game.substring(5,7)\n\n    const beautifyGames = (array) => {\n        let object =\n        array.reduce((difYears,game) => {\n            difYears[yearString(game._id)] = difYears[yearString(game._id)] || [];\n            difYears[yearString(game._id)].push(game);\n            return difYears;\n            },{} \n        )\n        let arrayOfObjects = []\n        for (let i = 0; i < Object.values(object).length; i++) {\n            // for each array of games of the object created by the first reduce\n            let remapped = Object.values(object)[i].reduce((difMonths, game) => {\n                // each game is pushed to a different array under the \"month\"\n                difMonths[monthify(monthString(game._id))] = difMonths[monthify(monthString(game._id))] || [];\n                difMonths[monthify(monthString(game._id))].push(game);\n                return difMonths;\n                },{}\n            )\n            // This separates the months into distinct arrays. We push them in a separate array, \n            // otherwise another year's games might overwrite the data\n            arrayOfObjects.push({[Object.keys(object)[i]]: remapped})\n            }\n            return arrayOfObjects\n        }\n\n    API.getGames()\n        .then(res => {\n            if(res.status !== 200) {\n                throw new Error(res.statusText)\n            }\n            else {\n                let pastGames = res.data.filter(game => game._id <= moment().format(\"YYYY-MM-DD\"))\n                let reducedGames = beautifyGames(pastGames)\n                let years = Object.keys(Object.values(reducedGames)).map(e => [e] = \"visible\")\n                // console.log(\"indexes2: \", years)\n                dispatch({\n                    type: GET_GAMES_AND_TRANSFORM,\n                    payload: \n                        {\n                            game: reducedGames,\n                            visibility: years\n                        }\n                    })\n                }\n            })\n        }\n\nexport const setVisibility = (array) => dispatch => {\n    dispatch({\n            type: SET_YEARS_VISIBILITIES,\n            payload: array\n    })\n}\n\nexport const selectGame = (id) => dispatch => {\n    dispatch({\n        type: ADD_GAME_TO_SELECTED,\n        payload: id\n    })\n}\n\nexport const unselectGame = (game) => dispatch => {\n    dispatch({\n        type: REMOVE_GAME_FROM_SELECTED,\n        payload: game\n    })\n}\n\nexport const selectPlayer = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_TO_SELECTED,\n        payload: {selected: player}\n    })\n}\n\nexport const unselectPlayer = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_FROM_SELECTED,\n        payload: {selected: player}\n    })\n}\n\nexport const toggleViews = (currentStatus, element) => dispatch => {\n    if (currentStatus === \"visible\") {\n        dispatch({\n            type: TOGGLE_RECORDS_VIEWS,\n            payload: {\n                dates: \"hidden\",\n                games: \"hidden\",\n                players: \"hidden\",\n                sort: \"hidden\",\n                chart: \"hidden\"\n            }\n        })}\n    else {\n        switch (element) {\n            case \"dates\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"visible\",\n                    games: \"hidden\",\n                    players: \"hidden\",\n                    sort: \"hidden\",\n                    chart: \"hidden\"\n                }\n            })\n            \n            break;\n            \n            case \"games\":\n                dispatch({\n                    type: TOGGLE_RECORDS_VIEWS,\n                    payload: {\n                        dates: \"hidden\",\n                        games: \"visible\",\n                        players: \"hidden\",\n                        sort: \"hidden\",\n                        chart: \"hidden\"\n                    }\n                })\n            break;\n\n            case \"players\":\n                dispatch({\n                        type: TOGGLE_RECORDS_VIEWS,\n                        payload: {\n                            dates: \"hidden\",\n                            games: \"hidden\",\n                            players: \"visible\",\n                            sort: \"hidden\",\n                            chart: \"hidden\"\n                        }\n                    })\n            break;\n\n            case \"sort\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"hidden\",\n                    games: \"hidden\",\n                    players: \"hidden\",\n                    sort: \"visible\",\n                    chart: \"hidden\"\n                }\n            })\n            break;\n\n            case \"chart\":\n            dispatch({\n                type: TOGGLE_RECORDS_VIEWS,\n                payload: {\n                    dates: \"hidden\",\n                    games: \"hidden\",\n                    players: \"hidden\",\n                    sort: \"hidden\",\n                    chart: \"visible\"\n                }\n            })\n            break;\n\n            default:\n            return\n        }\n    }\n}\n\nexport const addPlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: ADD_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const removePlayerStatObject = (player) => dispatch => {\n    dispatch({\n        type: REMOVE_PLAYER_RECORDS,\n        payload: player\n    })\n}\n\nexport const selectDateRange = (start, end) => dispatch => {\n    if (start === \"Invalid date\") {start = \"2000-01-01\"}\n    if (end === \"Invalid date\") {end = moment().format(\"YYYY-MM-DD\")}\n    dispatch({\n        type: SET_DATE_RANGE,\n        payload: {\n            from: start,\n            to: end\n        }\n    })\n}\n\nexport const toggleSortOptions = (tab, currentStatus, ascArrow) => dispatch => {\n    switch(tab){\n        case \"az\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_AZ_DESC,\n                payload: {\n                    alphaDesc: \"active\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_AZ_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"active\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"selected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"games\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GAMES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"active\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GAMES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"active\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"selected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"wins\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_WINS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"active\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_WINS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"active\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"selected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"losses\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_LOSSES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"active\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_LOSSES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"active\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"selected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        \n        case \"ties\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_TIES_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"active\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_TIES_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"active\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"selected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"goals\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GOALS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"active\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GOALS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"active\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"selected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"gpg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_GPG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"active\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_GPG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"active\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"selected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        \n        case \"assists\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_ASSISTS_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"active\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            }) \n\n        }\n        else {\n            dispatch({\n                type: SORT_ASSISTS_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"active\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"selected_tab\",\n                    apgTab: \"unselected_tab\",\n                }\n            })\n        }\n        break;\n        \n        case \"apg\":\n        if(currentStatus === \"unselected_tab\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        else if (currentStatus === \"selected_tab\" && ascArrow === \"active\") {\n            dispatch({\n                type: SORT_APG_DESC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"active\",\n                    apgAsc: \"inactive\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n\n        }\n        else {\n            dispatch({\n                type: SORT_APG_ASC,\n                payload: {\n                    alphaDesc: \"inactive\",\n                    alphaAsc: \"inactive\",\n                    gamesDesc: \"inactive\",\n                    gamesAsc: \"inactive\",\n                    goalsDesc: \"inactive\",\n                    goalsAsc: \"inactive\",\n                    gpgDesc: \"inactive\",\n                    gpgAsc: \"inactive\",\n                    winsDesc: \"inactive\",\n                    winsAsc: \"inactive\",\n                    lossesDesc: \"inactive\",\n                    lossesAsc: \"inactive\",\n                    tiesDesc: \"inactive\",\n                    tiesAsc: \"inactive\",\n                    assistsDesc: \"inactive\",\n                    assistsAsc: \"inactive\",\n                    apgDesc: \"inactive\",\n                    apgAsc: \"active\",\n                    azTab: \"unselected_tab\",\n                    gamesTab: \"unselected_tab\",\n                    winsTab: \"unselected_tab\",\n                    lossesTab: \"unselected_tab\",\n                    tiesTab: \"unselected_tab\",\n                    goalsTab: \"unselected_tab\",\n                    gpgTab: \"unselected_tab\",\n                    assistsTab: \"unselected_tab\",\n                    apgTab: \"selected_tab\",\n                }\n            })\n        }\n        break;\n\n        default:\n        return\n    }\n\n}\n\nexport const toggleSelectAll = (update) => dispatch => {\n    switch (update) {\n        case \"unselected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"selected_member\"}\n            })    \n        break;\n\n        case \"selected_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"member\",\n                memberSelection: \"unselected_member\"}\n            })    \n        \n        break;\n\n        case \"unselected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"selected_non_member\"}\n            })    \n        break;\n\n        case \"selected_non_member\":\n        dispatch({\n            type: TOGGLE_SELECT_ALL,\n            payload: {\n                player: \"tenBucker\",\n                tenBuckerSelection: \"unselected_non_member\"}\n            })    \n        break;\n\n        default:\n        return;\n    }\n}\n\nexport const batchCardUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CARD_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchChartUpdate = (newData) => dispatch => {\n    dispatch({\n        type: BATCH_CHART_UPDATE,\n        payload: newData\n    })\n}\n\nexport const batchUnselect = (type) => dispatch => {\n    dispatch({\n        type: BATCH_UNSELECT,\n        payload: type\n    })\n}\n\n// this handles when games are removed after the players. In this case, data needs to be re-initiated\n// we recreate the array of players\nexport const updatePlayers = (players) => dispatch => {\n    dispatch({\n        type: REPLACE_PLAYERS_RECORDS,\n        payload: players\n    })\n}\n// data is sent to the modal in showcase.js\nexport const togglePlayerModal = (newStatus, data) => dispatch => {\n    dispatch({\n        type: TOGGLE_PLAYER_MODAL,\n        payload: {\n            status: newStatus,\n            data: data\n        }\n    })\n}\n\nexport const selectAllGames = (status) => dispatch => {\n    dispatch({\n        type: BATCH_GAMES,\n        payload: status,\n    })\n}\n\nexport const unselectAllGames = () => dispatch => {\n    dispatch({\n        type: UNSELECT_ALL_GAMES,\n    })\n}\n\nexport const filterPlayerRecordsByType = (object) => dispatch => {\n    let operator;\n    let playerType;\n\n    if (object.offense === \"unselected\") {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"null\";\n                playerType = \"null\";\n            }\n            else {\n                operator = \"only\";\n                playerType = \"Goalie\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Defense\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Forward\"\n            }\n        }\n    }\n    else {\n        if (object.defense === \"unselected\") {\n            if (object.goalie === \"unselected\") {\n                operator = \"only\";\n                playerType = \"Forward\";\n            }\n            else {\n                operator = \"but\";\n                playerType = \"Defense\";\n            }\n        }\n        else {\n            if (object.goalie === \"unselected\") {\n                operator = \"but\"\n                playerType = \"Goalie\"\n            }\n            else {\n                operator = \"null\"\n                playerType = \"null\"\n            }\n        }\n\n    }\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_TYPE,\n        payload: {\n            operator: operator,\n            playerType: playerType,\n            playerFilters: object\n        }\n    })\n}\n\nexport const filterPlayerRecordsByGames = (object) => dispatch => {\n    console.log(\"object received in filterGames statsActions.js: \", object)\n    dispatch({\n        type: FILTER_PLAYER_RECORDS_BY_GAMES,\n        payload: object\n        })\n}","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGame } from '../../js/actions/gameActions'\nimport { getGamesAndTransform } from '../../js/actions/statsActions'\nimport { setVisibility } from '../../js/actions/statsActions'\n\nimport _ from \"underscore\"\n\nclass PastGameList extends Component {\n\n    componentDidMount() {\n        this.props.getGamesAndTransform();\n    }\n\n    toggleVisibility(currentStatus, num){\n        let newStatus;\n        if (currentStatus === \"visible\") {newStatus = \"hidden\"}\n        else { newStatus = \"visible\" }\n        \n        let visibleBefore = this.props.gameVisibility.slice(0, num)\n        let visibleAfter = this.props.gameVisibility.slice(num + 1)\n        let newArray = [...visibleBefore, newStatus, ...visibleAfter]\n        \n        this.props.setVisibility(newArray)\n        }\n\n    getGameInfo = (gameId) => {\n        this.props.getGame(gameId);\n        }\n\n    renderGames(object) {\n        return Object.values(object).map((game, i) => {\n            return (\n                    <button key={game._id} className=\"past_game_button contrast_color\" onClick={()=> this.getGameInfo(game._id)}> {game._id} </button>\n                )\n            })\n        }\n\n    renderMonth(object) {\n        return Object.entries(Object.values(object)[0]).map(([key, value], i) => {\n            return (\n                <div key= {i}>\n                    <h3 className=\"h3_alternate\">{key}:</h3>\n                    <div className=\"month_game_played\">\n                        {this.renderGames(value)}\n                    </div>\n                </div>\n                )\n            })\n        }\n    \n    \n    renderYear(object) {\n        let reOrderedArray = _.sortBy(Object.values(object)).reverse()\n        return reOrderedArray.map((year, i) => {\n            return (\n                <div key={i}>\n                    <div>\n                        <h3 className=\"h3_main\">{ Object.keys(year)}</h3> \n                        <div className=\"hide_year_button\" onClick={()=> this.toggleVisibility(this.props.gameVisibility[i], i)}> {this.props.gameVisibility[i] === \"visible\" ? \"[hide]\" : \"[show]\" }</div>\n                    </div>\n                    <div className={this.props.gameVisibility ? this.props.gameVisibility[i] : null + \" games_per_year\"}>\n                        {this.renderMonth(year)} \n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"list_of_games\">\n                    <div>\n                        {this.renderYear(this.props.reducedGames)}\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    reducedGames: state.stats.reducedGames,\n    gameVisibility: state.stats.gameVisibility\n})\n\n// export default GameList;\nexport default connect(mapStateToProps, { getGamesAndTransform, setVisibility, getGame }) (PastGameList)\n","import React, {Component} from 'react';\n\nimport { connect } from 'react-redux';\nimport { editGameInfo } from '../../js/actions/gameActions'\n// import { deletePlayer } from '../../../js/actions/playerActions'\n// import { editForm } from '../../../js/actions/playerActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { loadState } from \"../sessionStorage\"\n\nimport Locker from \"../Locker.js\"\n\nclass ScoreBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            editScore: true,\n            changeLock: true\n        }\n    }\n    componentDidMount() {\n        const privileges = loadState()\n        console.log(\"Data from SessionStorage: \", privileges )\n        this.setState(privileges)\n    }\n    \n    logStat(playerID, type, currentValue){\n        let gameId = this.props.game._id\n        switch (type){\n            case \"add_goal_dark\":\n            let goalUpdate = currentValue + 1;\n            let scoreUpdate = this.props.game.goals_dark + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_white:\n                this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_white:\n                this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"add_goal_white\":\n            goalUpdate = currentValue + 1;\n            scoreUpdate = this.props.game.goals_white + 1;\n            switch (true) {\n                case scoreUpdate > this.props.game.goals_dark:\n                this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate < this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                break;\n\n                case scoreUpdate === this.props.game.goals_dark:\n                this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                break;\n\n                default:\n                return\n            }\n            break;\n\n            case \"substract_goal_dark\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_dark - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0) {\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_white:\n                    this.props.editGameInfo(gameId,{goals_dark: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_white:\n                    this.props.editGameInfo(gameId, {goals_dark: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                    }\n                }\n            break;\n\n            case \"substract_goal_white\":\n            goalUpdate = currentValue - 1;\n            scoreUpdate = this.props.game.goals_white - 1;\n            if (goalUpdate >= 0 && scoreUpdate >= 0){\n                switch (true) {\n                    case scoreUpdate > this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId,{goals_white: scoreUpdate, win: \"White\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate < this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Dark\", playerUpdate: {player: playerID, gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    case scoreUpdate === this.props.game.goals_dark:\n                    this.props.editGameInfo(gameId, {goals_white: scoreUpdate, win: \"Tie\", playerUpdate: {player: playerID,gameInfo: {goals: goalUpdate}}})\n                    break;\n    \n                    default:\n                    return\n                }\n                }\n            break;\n\n            case \"add_assist\":\n            let assistUpdate = currentValue + 1;\n            this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n            break;\n\n            \n            case \"substract_assist\":\n            assistUpdate = currentValue - 1;\n            if (assistUpdate >= 0){\n                this.props.editGameInfo(gameId, {player: playerID, gameInfo: {assists: assistUpdate}})\n                }\n            break;\n\n            default:\n            return;\n        }\n\n    }\n\n    render() {\n        return (\n            <span className=\"full\">\n                <div>\n                    <h1 className=\"h1_main\">{this.props.game._id}</h1>\n                    <div className=\"tables_container\">\n                        <div className=\"table_container\">\n                            <h1 className=\"h1_alternate\">Dark<br/>{this.props.game.goals_dark}</h1>\n                            <table>\n                                <thead>\n                                    <tr className=\"score_header_tr\">\n                                        <th className=\"table_col_name\">Player</th> \n                                        <th className=\"table_col_name\">Goals</th>\n                                        <th className=\"table_col_name\">Assists</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.players ? (this.props.players\n                                        .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"Dark\")\n                                        .map(player => {\n                                            return (\n                                                <tr className=\"stats_row\" key={player._id}> \n                                                    <td className=\"player_stats stats_name\">{player.name}\n                                                    </td>\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_dark\",player.gameInfo.goals)} /> : null }\n                                                            <div className={player.gameInfo.goals > 0 ? \"nice data\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"darker_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_dark\",player.gameInfo.goals)} />  : null }\n                                                        </div>\n                                                    </td>\n\n                                                    <td className=\"player_stats stats_data\">\n                                                        <div className=\"stats\">\n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} />  : null }\n                                                            <div className={player.gameInfo.assists > 0 ? \"good data\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                            {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" className={\"lighter_icon stats_icon \" + this.props.lockStatus}  onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                        </div>\n                                                    </td>\n                                                </tr>\n                                                )\n                                            })\n                                        ) : null\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"table_container\">\n                                <h1 className=\"h1_alternate\">White<br/>{this.props.game.goals_white}</h1>\n                                <table className=\"score_table\">\n                                    <thead>\n                                        <tr className=\"score_header_tr\">\n                                            <th className=\"table_col_name\">Player</th> \n                                            <th className=\"table_col_name\">Goals</th>\n                                            <th className=\"table_col_name\">Assists</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.props.players ? (this.props.players\n                                            .filter(player => player.gameInfo.available === true && player.gameInfo.team === \"White\")\n                                            .map(player => {\n                                                return (\n                                                    <tr className=\"stats_row\" key={player._id}> \n                                                        <td className=\"player_stats stats_name\">{player.name}\n                                                        </td>\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_goal_white\",player.gameInfo.goals)} /> : null }\n                                                                <div className={player.gameInfo.goals > 0 ? \"nice data\" : null + \" data\"}>{player.gameInfo.goals}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"darker_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_goal_white\",player.gameInfo.goals)} /> : null }\n                                                            </div>\n                                                        </td>\n\n                                                        <td className=\"player_stats stats_data\">\n                                                            <div className=\"stats\">\n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"plus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"add_assist\",player.gameInfo.assists)} /> : null }\n                                                                <div className={player.gameInfo.assists > 0 ? \"good data\" : null + \" data\"}>{player.gameInfo.assists}</div> \n                                                                {this.state.editScore === true ? <FontAwesomeIcon icon=\"minus-circle\" size=\"2x\" className={\"lighter_icon \" + this.props.lockStatus} onClick={()=> this.logStat(player._id,\"substract_assist\",player.gameInfo.assists)} /> : null }\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                    )\n                                                })\n                                            ) : null\n                                            }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>    \n                    </div>    \n                {this.state.changeLock === true ? <Locker /> : null }\n        </span>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    game: state.games.draft,\n    players: state.games.draft.players,\n    lockStatus: state.games.lockStatus\n\n})\n\nexport default connect(mapStateToProps, { editGameInfo }) (ScoreBoard)\n","import React, { Component } from 'react';\n\nclass NoStatsBoard extends Component {\n    render(){\n        return (\n            <div className=\"no_stats_message\">\n                <p className=\"no_game\">The teams for this game have not been drafted yet. Please come back later!\n                </p>    \n            </div>\n        )\n    }\n}\n\nexport default NoStatsBoard;\n","import React, { Component } from \"react\";\n\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleVisibility } from \"../js/actions/statsActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport PastGameList from \"../components/StatsPageComp/PastGamesList.js\"\nimport ScoreBoard from \"../components/StatsPageComp/ScoreBoard.js\"\nimport NoStatsBoard from \"../components/StatsPageComp/NoStatsBoard.js\"\n\nclass Stats extends Component {         \nrender() {\n    return (\n        <div>\n            <NavBar />\n            <main>\n                <section className=\"main_main\">\n                    <h1 className=\"h1_main\">Enter Stats</h1>\n                    <PastGameList />\n                </section>\n                {this.props.visibility.noStatsMessage === \"visible\" ? \n                (<section className={\"main_main \" + this.props.visibility.noStatsMessage}>\n                    <NoStatsBoard />\n                </section>) : \n                (<section className={\"main_main \" + this.props.visibility.gameStats}>\n                    <ScoreBoard />\n                </section>)}\n            </main>\n        </div>\n        )\n    }\n}\n\n// export default Stats\nconst mapStateToProps = state => ({\n    visibility: state.games.visibility,\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleVisibility } ) (Stats)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n// see doc: https://www.npmjs.com/package/react-datepicker\nimport DatePicker from \"react-datepicker\";\nimport { selectDateRange } from \"../../js/actions/statsActions\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nconst moment = require(\"moment\");\nclass DateRange extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n        this.handleChangeStart = this.handleChangeStart.bind(this);\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChangeStart(date) {\n        this.setState({\n            startDate: date\n        })\n    }\n\n    handleChangeEnd(date) {\n        this.setState({\n            endDate: date\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        let startDate = moment(this.state.startDate).format(\"YYYY-MM-DD\")\n        let endDate = moment(this.state.endDate).format(\"YYYY-MM-DD\")\n        this.props.selectDateRange(startDate, endDate)\n    }\n\n\n    render() {\n        return (\n            <div className={\"records_calendar \" + this.props.datePickers}>\n                <div className=\"calendar_alignment\">\n                    <form onSubmit={this.handleSubmit} >\n                        <div id=\"in-line\">\n                        <DatePicker\n                            placeholderText=\"From: MM DD YYYY\"\n                            selected={this.state.startDate}\n                            selectsStart\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeStart}\n                            isClearable={true}\n                        />\n\n                        <DatePicker\n                            placeholderText=\"To:     MM DD YYYY\"\n                            selected={this.state.endDate}\n                            selectsEnd\n                            startDate={this.state.startDate}\n                            endDate={this.state.endDate}\n                            onChange={this.handleChangeEnd}\n                            isClearable={true}\n                        />\n                            <div className=\"date_range_options\">\n                                <button id=\"range_submit\" className=\"content_button btn contrast_color\" name=\"submit\" type=\"submit\" >Submit</button>\n                            </div>\n\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    datePickers: state.stats.datePickers\n    })\n\n\nexport default connect(mapStateToProps, { selectDateRange }) (DateRange)\n    ","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport DateRange from \"./DateRange\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass DateSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"dates\")\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.datePickers)}> {this.props.datePickers === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Dates</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <div className={\"date_pickers \" + this.props.datePickers}>\n                            <div className={\"calendar_container \" + this.props.datePickers}>\n                                <DateRange />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    allGames: state.stats.gamesForRecords,\n    datePickers: state.stats.datePickers,\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, toggleViews }) (DateSelector)\n","export const createCardsArray = (arrayOfPlayers, arrayOfGames) => {\n    // we do not want to fire the function if either array is empty\n    if (arrayOfGames.length > 0 && arrayOfPlayers.length > 0) {\n        // array to store the info\n        let transformedArrayForCards = [];\n        // for each player in the array\n        arrayOfPlayers.forEach((broomballer) => {\n            // we map/filter all games selected to create record for each game played.\n    \n            // if the player didn't play any game, we create an empty \"N/A\" record instead (otherwise misleading)\n            let gamesPlayed = arrayOfGames.filter(game => game.players.filter(player => player._id === broomballer._id)[0])\n            // if the broomballer played any game\n            if (gamesPlayed.length > 0) {\n                let playerReduced = gamesPlayed.reduce((players, game) => {\n                    // variable to access \"game info\" of each player for each game\n                    let gameInfo = game.players.filter(player => player._id === broomballer._id).map(player => player.gameInfo)\n                    let win;\n                    let available;\n    \n                    players.name = broomballer.name\n                    players._id = broomballer._id\n                    players.membershipStatus = broomballer.membershipStatus\n                    players.preferredPosition = broomballer.preferredPosition\n                    \n                    players.gamesPlayed = players.gamesPlayed || []\n                    if(gameInfo[0].available === true){\n                        available = 1\n                        players.gamesPlayed.push(available)\n                    }\n                    \n                    players.goals = players.goals || []\n                    if(gameInfo[0].available === true) {\n                        players.goals.push(gameInfo[0].goals)\n                    }\n                    \n                    players.assists = players.assists || []\n                    if (gameInfo[0].available === true) {\n                        players.assists.push(gameInfo[0].assists)\n                    }\n                    \n                    players.wins = players.wins || []\n                    if(gameInfo[0].available === true && game.win === gameInfo[0].team){\n                        win= \"Win\"\n                        players.wins.push(win)\n                    }\n    \n                    players.losses = players.losses || []\n                    if(gameInfo[0].available === true && game.win !== \"Tie\" && game.win !== gameInfo[0].team){\n                        let loss= \"Loss\"\n                        players.losses.push(loss)\n                    }\n    \n                    players.ties = players.ties || []\n                    if(gameInfo[0].available === true && game.win === \"Tie\"){\n                        let tie= \"Tie\"\n                        players.ties.push(tie)\n                    }\n                \n                    return players\n                    }, {});\n                    \n                let gamePlayedFromArray = playerReduced.gamesPlayed ? playerReduced.gamesPlayed.length : 0 \n                let winsFromArray = playerReduced.wins.length\n                let lossesFromArray = playerReduced.losses.length\n                let tiesFromArray = playerReduced.ties.length\n                let winPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.wins.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let lossPercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.losses.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let tiePercent = gamePlayedFromArray > 0 ? Math.floor((playerReduced.ties.length / playerReduced.gamesPlayed.length) * 100) : \"N/A\"\n                let goalsFromArray = playerReduced.goals ? playerReduced.goals.reduce((a,b) => a + b, 0) : 0\n                let assistsFromArray = playerReduced.assists ? playerReduced.assists.reduce((a, b) => a + b, 0) : 0\n                let gpg = gamePlayedFromArray > 0 ? parseFloat((goalsFromArray / gamePlayedFromArray)) : \"N/A\"\n                let apg = gamePlayedFromArray > 0 ? parseFloat((assistsFromArray / gamePlayedFromArray)) : \"N/A\"\n    \n                playerReduced.gamesPlayed = gamePlayedFromArray\n                playerReduced.wins = winsFromArray\n                playerReduced.losses = lossesFromArray\n                playerReduced.ties = tiesFromArray\n                playerReduced.winPercent = winPercent\n                playerReduced.lossPercent = lossPercent\n                playerReduced.tiePercent = tiePercent\n                playerReduced.goals = goalsFromArray \n                playerReduced.assists = assistsFromArray\n                if (gpg !== \"N/A\") { playerReduced.gpg = Number.isInteger(gpg) ? gpg : gpg.toFixed(3) } else {playerReduced.gpg = gpg} \n                if (apg !== \"N/A\") { playerReduced.apg = Number.isInteger(apg) ? apg : apg.toFixed(3) } else {playerReduced.apg = apg} \n                \n                transformedArrayForCards.push(playerReduced)\n            } else {\n                let playerWithoutRecord = {\n                    name: broomballer.name,\n                    gamesPlayed: 0,\n                    goals: \"N/A\",\n                    assists: \"N/A\",\n                    membershipStatus: broomballer.membershipStatus,\n                    winPercent: \"N/A\",\n                    lossPercent: \"N/A\",\n                    tiePercent: \"N/A\",\n                    win: \"N/A\",\n                    loss: \"N/A\",\n                    tie: \"N/A\",\n                    gpg: \"N/A\",\n                    apg: \"N/A\",\n                    _id: broomballer._id\n                }\n                transformedArrayForCards.push(playerWithoutRecord)\n            }\n        })\n        return transformedArrayForCards;\n    }\n};\n\nexport const createChartData = (arrayOfCards) => {\n    let labels = []\n    let goalsArray = []\n    let assistsArray = []\n    let gamesPlayedArray = []\n    let winPercentArray = []\n    let lossPercentArray = []\n    let tiePercentArray = []\n    let gpgArray = []\n    let apgArray = []\n    arrayOfCards.forEach(e => {\n        labels.push(e.name);\n        goalsArray.push(e.goals);\n        assistsArray.push(e.assists);\n        gamesPlayedArray.push(e.gamesPlayed);\n        winPercentArray.push(e.winPercent);\n        lossPercentArray.push(e.lossPercent);\n        tiePercentArray.push(e.tiePercent);\n        gpgArray.push(e.gpg);\n        apgArray.push(e.apg);\n    })\n    \n    let chartObject = {\n        labels: labels,\n        // For performance reason, it is better to re-initiate the data than to use the ... operator to merge new with existing\n        datasets: [\n            {\n                label: \"Goals\",\n                data: goalsArray,\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: \"Assists\",\n                data: assistsArray,\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Games\",\n                data: gamesPlayedArray,\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Wins (%)\",\n                data: winPercentArray,\n                backgroundColor: 'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                hoverBorderColor: 'rgba(75,192,192,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Losses (%)\",\n                data: lossPercentArray,\n                backgroundColor: '#d3b8ae',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#d3b8ae',\n                hoverBorderColor: '#d3b8ae',\n                barThickness: 15,\n            },\n            {\n                label: \"Ties (%)\",\n                data: tiePercentArray,\n                backgroundColor: '#ff8a65',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#ff8a65',\n                hoverBorderColor: '#ff8a65',\n                barThickness: 15,\n            },\n            {\n                label: \"GPG\",\n                data: gpgArray,\n                backgroundColor: 'rgba(153,102,255,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                hoverBorderColor: 'rgba(153,102,255,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"APG\",\n                data: apgArray,\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                options: {barThickness: 100},\n            },\n            ]\n        }\n        return chartObject;\n    }","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { getGamesForRecords } from '../../js/actions/statsActions'\nimport { selectGame } from '../../js/actions/statsActions'\nimport { unselectGame } from '../../js/actions/statsActions'\nimport { selectAllGames } from '../../js/actions/statsActions'\nimport { unselectAllGames } from '../../js/actions/statsActions'\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { updatePlayers } from '../../js/actions/statsActions'\nimport { batchChartUpdate } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { createCardsArray } from \"./curateData\"\nimport { createChartData } from \"./curateData\"\nclass GameSelector extends Component {\n\n    componentDidMount() {\n        this.props.getGamesForRecords();\n    }\n\n    unselectGame(game) {\n        // marks the game as unselected\n        this.props.unselectGame(game)\n        let arrayOfGames = this.props.selectedGames.filter(match => match._id !== game._id)\n        let cardsArray = createCardsArray(this.props.selectedPlayers, arrayOfGames)\n        this.props.updatePlayers( cardsArray )\n        \n        if (arrayOfGames.length > 0) {\n            // createChartData( cardsArray )\n\n            let newObject = createChartData(cardsArray)\n            this.props.batchChartUpdate(newObject)\n\n        } else {\n            console.log(\"All games have been unselected\")\n        }\n    }\n\n    gameSelection(arrayOfGames) {\n        // marks the selected games as such \n        arrayOfGames.forEach(game => this.markAsSelected(game))\n        let cardsArray = createCardsArray(this.props.selectedPlayers, arrayOfGames)\n        this.props.updatePlayers( cardsArray )\n        \n        if (this.props.selectedPlayersNum > 0) {\n            let newObject = createChartData( cardsArray )\n            this.props.batchChartUpdate(newObject)\n        } else {\n            // if no game is selected, have to wipe the chartData\n            console.log(\"No player selected\")\n        }\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"games\")\n    }\n\n    selectAllGames(status){\n        this.props.selectAllGames(status)\n        // we send the whole array of games in the time span to the gameSelection function\n        this.gameSelection(this.props.gamesForRecords)\n        \n    }\n    unselectAllGames(){\n        this.props.unselectAllGames()\n        this.props.gamesForRecords.forEach(game => this.props.unselectGame(game))\n        this.gameSelection([])\n    }\n    // When we hit the \"Select All Games\", we need to make sure the game has not already been selected\n    // otherwise it might be sent twice \n    markAsSelected(game) {\n        let arrayOfIds = this.props.selectedGames.map(gamesSelected => gamesSelected._id)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.selectGame(game)\n        }\n    }\n\n    markAsUnselected(game) {\n        let arrayOfIds = this.props.unselectedGames.map(gamesUnselected => gamesUnselected._id)\n        console.log(\"ids of games already unselected: \", arrayOfIds)\n        if ( !arrayOfIds.includes(game._id) ){\n            this.props.unselectGame(game)\n        }\n    }\n\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfGames)}> {this.props.listOfGames === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Games</h3>\n                        </div>\n                    </div>\n                    <div className={this.props.listOfGames + \" content \"}>\n                        <div className={this.props.listOfGames + \" select_all\"}>\n                            <div className=\"button_options_third_set\">\n                                {this.props.allGamesSelection === \"unselected_game\" ? \n                                    <button className={\"record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.selectAllGames(this.props.allGamesSelection)}> Games <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>\n                                    :\n                                    <button className={\"record_game_button all_button \" + this.props.allGamesSelection} onClick={() => this.unselectAllGames()}> Games <FontAwesomeIcon icon=\"times\" className=\"game_action_icon\"/> </button>\n                                }\n                            </div>\n                            \n                        </div>\n\n                        <div className={\"record_list_of_games \" + this.props.listOfGames}>\n                                {this.props.gamesForRecords.length > 0 ?\n                                    this.props.gamesForRecords\n                                    .map(game => this.props.selectedGames.indexOf(game) === -1 ? \n                                    (<button key={game._id} className=\"unselected_game record_game_button\" onClick={() => this.gameSelection([game, ...this.props.selectedGames])}> {game._id} <FontAwesomeIcon icon=\"plus\" className=\"game_action_icon\"/> </button>)\n                                    : \n                                    (<button key={game._id} className=\"selected_game record_game_button\" onClick={() => this.unselectGame(game)}> {game._id} <FontAwesomeIcon icon=\"times\" className=\"game_action_icon\"/> </button>)\n                                )\n                                : <p className=\"no_game\">There is currently no game to display</p> \n                            }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    selectedPlayersNum: state.stats.selectedPlayers ? state.stats.selectedPlayers.length : 0,\n    unselectedGames: state.stats.unselectedGames,\n    gamesForRecords: state.stats.gamesForRecords, \n    listOfGames: state.stats.listOfGames, // to toggle the visibility\n    chartData: state.stats.chartData,\n    allGamesSelection: state.stats.allGamesSelection\n})\n\nexport default connect(mapStateToProps, { getGamesForRecords, selectGame, unselectGame, selectAllGames, unselectAllGames, toggleViews, updatePlayers, batchChartUpdate }) (GameSelector)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { fetchPlayers } from '../../js/actions/playerActions'\nimport { selectPlayer } from '../../js/actions/statsActions'\nimport { unselectPlayer } from '../../js/actions/statsActions'\n// This adds a player to the playerRecords array\nimport { addPlayerStatObject } from \"../../js/actions/statsActions\"\nimport { removePlayerStatObject } from \"../../js/actions/statsActions\"\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { toggleSelectAll } from '../../js/actions/statsActions'\n// this replaces all the records in the playerRecords array\nimport { updatePlayers } from '../../js/actions/statsActions'\n// this merges newly created records with already existing records in the playerRecords array\nimport { batchCardUpdate } from '../../js/actions/statsActions'\n// this is used to send data to the chartData object from which data is pulled to create the chart\nimport { batchChartUpdate } from '../../js/actions/statsActions'\nimport { batchUnselect } from '../../js/actions/statsActions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { createCardsArray } from \"./curateData\"\nimport { createChartData } from \"./curateData\"\n\nclass PlayerSelector extends Component {\n\n    componentDidMount() {\n        this.props.fetchPlayers();\n    }\n    // unselect individual players (by way of slicing the existing arrays of data)\n    unselectPlayer(player) {\n        this.props.unselectPlayer(player)\n        this.props.removePlayerStatObject(player)\n        if ( this.props.selectedGamesNum > 0 ) {\n            let newObject = createChartData(this.props.selectedPlayers.filter(broomballer => broomballer._id !== player._id ))\n            this.props.batchChartUpdate(newObject)\n        } else {\n            console.log(\"Handle case: \\nPlayer is removed, no game selected\")\n        }\n    }\n    \n    selectPlayer(broomballer) {\n        this.markAsSelected(broomballer)\n        let cardsArray = createCardsArray(this.props.selectedPlayers.concat(broomballer), this.props.selectedGames)\n        this.props.updatePlayers( cardsArray )\n        this.addBatchChartData( cardsArray )\n    }\n\n    toggleViews(currentStatus){\n        this.props.toggleViews(currentStatus, \"players\")\n    }\n    // calling the \"individual\" functions repeatedly makes redux (and redux devtool) fail & Chrome lag. For this reason, we create separate functions that will handle updates on the whole array. \n    // This dispatcher sends data to the function that will handle it.\n    selectAllPlayers(playerUpdate){\n        switch (playerUpdate) {\n            case \"unselected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // we need to add both all members + non-members already selected for we are going to replace all existing records\n            let allMembersAndSelectedTenBuckers = this.props.allPlayers.filter(player => player.membershipStatus === \"Member\").concat(this.props.selectedPlayers.filter(player => player.membershipStatus !== \"Member\"))\n            this.selectAndTransform(allMembersAndSelectedTenBuckers, \"select\")\n            break;\n\n            case \"selected_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Member\")\n            break;\n\n            case \"unselected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            // Adding both all ten buckers (who have played one of possible games) + non-members already selected\n            let allTenBuckersAndSelectedMembers = this.props.allPlayers.filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id)).concat(this.props.selectedPlayers.filter(player => player.membershipStatus === \"Member\"))\n            this.selectAndTransform(allTenBuckersAndSelectedMembers, \"select\")\n            break;\n\n            case \"selected_non_member\":\n            this.props.toggleSelectAll(playerUpdate)\n            this.batchUnselect(\"Ten Bucker\")\n            break;\n\n            default:\n            return;\n        }\n    }\n    // this function marks all players in the array as selected (via this.markAsSelected), creates an array of objects in the playerRecords reducer, \n    // and sends data to be handled by setChartData accordingly (=> selected players are created properly for Chartjs package)\n    selectAndTransform(arrayOfPlayers, type) {\n        if (type === \"select\") {\n            arrayOfPlayers.forEach(broomballer => this.markAsSelected(broomballer))\n        }\n        let cardsArray = createCardsArray(arrayOfPlayers, this.props.selectedGames)\n        if (type === \"select\") {\n            this.props.updatePlayers( cardsArray )\n            this.addBatchChartData( cardsArray )\n            }\n        else if (type === \"unselect\") {\n            this.addBatchChartData( cardsArray )\n        }\n    }\n\n    // this handles unselecting players depending on the membership type sent\n    batchUnselect(type){\n        this.props.batchUnselect(type);\n        this.props.selectedPlayers.filter(player => player.membershipStatus === type).forEach(broomballer => this.unselectPlayer(broomballer));\n        this.selectAndTransform(this.props.selectedPlayers.filter(player => player.membershipStatus !== type), \"unselect\")\n    }\n\n    addBatchChartData(arrayOfPlayers) {\n        if ( this.props.selectedGamesNum > 0 ) {\n            let newObject = createChartData(arrayOfPlayers)\n            this.props.batchChartUpdate(newObject)\n        }\n    }\n\n    // Before sending the player to the selectPlayer action that will add it to the selectedPlayers array, we need to make sure the record does not already exist\n    // in that array (we might accidentally send twice via the batch select that consolidates before re-sending to playerRecords array). Otherwise, it creates \n    // problems with duplicate keys in React\n    markAsSelected(player) {\n        let arrayOfIds = this.props.selectedPlayers.map(broomballer => broomballer._id)\n        if ( !arrayOfIds.includes(player._id) ){\n            this.props.selectPlayer(player)\n        }\n    }\n    render() {\n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3\" onClick={()=> this.toggleViews(this.props.listOfPlayers)}> {this.props.listOfPlayers === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Select Players</h3>\n                        </div>\n                    </div>\n                    <div className=\"content \">\n                    {/* <div className={this.props.listOfPlayers + \" content \"}> */}\n                        <div className={this.props.listOfPlayers + \" select_all\"}>\n                            <div className=\"button_options_first_set\">\n                                <button className={\"record_player_button all_button \" + this.props.memberSelection} onClick={() => this.selectAllPlayers(this.props.memberSelection)}> Members {this.props.memberSelection === \"unselected_member\" ? <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> : <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/>}</button>\n                                <button className={\"record_player_button all_button \" + this.props.tenBuckerSelection} onClick={() => this.selectAllPlayers(this.props.tenBuckerSelection)}> Ten Buckers {this.props.tenBuckerSelection === \"unselected_non_member\" ? <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> : <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/>}</button>\n                            </div>\n                            \n                        </div>\n                        <div className={\"list_of_players \" + this.props.listOfPlayers}>\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus === \"Member\")\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"unselected_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"selected_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                                {this.props.allPlayers.length > 0 ?\n                                    this.props.allPlayers\n                                    .filter(player => player.membershipStatus !== \"Member\" && this.props.arrayOfTenBuckersID.includes(player._id))\n                                    .map(player => this.props.selectedPlayers.indexOf(player) === -1 ? \n                                    (<button key={player._id} className=\"unselected_non_member record_player_button\" onClick={() => this.selectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"plus\" className=\"player_action_icon\"/> </button>)\n                                    : \n                                    (<button key={player._id} className=\"selected_non_member record_player_button\" onClick={() => this.unselectPlayer(player)}> {player.name} <FontAwesomeIcon icon=\"times\" className=\"player_action_icon\"/> </button>)\n                                ) : <p className=\"no_game\">There is currently no player to display</p> \n                                }\n                        </div>\n                    </div>\n                </div>\n                )\n            }\n        }\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    selectedGamesNum: state.stats.selectedGames ? state.stats.selectedGames.length : 0,\n    selectedPlayers: state.stats.selectedPlayers,\n    selectedPlayersNum: state.stats.selectedPlayers ? state.stats.selectedPlayers.length : 0,\n    unselectedPlayers: state.stats.unselectedPlayers,\n    memberSelection: state.stats.memberSelection,\n    tenBuckerSelection: state.stats.tenBuckerSelection,\n    allPlayers: state.players.players,\n    arrayOfTenBuckersID: state.stats.arrayOfTenBuckersID,\n    listOfPlayers: state.stats.listOfPlayers,\n    chartData: state.stats.chartData,\n})\n\nexport default connect(mapStateToProps, {   \n        fetchPlayers, \n        selectPlayer, \n        unselectPlayer, \n        toggleViews, \n        addPlayerStatObject, \n        removePlayerStatObject, \n        // sendDataToChart, \n        toggleSelectAll, \n        batchCardUpdate, \n        batchChartUpdate, \n        batchUnselect, \n        updatePlayers \n    }) (PlayerSelector)\n","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nimport { Line } from \"react-chartjs-2\";\n\nimport { connect } from 'react-redux';\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\n\nclass PlayerStatsModal extends Component {\n    \n    render() {\n        return (\n            <div className=\"player_modal\">\n                <Modal isOpen={this.props.playerModal} toggle={this.toggle} centered={true} size={\"lg\"}>\n                    <ModalHeader className=\"modal_header\"> {this.props.playerModalData.name} </ModalHeader>\n                    <ModalBody>\n                        <Line\n                            data={this.props.playerModalData.data}\n                            options={{\n                                    responsive: true,\n                                    maintainAspectRatio: false,\n                                    }}\n                            />\n                    </ModalBody>\n                    <ModalFooter>\n                        <button className=\"contrast_color content_button\" onClick={()=> this.props.togglePlayerModal(false, {name: \"\", data:{}})}> Close </button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    playerModal: state.stats.playerModal,\n    playerModalData: state.stats.playerModalData\n})\n\nexport default connect(mapStateToProps, { togglePlayerModal }) (PlayerStatsModal)\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { toggleViews } from \"../../js/actions/statsActions\"\nimport { toggleSortOptions } from \"../../js/actions/statsActions\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { togglePlayerModal } from \"../../js/actions/statsActions\"\nimport PlayerStatsModal from \"./PlayerStatsModal\"\n\nimport _ from \"underscore\"\n\n\nclass Showcase extends Component {\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    toggleSort(tab, currentStatus, ascArrow){\n        this.props.toggleSortOptions(tab, currentStatus, ascArrow)\n    }\n    // Stats in Modal\n    showPlayerStats(playerName, playerID){\n        // we need to filter games that the player has played to show relevant stats\n        // we have sorted the gamesSelected array chronologically for convenience\n        let playerStats = this.props.gamesInChronoOrder.reduce((broomballer, game) => {\n            broomballer.name = playerName\n            broomballer.gamesPlayed = broomballer.gamesPlayed || []\n            broomballer.goals = broomballer.goals || []\n            broomballer.assists = broomballer.assists || []\n            if (game.players.filter(player => player._id === playerID && player.gameInfo.available === true).length !== 0) {\n                broomballer.gamesPlayed.push(game._id)\n                // we filter the array of players with the matching ID (it creates a remapped array of one element if applicable, \n                // gameInfo, therefore the data we want is at index 0 of gameInfo)\n                let gameInfo = game.players.filter(player => player._id === playerID).map(player => player.gameInfo)\n                broomballer.goals.push( gameInfo[0].goals )\n                broomballer.assists.push( gameInfo[0].assists )\n            }            \n            return broomballer\n            }, {});\n        // creating the ChartJS object:    \n        let playerInfo = {\n            name: playerName,\n            data: {\n                labels: playerStats.gamesPlayed,\n                datasets: [\n                    {\n                        label: \"Goals\",\n                        data: playerStats.goals,\n                        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        borderColor: 'rgba(255, 99, 132, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                        hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n                        lineTension: 0,\n                    },\n                    {\n                        label: \"Assists\",\n                        data: playerStats.assists,\n                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        borderColor: 'rgba(54, 162, 235, 0.6)',\n                        borderWidth: 1,\n                        fill: false,\n                        hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                        hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                        lineTension: 0,\n                    }\n                ]\n            }\n        };\n        // sending the data to the modal\n        this.props.togglePlayerModal(true, playerInfo)\n    }\n    \n    render() {\n        return (\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Sorting Options</h3>\n                    </div>\n                </div>\n                <div className={this.props.sortOptionsDisplay !== \"hidden\" || this.props.numOfRecords > 0  ? \"content visible\" : \"content hidden\"}>\n                    <div className={\"list_of_options \" + this.props.sortOptionsDisplay}>\n                        \n                            <button className={this.props.sortingOptions.azTab + \" tab_button\"} onClick={()=> this.toggleSort(\"az\", this.props.sortingOptions.azTab, this.props.sortingOptions.alphaAsc)}>A-Z <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.alphaDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.alphaAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gamesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"games\", this.props.sortingOptions.gamesTab, this.props.sortingOptions.gamesAsc)}>Games Played  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gamesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gamesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.winsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"wins\", this.props.sortingOptions.winsTab, this.props.sortingOptions.winsAsc)}>Games Won  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.winsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.winsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.lossesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"losses\", this.props.sortingOptions.lossesTab, this.props.sortingOptions.lossesAsc)}>Games Lost  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.lossesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.lossesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.tiesTab + \" tab_button\"} onClick={()=> this.toggleSort(\"ties\", this.props.sortingOptions.tiesTab, this.props.sortingOptions.tiesAsc)}>Games Tied  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.tiesDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.tiesAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.goalsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"goals\", this.props.sortingOptions.goalsTab, this.props.sortingOptions.goalsAsc)}>Goals  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.goalsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.goalsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.gpgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"gpg\", this.props.sortingOptions.gpgTab, this.props.sortingOptions.gpgAsc)}>GPG  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.gpgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.gpgAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.assistsTab + \" tab_button\"} onClick={()=> this.toggleSort(\"assists\", this.props.sortingOptions.assistsTab, this.props.sortingOptions.assistsAsc)}>Assists  <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.assistsDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.assistsAsc + \" sorting_arrow\"} /> </span> </button>\n                            <button className={this.props.sortingOptions.apgTab + \" tab_button\"} onClick={()=> this.toggleSort(\"apg\", this.props.sortingOptions.apgTab, this.props.sortingOptions.apgAsc)}>APG <span className=\"sort_action_icon\"> <FontAwesomeIcon icon=\"long-arrow-alt-down\" className={this.props.sortingOptions.apgDesc + \" sorting_arrow\"} /> <FontAwesomeIcon icon=\"long-arrow-alt-up\" className={this.props.sortingOptions.apgAsc + \" sorting_arrow\"} /> </span> </button>\n                    \n                    </div>\n                    <div className=\"records \">\n                    \n                    {this.props.playerRecords ? this.props.playerRecords.map(object => {\n                        return (\n                            <div key={object._id} className={object.preferredPosition === this.props.positionVisibility ? \"hidden_card wrapping_card_div\" : \"visible wrapping_card_div\" } onClick={()=> this.showPlayerStats(object.name, object._id)}>\n                                <div className={object.membershipStatus === \"Member\" ? \"member_record player_card \" : \"non_member_record player_card\"}>\n                                \n                                    <div className=\"player_name\">{object.name} <span className=\"position_dot\"> <FontAwesomeIcon icon=\"circle\" className={object.preferredPosition} /> </span></div>\n                                    <div className=\"player_data\">\n                                        <p><span className=\"entry\">Games Played:</span> <span className=\"value\">{object.gamesPlayed}</span>/{this.props.selectedGames.length}</p>\n                                        <p><span className=\"entry\">W/L/T:</span> <span className=\"value\">{ object.winPercent !== \"N/A\" ? object.winPercent + \"%\" : object.winPercent } - { object.lossPercent !== \"N/A\" ? object.lossPercent + \"%\" : object.lossPercent } - { object.tiePercent !== \"N/A\" ? object.tiePercent + \"%\" : object.tiePercent } </span> </p>\n                                        <p><span className=\"entry\">Goals:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.goals : \"N/A\"}</span>\n                                        <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.gpg : \"N/A\"}</span></span></p>\n                                        <p><span className=\"entry\">Assists:</span> <span className=\"value\">{object.gamesPlayed !== 0 ? object.assists : \"N/A\"}</span>\n                                        <br/><span className=\"addendum\"> –– per game: <span className=\"value\">{object.gamesPlayed !== 0 ? object.apg : \"N/A\"}</span></span></p>\n                                    </div>\n                                </div>\n                            </div>\n                            )}\n                            ) : null }\n                    </div>\n                </div>\n                <PlayerStatsModal isOpen={this.props.playerModal} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedGames: state.stats.selectedGames,\n    gamesInChronoOrder: _.sortBy(state.stats.selectedGames,\"_id\"),\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    playerRecords: state.stats.filteredPlayerRecords,\n    numOfRecords: state.stats.filteredPlayerRecords ? state.stats.filteredPlayerRecords.length : 0,\n    sortingOptions: state.stats.sortingOptions,\n    forwardSelection: state.stats.selectors.forwardSelection,\n    defenseSelection: state.stats.selectors.defenseSelection,\n    goalieSelection: state.stats.selectors.goalieSelection,\n    positionVisibility: state.stats.selectors.positionVisibility,\n    playerModal: state.stats.playerModal,\n})\n\nexport default connect(mapStateToProps, { toggleViews, toggleSortOptions, togglePlayerModal, }) (Showcase)\n\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSquare } from '@fortawesome/free-regular-svg-icons'\nimport { toggleViews } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByType } from '../../js/actions/statsActions'\nimport { filterPlayerRecordsByGames } from '../../js/actions/statsActions'\n\nclass Filters extends Component {\n\n    playerSelection(setting, status){\n        switch (setting) {\n            case \"offense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({offense: \"unselected\", defense: this.props.defense, goalie: this.props.goalie})\n            }\n            else {\n                this.props.filterPlayerRecordsByType({offense: \"selected\", defense: this.props.defense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"defense\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({defense: \"unselected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({defense: \"selected\", offense: this.props.offense, goalie: this.props.goalie})\n\n            }\n            break;\n\n            case \"goalie\":\n            if (status === \"selected\") {\n                this.props.filterPlayerRecordsByType({goalie: \"unselected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            else {\n                this.props.filterPlayerRecordsByType({goalie: \"selected\", defense: this.props.defense, offense: this.props.offense})\n\n            }\n            break;\n\n            default:\n            return;\n        }\n    }\n\n\n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"sort\")\n    }\n    gameSelection(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        switch (name) {\n            case \"operator\":\n            this.props.filterPlayerRecordsByGames({[name]: value, gamePercent: this.props.gamePercent})\n            break;\n            \n            case \"gamePercent\":\n            this.props.filterPlayerRecordsByGames({operator: this.props.operator, [name]: value})\n            break;\n\n            default: \n            return;\n        }\n    }\n    render() {\n        return(\n            <div className=\"full\">\n                <div className=\"header\">\n                    <div>\n                        <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.sortOptionsDisplay)}> {this.props.sortOptionsDisplay === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Filters</h3>\n                    </div>\n                </div>\n            <div className=\"content\">\n                <div className={\"list_of_options \" + this.props.sortOptionsDisplay}>\n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Players</h3>\n                        <ul className=\"check_list\">\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"offense\",  this.props.offense)}>{ this.props.offense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\"/> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\"/>}  Offense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"defense\",  this.props.defense)}>{ this.props.defense === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Defense Players</li>\n                            <li className=\"filter_item\" onClick={()=> this.playerSelection(\"goalie\",  this.props.goalie)}>{ this.props.goalie === \"selected\" ? <FontAwesomeIcon icon=\"check-square\" className=\"checkbox\" /> : <FontAwesomeIcon icon={faSquare} className=\"checkbox\" />}  Goalies</li>        \n                        </ul> \n                    </div>\n                    \n                    <div className=\"filter_panel\">\n                        <h3 className=\"filter_name\">Attendance</h3>\n                            <ul className=\"check_list\">\n                                <li className=\"filter_item\">Played \n                                <select className=\"custom-select\" name=\"operator\" onChange={(event) => this.gameSelection(event)} value= {this.props.operator}>\n                                    <option value=\"+\"> more than </option>\n                                    <option value=\"-\"> less than </option>\n                                </select>\n                                <select className=\"custom-select\" name=\"gamePercent\" onChange={(event) => this.gameSelection(event)} value= {this.props.gamePercent}>\n                                    <option value=\"100\"> 100% </option>\n                                    <option value=\"90\"> 90% </option>\n                                    <option value=\"80\"> 80% </option>\n                                    <option value=\"70\"> 70% </option>\n                                    <option value=\"60\"> 60% </option>\n                                    <option value=\"50\"> 50% </option>\n                                    <option value=\"40\"> 40% </option>\n                                    <option value=\"30\"> 30% </option>\n                                    <option value=\"20\"> 20% </option>\n                                    <option value=\"10\"> 10% </option>\n                                    <option value=\"0\"> 0% </option>\n                                </select>\n                                    of the games </li>\n                            </ul> \n                    </div>\n\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    datePickers: state.stats.datePickers,\n    selectedGames: state.stats.selectedGames,\n    selectedPlayers: state.stats.selectedPlayers,\n    sortOptionsDisplay: state.stats.sortOptionsDisplay,\n    offense: state.stats.playerFilters.offense,\n    defense: state.stats.playerFilters.defense,\n    goalie: state.stats.playerFilters.goalie,\n    operator: state.stats.gameFilters.operator,\n    gamePercent: state.stats.gameFilters.gamePercent,\n})\n\nexport default connect(mapStateToProps, { toggleViews, filterPlayerRecordsByType, filterPlayerRecordsByGames }) (Filters)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\nimport { toggleViews } from '../../js/actions/statsActions'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {HorizontalBar} from \"react-chartjs-2\";\n// see https://www.npmjs.com/package/react-chartjs-2 for documentation\n\n// defaults.global.barThickness = 20;\nclass DataChart extends Component {\n    \n    toggleViews(currentStatus) {\n        this.props.toggleViews(currentStatus, \"chart\")\n    }\n\n    render(){\n        \n        return (\n                <div className=\"full\">\n                    <div className=\"header\">\n                        <div>\n                            <h3 className=\"header_h3 \" onClick={()=> this.toggleViews(this.props.chartDisplay)}> {this.props.chartDisplay === \"hidden\" ? <FontAwesomeIcon icon=\"caret-right\" className=\"header_icon\"/> : <FontAwesomeIcon icon=\"caret-down\" className=\"header_icon\" />}Show Chart</h3>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        \n                        <div className={\"chart \" }>\n                            {this.props.chartData && this.props.chartDisplay !== \"hidden\" ?  \n                            <div className=\"chartAreaWrapper\">\n                                <HorizontalBar\n                                    data={this.props.curatedChartData}\n                                    height= { this.props.chartData.labels.length * 50 }\n                                    className= { this.props.chartDisplay }\n                                    options={{\n                                            responsive: true,\n                                            maintainAspectRatio: false,\n                                            barThickness: 100\n                                            }}\n                                    />\n                            </div> : null }  \n                        </div>\n                    </div>\n                </div>\n                )\n\n            }\n        }\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    playerRecords: state.stats.playerRecords,\n    chartData: state.stats.chartData,\n    curatedChartData: state.stats.curatedChartData,\n    chartDisplay: state.stats.chartDisplay,\n    chartingOptions: state.stats.chartingOptions,\n})\n\nexport default connect(mapStateToProps, { toggleViews }) (DataChart)\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\n\nimport NavBar from \"../components/NavBar.js\"\nimport DateSelector from \"../components/RecordsPageComp/DateSelector.js\"\nimport GameSelector from \"../components/RecordsPageComp/GameSelector.js\"\nimport PlayerSelector from \"../components/RecordsPageComp/PlayerSelector.js\"\nimport Showcase from \"../components/RecordsPageComp/Showcase.js\"\nimport Filters from \"../components/RecordsPageComp/Filters.js\"\nimport DataChart from \"../components/RecordsPageComp/DataChart.js\"\nclass Records extends Component { \n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_main main_padded\"> \n            <h1 className=\"h1_main\">League Records</h1>\n            \n            <section>\n                < DateSelector />\n            </section>\n            \n            <section>\n                < GameSelector />\n            </section>\n            \n            <section>\n                < PlayerSelector />\n            </section>\n            \n            <section>\n                < DataChart />\n            </section>\n\n            <section>\n                < Showcase />\n            </section>\n\n            <section>\n                < Filters />\n            </section>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    games: state.games.games\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps) (Records)\n","import React, { Component } from \"react\";\n\nimport { connect } from 'react-redux';\n\nimport { updateUserForm } from '../js/actions/authenticateActions';\nimport { createNewUser } from '../js/actions/authenticateActions';\nimport { authenticateUser } from '../js/actions/authenticateActions';\n\nclass LoginForm extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n    handleCancel(event) {\n        event.preventDefault()\n    }\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let editedUser = {...this.props.user, [name]: value}\n        this.props.updateUserForm(editedUser)\n        // this.setState({...this.state, [name]: value})\n        \n        }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        /* If a player is a goalie, their level needs to be set as \"Goalie\" */\n        \n        \n        if (this.props.in === \"show\") {\n            console.log(\"Sign-in mode activated\")\n            let user = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                }\n            this.props.authenticateUser(\"local\", user)\n            }\n        else {\n            let newUser = {\n                username: this.props.user.username,\n                password: this.props.user.password,\n                email: this.props.user.email,\n                privilege: \"user\"\n                }\n            // let id = this.props.player._id\n            this.props.createNewUser(newUser)\n        }\n\n        // go back to tab#1\n        // this.props.resetTabs()\n        }\n\n    render() {\n        return (\n            <div className=\"form_container container\">\n                <div className=\"row\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"field\">\n                            <label>Username: </label>\n                            <input \n                                type=\"text\" \n                                name=\"username\"\n                                value= {this.props.user.username}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n                        \n                        <div className=\"field\">\n                            <label>Password: </label>\n                            <input \n                                type=\"text\" \n                                name=\"password\"\n                                value= {this.props.user.password}\n                                onChange={(event) => this.handleChange(event)}\n                                />\n                        </div>\n\n                        {this.props.up === \"show\" ? (\n                            <div className=\"field\">\n                                <label>Email: </label>\n                                <input \n                                    type=\"text\" \n                                    name=\"email\"\n                                    value= {this.props.user.email}\n                                    onChange={(event) => this.handleChange(event)}\n                                    />\n                            </div>\n                        ) : null}\n                        <div className=\"button_container\">\n                            {this.props.in === \"show\" ? \n                                <button type=\"submit\" value=\"Log In\" className=\"contrast_color\"> Sign in </button> \n                                :\n                                <button type=\"submit\" value=\"submit\" className=\"contrast_color\"> Sign up </button>\n                            } \n                            <button type=\"cancel\" value=\"Cancel\" className=\"contrast_color\" onClick={(event) => this.handleCancel(event)} > Cancel </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            )\n        }\n    }\n\n/*\nGames.propTypes = {\n    fetchGames: PropTypes.func.isRequired,\n    games: PropTypes.array.isRequired\n}\n*/\n\nconst mapStateToProps = state => ({\n    user: state.authenticate.user,\n    in: state.authenticate.tabs[0],\n    up: state.authenticate.tabs[1]\n})\n\nexport default connect(mapStateToProps, { updateUserForm, createNewUser, authenticateUser }) (LoginForm)","import {\n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE\n} from \"./types\"\n\nimport { saveState } from \"../../components/sessionStorage\"\n\nimport API from \"../../utils/API\"\n\nexport const updateUserForm = (data) => dispatch => {\n    dispatch({\n        type: UPDATE_USER_FORM,\n        payload: data\n    })\n}\n\nexport const createNewUser = ( newUser ) => dispatch => {\n    API.addNewUser( newUser).then(res => {\n        if(res.status !== 200) {\n            throw new Error(res.statusText)\n        }\n        else {\n            dispatch({\n                type: ADD_NEW_USER,\n                payload: res.data\n            })\n        }\n    })\n}\n\nexport const toggleTabStatus = (id) => dispatch => {\n    dispatch({\n        type: SIGN_MODE,\n        payload: id\n    })\n}\n\nexport const authenticateUser = (method, user) => dispatch => {\n    console.log(\"data in authenticateUser authenticateActions.js: \", user)\n    if (method === \"local\") {\n        API.authenticateUser(\"local\", user).then(res => {\n            if (!res.data.errmsg) {\n                console.log(\"Response from authentication API: \", res.data)\n                // dispatch({\n                //     type: SETTING_USER_PRIVILEGES,\n                //     payload: res.data\n                // })\n                switch (res.data.privilege) {\n                    case \"SuperAdmin\":\n                    saveState({\n                        SuperAdmin: true,\n                        draftTeams: true,\n                        changeAvailability: true,\n                        createGame: true,\n                        deleteGame: true,\n                        editScore: true,\n                        changeLock: true,\n                        createPlayer: true,\n                        editMember: true,\n                        deleteMember: true,\n                        editTenBucker: true,\n                        deleteTenBucker: true\n                    })\n\n                    break;\n\n                    default:\n                    return;\n                }\n            }\n        })\n    }\n}\n","import React, { Component } from \"react\";\n// Redux\nimport { connect } from 'react-redux';\nimport { toggleTabStatus } from \"../js/actions/authenticateActions\"\n\nimport NavBar from \"../components/NavBar.js\";\nimport LoginForm from \"../components/LoginForm.js\";\n\n// import \"../styles/css/login.css\";\n\nclass Login extends Component { \n\n\ntoggleStatus(id, currentStatus) {\n    // converting the # of the tab to its index\n    let tabIndex = parseInt(id, 10) - 1\n    if(currentStatus === \"hide_tab\") {\n        this.props.toggleTabStatus(tabIndex)\n    }\n}\n\nrender() {\n    return (\n    <div>\n        <NavBar />\n        <div className=\"main_alternate\">\n            <h1 className=\"h1_alternate\">Login</h1>\n            <div className=\"two_tab_centering\">\n                <span id=\"1\" className={\"auth_tab \" + this.props.tab1 } onClick={() => this.toggleStatus(\"1\", this.props.tab1) }> Sign-in </span>\n                <span id=\"2\" className={\"auth_tab \" + this.props.tab2 } onClick={() => this.toggleStatus(\"2\", this.props.tab2) }> Sign-up </span>\n            </div>\n            <div className= \"main_for_tab\">\n                <LoginForm />\n            </div>\n        </div>\n    </div>\n    )\n    }\n}\n// export default Draft;\n\nconst mapStateToProps = state => ({\n    tab1: state.authenticate.tabs[0],\n    tab2: state.authenticate.tabs[1],\n    })\n\n// export default Draft;\nexport default connect(mapStateToProps, { toggleTabStatus } ) (Login)\n","import { \n    FETCH_GAMES, \n    NEW_GAME, \n    DELETE_GAME, \n    GET_GAME, \n    EDIT_GAME_INFO, \n    RESET,\n    SHOW_UNAVAILABLE_MEMBERS, \n    HIDE_UNAVAILABLE_MEMBERS, \n    MAKE_MEMBER_UNAVAILABLE,\n    MAKE_TEN_BUCKER_UNAVAILABLE,\n    MAKE_MEMBER_AVAILABLE,\n    SHOW_NON_MEMBERS,\n    HIDE_NON_MEMBERS, \n    ADD_NON_MEMBER, \n    LOCK_GAME_INFO,\n    UNLOCK_GAME_INFO,\n    TRIGGER_PICK_MODE,\n    TRIGGER_DRAFT_MODE,\n    SET_PICK\n} from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    games: [],\n    upcomingGames: [],\n    pastGames: [], // games showing in the \"Past Games\" list of Draft.js. Sorted from recent to old\n    gameInfo: {\n        goals: 0,\n        assists: 0,\n        darkPickNum: 0,\n        whitePickNum: 0,\n        available: true,\n        team: \"N/A\"\n    },\n    visibility: {\n        top: \"hidden\",\n        main: \"hidden\",\n        bottom: \"hidden\",\n        gameStats: \"hidden\",\n        noStatsMessage: \"hidden\",\n    },\n    gameDate: \"\",\n    draft: {},\n    unavailableMembers: [],\n    allTenBuckers: [],\n    notPlayingNonMembers: [],\n    playingNonMembers: [],\n    lockStatus: \"visible\", // this hides the arrows + delete icons if the game is locked\n    showingNonPlayingTenBuckers: \"Show\",    // which means this section is hidden\n    showingUnavailableMembers: \"Show\",      // which means this section is hidden\n    draftMode: \"Draft\",\n    pickButtons: {\n        left: \"Set Dark Picks\",\n        right: \"Set White Picks\"\n    },\n    picked: [],\n    unpicked: [],\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_GAMES:\n        return {\n            ...state,\n            games: action.payload,\n            upcomingGames: action.payload.filter(game => game._id >= moment().format(\"YYYY-MM-DD\")),\n            pastGames: _.sortBy(action.payload.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n        }\n        \n        case DELETE_GAME:\n        return {\n            ...state,\n            visibility: initialState.visibility,\n            games: state.games.filter(game => game._id !== action.payload._id),\n            upcomingGames: state.upcomingGames.filter(game => game._id !== action.payload._id),\n            pastGames: _.sortBy(state.pastGames.filter(game => game._id !== action.payload._id),\"_id\").reverse(),\n            lockStatus: \"hidden\",\n            draftMode: initialState.draftMode,\n            pickButtons: initialState.pickButtons,\n            }\n\n\n        case NEW_GAME:\n        return {\n            ...state,\n            games: _.sortBy([...state.games, action.payload], \"game_date\"),\n            upcomingGames: action.payload._id >= moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.upcomingGames], \"game_date\") : state.upcomingGames,\n            pastGames: action.payload._id < moment().format(\"YYYY-MM-DD\") ? _.sortBy([action.payload, ...state.pastGames], \"game_date\").reverse() : state.pastGames \n        }\n\n        case GET_GAME:\n        return {\n            ...state,\n            draftMode: initialState.draftMode,\n            gameDate: action.payload.game._id,\n            draft: action.payload.game,\n            // This hides the locker if \n            lockStatus: action.payload.game.lock_status === true ? \"hidden\" : \"visible\",\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.game.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            // We initiate the array of playing ten-buckers here (for them to not get added twice, this array will be check against when clicking on add non-member)\n            playingNonMembers: action.payload.game.players.filter(player => player.membershipStatus !== \"Member\"),\n            visibility: {\n                top: \"visible\", \n                main: \"visible\", \n                bottom: \"visible\",\n                gameStats: action.payload.gameStats,\n                noStatsMessage: action.payload.noStatsMessage\n            }\n        }\n\n        case EDIT_GAME_INFO:\n        return {\n            ...state,\n            draft: action.payload.game,\n        }\n        \n        case RESET:\n        return {\n            ...state,\n            draft: action.payload,\n            unavailableMembers: initialState.unavailableMembers,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            playingNonMembers: initialState.playingNonMembers,\n            picked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: state.draftMode === \"Dark\" ? _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(action.payload.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case MAKE_MEMBER_UNAVAILABLE:\n        return {\n            ...state,\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? action.payload.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false) : initialState.unavailableMembers,\n            draft: action.payload\n        }\n\n        case MAKE_TEN_BUCKER_UNAVAILABLE:\n        return {\n            /* The Ten Buckers are managed outside of the \"game\" object. If they would just be set as \"Unavailable\" like Members, duplicates may be created.\n            They need to be removed from the game object altogether. Therefore, their status is handled in the reducer once sent to the state.\n            The allTenBuckers array that populates after a click is making this easier: when a Ten Bucker is set as unavailable, it is filtered \n            out of the array of playingNonMembers. It is also added to the array of notPlayingNonMembers: their data is checked agains the array of allTenBuckers\n            via a filter. It creates an array of 1 element, that we add to the notPlayingNonMembers array by extracting its index 0 */\n            ...state,\n            draft: action.payload.gameData,\n            notPlayingNonMembers: state.showingNonPlayingTenBuckers === \"Hide\" ? _.sortBy([...state.notPlayingNonMembers, state.allTenBuckers.filter(player => player._id === action.payload.player)[0]],\"name\") : initialState.notPlayingNonMembers,\n            playingNonMembers: state.playingNonMembers.filter(player => player._id !== action.payload.player),\n        }\n        // this case only deals with Members as Ten Buckers are handled separately through ADD_NON_MEMBER\n        case MAKE_MEMBER_AVAILABLE:\n        return {\n            ...state,\n            // removing properly from the array of unavailable players\n            unavailableMembers: state.showingUnavailableMembers === \"Hide\" ? (state.draft.players.filter(player => player.gameInfo.available === false && player.membershipStatus === \"Member\" && player._id !== action.payload.player)) : initialState.unavailableMembers,\n            draft: action.payload.game,\n        }\n\n        case SHOW_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: state.draft.players.filter(player => player.membershipStatus === \"Member\" && player.gameInfo.available === false),\n            showingUnavailableMembers: \"Hide\"\n        }\n        \n        case HIDE_UNAVAILABLE_MEMBERS:\n        return {\n            ...state,\n            unavailableMembers: initialState.unavailableMembers,\n            showingUnavailableMembers: \"Show\"\n        }\n\n        case SHOW_NON_MEMBERS:\n        return {\n            ...state,\n            allTenBuckers: action.payload.all,\n            notPlayingNonMembers: action.payload.new,\n            showingNonPlayingTenBuckers: \"Hide\"\n        }\n\n        case HIDE_NON_MEMBERS:\n        return {\n            ...state,\n            notPlayingNonMembers: initialState.notPlayingNonMembers,\n            showingNonPlayingTenBuckers: \"Show\"\n        }\n        \n        case ADD_NON_MEMBER:\n        return {\n            ...state,\n            draft: action.payload.players,\n            notPlayingNonMembers: state.notPlayingNonMembers.filter(player => player._id !== action.payload.player._id),\n            playingNonMembers: [action.payload.player, ...state.playingNonMembers]\n        }\n\n        case LOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n        \n        case UNLOCK_GAME_INFO:\n        return {\n            ...state,\n            lockStatus: action.payload === true ? \"hidden\" : \"visible\",\n        }\n\n        case TRIGGER_PICK_MODE:\n        return {\n            ...state,\n            draftMode: action.payload.team,\n            pickButtons: action.payload.buttons,\n            visibility: {top: \"hidden\", main: \"visible\", bottom: \"visible\"},\n            // as opposed to the \"SET_PICK\" case, the filtering needs to happen in the reducer, as it is based on data already stored in the state (not coming from API)\n            picked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum !== 0),(obj) => obj.gameInfo.darkPickNum) : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum !== 0),(obj) => obj.gameInfo.whitePickNum),\n            unpicked: action.payload.team === \"Dark\" ? _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.darkPickNum === 0), \"name\") : _.sortBy(state.draft.players.filter(player => player.gameInfo.available === true && player.gameInfo.whitePickNum === 0), \"name\"), \n        }\n\n        case TRIGGER_DRAFT_MODE:\n        return {\n            ...state,\n            draftMode: \"Draft\",\n            visibility: {top: \"visible\", main: \"visible\", bottom: \"visible\"},\n            pickButtons: initialState.pickButtons\n        }\n\n        case SET_PICK:\n        return {\n            ...state,\n            draft: action.payload.game,\n            picked: action.payload.picked,\n            unpicked: action.payload.unpicked\n            \n        }\n\n        default: \n        return state;\n    }\n}","import { SHOW_FUTURE, SHOW_PAST } from '../actions/types';\nconst moment = require(\"moment\");\n\nconst initialState = {\n    showing: \"future\",\n    upcoming_visibility: \"visible\",\n    past_visibility: \"hidden\",\n    dateHeader: \"Upcoming\",\n    buttonMsg: \"Past\",\n    today: moment().format(\"YYYY-MM-DD\")    \n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_FUTURE:\n        return {\n            ...state,\n            upcoming_visibility: \"visible\",\n            past_visibility: \"hidden\",\n            dateHeader: \"Upcoming\",\n            buttonMsg: \"Past\",\n            showing: \"future\",\n        }\n        \n        case SHOW_PAST:\n        return {\n            ...state,\n            upcoming_visibility: \"hidden\",\n            past_visibility: \"visible\",\n            dateHeader: \"Past\",\n            buttonMsg: \"Upcoming\",\n            showing: \"past\"\n        }\n        \n        default:\n        return state;\n    }\n}","import { FETCH_PLAYERS, EDIT_PLAYER, ADD_PLAYER, DELETE_PLAYER, SHOW_TAB, RESET_TABS, EDIT_FORM, UPDATE_FIELD } from '../actions/types';\nimport _ from \"underscore\"\n\nconst initialState = {\n    players: [],\n    player: {\n        name: \"\",\n        fullName: \"\",\n        preferredPosition: \"Forward\",\n        membershipStatus: \"Member\",\n        email: \"\",\n        playerLevel: \"A+\"\n        },\n\n    tabs: [\"show_tab\",\"hide_tab\",\"hide_tab\"],\n    panels: [\"visible\", \"hidden\", \"hidden\"],\n    \n    formMode: \"Add\"\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_PLAYERS:\n        return {\n            ...state,\n            players: action.payload\n        }\n\n        case ADD_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([...state.players, action.payload], \"name\")\n        }\n\n        case DELETE_PLAYER:\n        return {\n            ...state,\n            deletedPlayer: action.payload,\n            players: state.players.filter(player => player._id !== action.payload._id)\n        }\n        \n        case EDIT_PLAYER:\n        return {\n            ...state,\n            player: initialState.player,\n            players: _.sortBy([action.payload, ...state.players.filter(player => player._id !== action.payload._id)], \"name\")\n        }\n        \n        case SHOW_TAB:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide_tab\"} else {return tab = \"show_tab\"}}),\n            panels: state.panels.map((panel, index) => {if(index !== action.payload) {return panel = \"hidden\"} else {return panel = \"visible\"}})\n        }\n\n        case RESET_TABS:\n        return {\n            ...state,\n            player: initialState.player,\n            formMode: \"Add\",\n            tabs: initialState.tabs,\n            panels: initialState.panels,\n        }\n\n        case EDIT_FORM:\n        return {\n            ...state,\n            formMode: \"Edit\",\n            tabs: [\"hide_tab\",\"hide_tab\",\"show_tab\"],\n            panels: [\"hidden\", \"hidden\", \"visible\"],\n            player: action.payload\n        }\n\n        case UPDATE_FIELD:\n        return {\n            ...state,\n            player: action.payload\n        }        \n\n        default: \n        return state;\n    }\n}","import { \n    SHOW_GAMES_TO_STATS, \n    GET_GAMES_AND_TRANSFORM,\n    GET_GAMES_IN_TIMESPAN, \n    SET_YEARS_VISIBILITIES, \n    ADD_GAME_TO_SELECTED,\n    REMOVE_GAME_FROM_SELECTED,\n    ADD_PLAYER_TO_SELECTED,\n    REMOVE_PLAYER_FROM_SELECTED,\n    TOGGLE_RECORDS_VIEWS,\n    ADD_PLAYER_RECORDS,\n    REMOVE_PLAYER_RECORDS,\n    REPLACE_PLAYERS_RECORDS,\n    SORT_AZ_ASC,\n    SORT_AZ_DESC,\n    SORT_GAMES_ASC,\n    SORT_GAMES_DESC,\n    SORT_WINS_ASC,\n    SORT_WINS_DESC,\n    SORT_LOSSES_ASC,\n    SORT_LOSSES_DESC,\n    SORT_TIES_ASC,\n    SORT_TIES_DESC,\n    SORT_GOALS_ASC,\n    SORT_GOALS_DESC, \n    SORT_GPG_ASC,\n    SORT_GPG_DESC,\n    SORT_ASSISTS_ASC,\n    SORT_ASSISTS_DESC,\n    SORT_APG_ASC,\n    SORT_APG_DESC,\n    SET_DATE_RANGE,\n    // SET_CHART_DATA,\n    TOGGLE_SELECT_ALL,\n    BATCH_CARD_UPDATE,\n    BATCH_CHART_UPDATE,\n    BATCH_UNSELECT,\n    // TOGGLE_POSITIONS,\n    TOGGLE_PLAYER_MODAL,\n    BATCH_GAMES,\n    UNSELECT_ALL_GAMES, \n    FILTER_PLAYER_RECORDS_BY_TYPE,\n    FILTER_PLAYER_RECORDS_BY_GAMES\n    } from '../actions/types';\n\nimport _ from \"underscore\"\nconst moment = require(\"moment\");\n\nconst initialState = {\n    visibility: \"hidden\",\n    message: \"Teams have not been drafted for this team yet. Please come back later!\",\n    gamesForRecords: [],\n    pastGamesFromAPI: [],\n    reducedGames: [],\n    gameVisibility: [],\n    selectedGames: [],\n    unselectedGames: [],\n    selectedPlayers: [],\n    unselectedPlayers: [],\n    datePickers: \"visible\",\n    listOfGames: \"hidden\",\n    listOfPlayers: \"hidden\", \n    sortOptionsDisplay: \"hidden\",\n    chartDisplay: \"hidden\",\n    playerRecords: [],\n    arrayOfTenBuckersID: [],\n    sortingOptions:\n        {\n            alphaDesc: \"active\",\n            alphaAsc: \"inactive\",\n            gamesDesc: \"inactive\",\n            gamesAsc: \"inactive\",\n            goalsDesc: \"inactive\",\n            goalsAsc: \"inactive\",\n            gpgDesc: \"inactive\",\n            gpgAsc: \"inactive\",\n            winsDesc: \"inactive\",\n            winsAsc: \"inactive\",\n            lossesDesc: \"inactive\",\n            lossesAsc: \"inactive\",\n            tiesDesc: \"inactive\",\n            tiesAsc: \"inactive\",\n            assistsDesc: \"inactive\",\n            assistsAsc: \"inactive\",\n            apgDesc: \"inactive\",\n            apgAsc: \"inactive\",\n            azTab: \"selected_tab\",\n            gamesTab: \"unselected_tab\",\n            winsTab: \"unselected_tab\",\n            lossesTab: \"unselected_tab\",\n            tiesTab: \"unselected_tab\",\n            goalsTab: \"unselected_tab\",\n            gpgTab: \"unselected_tab\",\n            assistsTab: \"unselected_tab\",\n            apgTab: \"unselected_tab\",\n        },\n    chartingOptions: {\n        gamesTab: \"selected_chart_games\",\n        winsTab: \"selected_chart_wins\",\n        goalsTab: \"selected_chart_goals\",\n        gpgTab: \"selected_chart_gpg\",\n        assistsTab: \"selected_chart_assists\",\n        apgTab: \"selected_chart_apg\",\n        },\n    chartData: {\n        labels: [],\n        datasets: [\n            {\n                label: \"Goals\",\n                data: [],\n                backgroundColor: 'rgba(255, 99, 132, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 99, 132, 0.6)',\n                hoverBorderColor: 'rgba(255, 99, 132, 0.6)',\n            },\n            {\n                label: \"Assists\",\n                data: [],\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(54, 162, 235, 0.6)',\n                hoverBorderColor: 'rgba(54, 162, 235, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Games\",\n                data: [],\n                backgroundColor: 'rgba(255, 206, 86, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 206, 86, 0.6)',\n                hoverBorderColor: 'rgba(255, 206, 86, 0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Wins (%)\",\n                data: [],\n                backgroundColor: 'rgba(75,192,192,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n                hoverBorderColor: 'rgba(75,192,192,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"Losses (%)\",\n                data: [],\n                backgroundColor: '#d3b8ae',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#d3b8ae',\n                hoverBorderColor: '#d3b8ae',\n                barThickness: 15,\n            },\n            {\n                label: \"Ties (%)\",\n                data: [],\n                backgroundColor: '#ff8a65',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: '#ff8a65',\n                hoverBorderColor: '#ff8a65',\n                barThickness: 15,\n            },\n            {\n                label: \"GPG\",\n                data: [],\n                backgroundColor: 'rgba(153,102,255,0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(153,102,255,0.6)',\n                hoverBorderColor: 'rgba(153,102,255,0.6)',\n                barThickness: 15,\n            },\n            {\n                label: \"APG\",\n                data: [],\n                backgroundColor: 'rgba(255, 159, 64, 0.6)',\n                borderColor: 'rgba(172,173,178,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255, 159, 64, 0.6)',\n                hoverBorderColor: 'rgba(255, 159, 64, 0.6)',\n                options: {barThickness: 100},\n            },\n        ]\n    },\n    memberSelection: \"unselected_member\",\n    tenBuckerSelection: \"unselected_non_member\",\n    selectors: {\n        forwardSelection: \"unselected_forward\",\n        goalieSelection: \"unselected_goalie\",\n        defenseSelection: \"unselected_defense\",\n        positionVisibility: \"all\"\n        },\n    playerModal: false,\n    playerModalData: {},\n    allGamesSelection: \"unselected_game\",\n    playerFilters: {\n            offense: \"selected\",\n            defense: \"selected\",\n            goalie: \"selected\"\n    },\n    gameFilters: {\n            operator: \"+\",\n            gamePercent: \"0\",\n    },\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_GAMES_TO_STATS:\n        return {\n            ...state,\n            visibility: \"visible\",\n        }\n            \n        case GET_GAMES_AND_TRANSFORM:\n        return {\n            ...state,\n            reducedGames: action.payload.game,\n            gameVisibility: action.payload.visibility,\n        }\n\n        case GET_GAMES_IN_TIMESPAN:\n        return {\n            ...state,\n            pastGamesFromAPI: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            gamesForRecords: _.sortBy(action.payload.games.filter(game => game._id < moment().format(\"YYYY-MM-DD\")),\"_id\").reverse(),\n            arrayOfTenBuckersID: action.payload.allTenBuckers,\n        }\n\n        case SET_YEARS_VISIBILITIES:\n        return {\n            ...state, \n            gameVisibility: action.payload\n        }\n\n        case ADD_GAME_TO_SELECTED:\n        return {\n            ...state,\n            selectedGames: [...state.selectedGames, action.payload],\n            unselectedGames: state.unselectedGames.filter(game => game._id !== action.payload._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.playerFilters\n        }\n\n        case REMOVE_GAME_FROM_SELECTED:\n        return {\n            ...state,\n            selectedGames: state.selectedGames.filter(game => game._id !== action.payload._id),\n            unselectedGames: [...state.unselectedGames, action.payload],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case ADD_PLAYER_TO_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: [...state.selectedPlayers, action.payload.selected],\n            unselectedPlayers: state.unselectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters,\n        }\n\n        case REMOVE_PLAYER_FROM_SELECTED:\n        return {\n            ...state,\n            selectedPlayers: state.selectedPlayers.filter(player => player._id !== action.payload.selected._id),\n            unselectedPlayers: [...state.unselectedPlayers, action.payload.selected],\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: initialState.playerFilters,\n            gameFilters: initialState.gameFilters\n        }\n        \n        case TOGGLE_RECORDS_VIEWS:\n        return {\n            ...state,\n            datePickers: action.payload.dates,\n            listOfGames: action.payload.games,\n            listOfPlayers: action.payload.players, \n            sortOptionsDisplay: action.payload.sort,\n            chartDisplay: action.payload.chart\n        }\n\n        case ADD_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\"),\n            filteredPlayerRecords: _.sortBy([...state.playerRecords, action.payload],\"name\")\n        }\n\n        case REMOVE_PLAYER_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\"),\n            filteredPlayerRecords: _.sortBy(state.playerRecords.filter(player => player._id !== action.payload._id),\"name\")\n        }\n\n        case REPLACE_PLAYERS_RECORDS:\n        return {\n            ...state, \n            playerRecords: _.sortBy(action.payload, \"name\"),\n            filteredPlayerRecords: _.sortBy(action.payload, \"name\"),\n        }\n\n        case SORT_AZ_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\").reverse()\n        }\n\n        case SORT_AZ_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords, \"name\"),\n        }\n\n        case SORT_GAMES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\")\n        }\n\n        case SORT_GAMES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gamesPlayed !== \"N/A\"), \"gamesPlayed\").reverse()\n        }\n\n        case SORT_WINS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\")\n        }\n\n        case SORT_WINS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.winPercent !== \"N/A\"), \"winPercent\").reverse(),\n        }\n\n        case SORT_LOSSES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\")\n        }\n\n        case SORT_LOSSES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.lossPercent !== \"N/A\"), \"lossPercent\").reverse(),\n        }\n\n        case SORT_TIES_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\")\n        }\n\n        case SORT_TIES_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.tiePercent !== \"N/A\"), \"tiePercent\").reverse(),\n        }\n\n        case SORT_GOALS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\"),\n        }\n        \n        case SORT_GOALS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.goals !== \"N/A\"), \"goals\").reverse(),\n        }\n        \n        case SORT_ASSISTS_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\"),\n        }\n        \n        case SORT_ASSISTS_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.assists !== \"N/A\"), \"assists\").reverse(),\n        }\n\n\n        case SORT_GPG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\")\n        }\n\n        case SORT_GPG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.gpg !== \"N/A\"), \"gpg\").reverse(),\n        }\n\n        case SORT_APG_ASC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\"),\n        }\n\n        case SORT_APG_DESC:\n        return {\n            ...state,\n            sortingOptions: action.payload,\n            filteredPlayerRecords: _.sortBy(state.filteredPlayerRecords.filter(player => player.apg !== \"N/A\"), \"apg\").reverse(),\n        }\n\n        case SET_DATE_RANGE:\n        return {\n            ...state,\n            dateRange: action.payload,\n            gamesForRecords: state.pastGamesFromAPI.filter(game => game._id >= action.payload.from && game._id <= action.payload.to)\n        }\n        \n        case TOGGLE_SELECT_ALL:\n        return {\n            ...state,\n            memberSelection: action.payload.player === \"member\" ? action.payload.memberSelection : state.memberSelection,\n            tenBuckerSelection: action.payload.player !== \"member\" ? action.payload.tenBuckerSelection : state.tenBuckerSelection,\n        }\n        \n        case BATCH_CARD_UPDATE:\n        return {\n            ...state,\n            // playerRecords: _.sortBy(action.payload.concat(state.playerRecords), \"name\"),\n            playerRecords: action.payload.concat(state.playerRecords.filter(player => player._id !== action.payload._id))\n        }\n\n        case BATCH_CHART_UPDATE:\n        return {\n            ...state,\n            chartData: action.payload,\n            curatedChartData: action.payload,\n        }\n\n        case BATCH_UNSELECT:\n        return {\n            ...state,\n            playerRecords: _.sortBy(state.playerRecords.filter(player => player.membershipStatus !== action.payload), \"name\")\n        }\n\n        case TOGGLE_PLAYER_MODAL:\n        return {\n            ...state, \n            playerModal: action.payload.status,\n            playerModalData: action.payload.data\n        }\n        case BATCH_GAMES:\n        return {\n            ...state, \n            allGamesSelection: action.payload === \"unselected_game\" ? \"selected_game\" : \"unselected_game\"\n        }\n\n        case UNSELECT_ALL_GAMES:\n        return {\n            ...state, \n            selectedGames: initialState.selectedGames,\n            unselectedGames: state.pastGamesFromAPI,\n            allGamesSelection: \"unselected_game\"\n        }\n        // Currently, the gameFilters and playerFilters cannot operate simultaneously. Therefore, playing with one should reset the other (to avoid confusion) \n        case FILTER_PLAYER_RECORDS_BY_TYPE:\n        return {\n            ...state,\n            gameFilters: initialState.gameFilters,\n            sortingOptions: initialState.sortingOptions,\n            playerFilters: action.payload.playerFilters,\n            // \"only\", means that the players have to match a certain condition (hence: \"===\"), \"but\", means that matching players should be filtered out (\"!==\")\n            filteredPlayerRecords: action.payload.operator === \"only\" ? _.sortBy(state.playerRecords.filter(player => player.preferredPosition === action.payload.playerType),\"name\") : _.sortBy(state.playerRecords.filter(player => player.preferredPosition !== action.payload.playerType),\"name\") \n        }\n\n        case FILTER_PLAYER_RECORDS_BY_GAMES:\n        return {\n            ...state,\n            playerFilters: initialState.playerFilters,\n            sortingOptions: initialState.sortingOptions,\n            gameFilters: action.payload,\n            filteredPlayerRecords: action.payload.operator === \"-\" ? _.sortBy(state.playerRecords.filter(player => player.gamesPlayed < state.selectedGames.length * action.payload.gamePercent / 100), \"name\") : _.sortBy(state.playerRecords.filter(player => player.gamesPlayed > state.selectedGames.length * action.payload.gamePercent / 100), \"name\")\n        }\n\n        default:\n        return state;\n    }\n}","import { \n    UPDATE_USER_FORM,\n    ADD_NEW_USER,\n    SIGN_MODE,\n} from \"../actions/types\"\n\nconst initialState = {\n    user: \n        {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n        },\n    tabs: [\"show_tab\",\"hide_tab\"], // this is used in the sign-in/sign-up user form\n    // superAdminPrivileges: false,\n    // adminPrivileges: false,\n    // draftPrivileges: false,\n    }\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case UPDATE_USER_FORM:\n        return {\n            ...state,\n            user: action.payload,\n        }\n\n        case ADD_NEW_USER:\n        return {\n            ...state,\n            user: initialState.user\n        }\n\n        case SIGN_MODE:\n        return {\n            ...state,\n            tabs: state.tabs.map((tab, index) => {if(index !== action.payload) {return tab = \"hide_tab\"} else {return tab = \"show_tab\"}})\n        }\n        \n        default: \n        return state;\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./gameReducer\"\nimport displayReducer from \"./displayReducer\"\nimport playerReducer from \"./playerReducer\"\nimport statsReducer from \"./statsReducer\"\nimport authenticateReducer from \"./authenticateReducer\"\n\nexport default combineReducers({\n    games: gameReducer,\n    display: displayReducer,\n    players: playerReducer,\n    stats: statsReducer,\n    authenticate: authenticateReducer,\n})","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {}\nconst middleware = [thunk]\n\n// createStore is the function for creating the Redux store\n\n// since it crashes on Safari, and Chrome in incognito mode, we only install Redux DevTools on Chrome in Dev Mode\nif (window.navigator.userAgent.includes('Chrome') && window.location.origin === \"http://localhost:3000\") {\n    var store = createStore(\n        rootReducer, \n        initialState, \n        compose(\n            applyMiddleware(...middleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n            )\n        );\n} else {\n    store = createStore(\n        rootReducer, \n        initialState,\n        compose(\n            applyMiddleware(...middleware)\n            )\n        )\n}\n\n\nexport default store;","\nimport React from 'react';\n// React router\nimport { Switch, BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// const Home = React.lazy(() => import(\"./pages/Home\"));\nimport Home from \"./pages/HomePage.js\";\nimport Draft from \"./pages/DraftPage.js\";\nimport Player from \"./pages/PlayerPage.js\";\nimport Stats from \"./pages/StatsPage.js\";\nimport Records from \"./pages/RecordsPage.js\";\nimport Login from \"./pages/LoginPage.js\";\nimport './styles/css/App.css';\n\n// Redux \nimport { Provider } from 'react-redux'\nimport store from \"./js/store\"\n// Font-Awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons'\nimport { \n  faChevronUp, \n  faChevronDown, \n  faMinusCircle, \n  faTimesCircle, \n  faArrowCircleLeft, \n  faAngleRight, \n  faPlusCircle, \n  faTimes, \n  faPlus, \n  faCaretDown, \n  faCaretRight, \n  faLongArrowAltUp, \n  faLongArrowAltDown, \n  faCircle,\n  faLock,\n  faUnlockAlt,\n  // faSquare,\n  faCheckSquare\n  } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faChevronUp, faChevronDown, faMinusCircle, faTimesCircle, faArrowAltCircleRight, faArrowCircleLeft, faAngleRight, faPlusCircle, faMinusCircle, faTimes, faPlus, faCaretDown, faCaretRight, faLongArrowAltUp, faLongArrowAltDown, faCircle, faLock, faUnlockAlt, /* faSquare,*/ faCheckSquare)\n// const Records = React.lazy(() => import('./pages/Records'));\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={Home} />\n          <Route path=\"/Draft\" component={Draft} />\n          <Route path=\"/Player\" component={Player} />\n          <Route path=\"/Stats\" component={Stats} />\n          <Route path=\"/Records\" component={Records} />\n          {/* <Route path=\"/Records\" render={() => (<Suspense fallback={<div>Loading...</div>}> <Records /></Suspense>)}/> */}\n          <Route path=\"/Login\" component={Login} />\n          <Route path=\"/*\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  </Provider>\n\n);\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/css/index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/logo_sm.afca9f0c.jpeg\";"],"sourceRoot":""}